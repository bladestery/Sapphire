/*
 * Stub for class boofcv.factory.segmentation.FactoryImageSegmentation
 * Generated by Sapphire Compiler (sc).
 */
package boofcv.factory.segmentation.stubs;


public final class FactoryImageSegmentation_Stub extends boofcv.factory.segmentation.FactoryImageSegmentation implements sapphire.common.AppObjectStub {

    sapphire.policy.SapphirePolicy.SapphireClientPolicy $__client = null;
    boolean $__directInvocation = false;

    public FactoryImageSegmentation_Stub () {
        super();
    }


    public void $__initialize(sapphire.policy.SapphirePolicy.SapphireClientPolicy client) {
        $__client = client;
    }

    public void $__initialize(boolean directInvocation) {
        $__directInvocation = directInvocation;
    }

    public Object $__clone() throws CloneNotSupportedException {
        return super.clone();
    }



    // Implementation of watershed(ConfigWatershed, ImageType, FactorySegmentationAlg)
    public boofcv.abst.segmentation.ImageSuperpixels watershed(boofcv.factory.segmentation.ConfigWatershed $param_ConfigWatershed_1, boofcv.struct.image.ImageType $param_ImageType_2, boofcv.factory.segmentation.FactorySegmentationAlg $param_FactorySegmentationAlg_3) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.watershed( $param_ConfigWatershed_1,  $param_ImageType_2,  $param_FactorySegmentationAlg_3);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public <T> boofcv.abst.segmentation.ImageSuperpixels<T> boofcv.factory.segmentation.FactoryImageSegmentation.watershed(boofcv.factory.segmentation.ConfigWatershed,boofcv.struct.image.ImageType<T>,boofcv.factory.segmentation.FactorySegmentationAlg)";
                $__params.add($param_ConfigWatershed_1);
                $__params.add($param_ImageType_2);
                $__params.add($param_FactorySegmentationAlg_3);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((boofcv.abst.segmentation.ImageSuperpixels) $__result);
    }

    // Implementation of slic(ConfigSlic, ImageType, ImageType, FactorySegmentationAlg)
    public boofcv.abst.segmentation.ImageSuperpixels slic(boofcv.factory.segmentation.ConfigSlic $param_ConfigSlic_1, boofcv.struct.image.ImageType $param_ImageType_2, boofcv.struct.image.ImageType $param_ImageType_3, boofcv.factory.segmentation.FactorySegmentationAlg $param_FactorySegmentationAlg_4) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.slic( $param_ConfigSlic_1,  $param_ImageType_2,  $param_ImageType_3,  $param_FactorySegmentationAlg_4);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public <T> boofcv.abst.segmentation.ImageSuperpixels<T> boofcv.factory.segmentation.FactoryImageSegmentation.slic(boofcv.factory.segmentation.ConfigSlic,boofcv.struct.image.ImageType<T>,boofcv.struct.image.ImageType,boofcv.factory.segmentation.FactorySegmentationAlg)";
                $__params.add($param_ConfigSlic_1);
                $__params.add($param_ImageType_2);
                $__params.add($param_ImageType_3);
                $__params.add($param_FactorySegmentationAlg_4);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((boofcv.abst.segmentation.ImageSuperpixels) $__result);
    }

    // Implementation of meanShift(ConfigSegmentMeanShift, ImageType, FactoryImageBorder, FactorySegmentationAlg)
    public boofcv.abst.segmentation.ImageSuperpixels meanShift(boofcv.factory.segmentation.ConfigSegmentMeanShift $param_ConfigSegmentMeanShift_1, boofcv.struct.image.ImageType $param_ImageType_2, boofcv.core.image.border.FactoryImageBorder $param_FactoryImageBorder_3, boofcv.factory.segmentation.FactorySegmentationAlg $param_FactorySegmentationAlg_4) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.meanShift( $param_ConfigSegmentMeanShift_1,  $param_ImageType_2,  $param_FactoryImageBorder_3,  $param_FactorySegmentationAlg_4);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public <T> boofcv.abst.segmentation.ImageSuperpixels<T> boofcv.factory.segmentation.FactoryImageSegmentation.meanShift(boofcv.factory.segmentation.ConfigSegmentMeanShift,boofcv.struct.image.ImageType<T>,boofcv.core.image.border.FactoryImageBorder,boofcv.factory.segmentation.FactorySegmentationAlg)";
                $__params.add($param_ConfigSegmentMeanShift_1);
                $__params.add($param_ImageType_2);
                $__params.add($param_FactoryImageBorder_3);
                $__params.add($param_FactorySegmentationAlg_4);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((boofcv.abst.segmentation.ImageSuperpixels) $__result);
    }

    // Implementation of fh04(ConfigFh04, ImageType, FactorySegmentationAlg)
    public boofcv.abst.segmentation.ImageSuperpixels fh04(boofcv.factory.segmentation.ConfigFh04 $param_ConfigFh04_1, boofcv.struct.image.ImageType $param_ImageType_2, boofcv.factory.segmentation.FactorySegmentationAlg $param_FactorySegmentationAlg_3) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.fh04( $param_ConfigFh04_1,  $param_ImageType_2,  $param_FactorySegmentationAlg_3);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public <T> boofcv.abst.segmentation.ImageSuperpixels<T> boofcv.factory.segmentation.FactoryImageSegmentation.fh04(boofcv.factory.segmentation.ConfigFh04,boofcv.struct.image.ImageType<T>,boofcv.factory.segmentation.FactorySegmentationAlg)";
                $__params.add($param_ConfigFh04_1);
                $__params.add($param_ImageType_2);
                $__params.add($param_FactorySegmentationAlg_3);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((boofcv.abst.segmentation.ImageSuperpixels) $__result);
    }
}
