/*
 * Stub for class boofcv.factory.background.FactoryBackgroundModel
 * Generated by Sapphire Compiler (sc).
 */
package boofcv.factory.background.stubs;


public final class FactoryBackgroundModel_Stub extends boofcv.factory.background.FactoryBackgroundModel implements sapphire.common.AppObjectStub {

    sapphire.policy.SapphirePolicy.SapphireClientPolicy $__client = null;
    boolean $__directInvocation = false;

    public FactoryBackgroundModel_Stub () {
        super();
    }


    public void $__initialize(sapphire.policy.SapphirePolicy.SapphireClientPolicy client) {
        $__client = client;
    }

    public void $__initialize(boolean directInvocation) {
        $__directInvocation = directInvocation;
    }

    public Object $__clone() throws CloneNotSupportedException {
        return super.clone();
    }



    // Implementation of stationaryGaussian(ConfigBackgroundGaussian, ImageType, ImageType)
    public boofcv.alg.background.stationary.BackgroundStationaryGaussian stationaryGaussian(boofcv.factory.background.ConfigBackgroundGaussian $param_ConfigBackgroundGaussian_1, boofcv.struct.image.ImageType $param_ImageType_2, boofcv.struct.image.ImageType $param_ImageType_3) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.stationaryGaussian( $param_ConfigBackgroundGaussian_1,  $param_ImageType_2,  $param_ImageType_3);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public <T> boofcv.alg.background.stationary.BackgroundStationaryGaussian<T> boofcv.factory.background.FactoryBackgroundModel.stationaryGaussian(boofcv.factory.background.ConfigBackgroundGaussian,boofcv.struct.image.ImageType<T>,boofcv.struct.image.ImageType)";
                $__params.add($param_ConfigBackgroundGaussian_1);
                $__params.add($param_ImageType_2);
                $__params.add($param_ImageType_3);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((boofcv.alg.background.stationary.BackgroundStationaryGaussian) $__result);
    }

    // Implementation of stationaryBasic(ConfigBackgroundBasic, ImageType, ImageType)
    public boofcv.alg.background.stationary.BackgroundStationaryBasic stationaryBasic(boofcv.factory.background.ConfigBackgroundBasic $param_ConfigBackgroundBasic_1, boofcv.struct.image.ImageType $param_ImageType_2, boofcv.struct.image.ImageType $param_ImageType_3) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.stationaryBasic( $param_ConfigBackgroundBasic_1,  $param_ImageType_2,  $param_ImageType_3);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public <T> boofcv.alg.background.stationary.BackgroundStationaryBasic<T> boofcv.factory.background.FactoryBackgroundModel.stationaryBasic(boofcv.factory.background.ConfigBackgroundBasic,boofcv.struct.image.ImageType<T>,boofcv.struct.image.ImageType)";
                $__params.add($param_ConfigBackgroundBasic_1);
                $__params.add($param_ImageType_2);
                $__params.add($param_ImageType_3);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((boofcv.alg.background.stationary.BackgroundStationaryBasic) $__result);
    }

    // Implementation of movingGaussian(ConfigBackgroundGaussian, Point2Transform2Model_F32, ImageType, ImageType, FactoryImageBorder, FactoryInterpolation)
    public boofcv.alg.background.moving.BackgroundMovingGaussian movingGaussian(boofcv.factory.background.ConfigBackgroundGaussian $param_ConfigBackgroundGaussian_1, boofcv.struct.distort.Point2Transform2Model_F32 $param_Point2Transform2Model_F32_2, boofcv.struct.image.ImageType $param_ImageType_3, boofcv.struct.image.ImageType $param_ImageType_4, boofcv.core.image.border.FactoryImageBorder $param_FactoryImageBorder_5, boofcv.factory.interpolate.FactoryInterpolation $param_FactoryInterpolation_6) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.movingGaussian( $param_ConfigBackgroundGaussian_1,  $param_Point2Transform2Model_F32_2,  $param_ImageType_3,  $param_ImageType_4,  $param_FactoryImageBorder_5,  $param_FactoryInterpolation_6);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public <T,Motion> boofcv.alg.background.moving.BackgroundMovingGaussian<T, Motion> boofcv.factory.background.FactoryBackgroundModel.movingGaussian(boofcv.factory.background.ConfigBackgroundGaussian,boofcv.struct.distort.Point2Transform2Model_F32<Motion>,boofcv.struct.image.ImageType<T>,boofcv.struct.image.ImageType,boofcv.core.image.border.FactoryImageBorder,boofcv.factory.interpolate.FactoryInterpolation)";
                $__params.add($param_ConfigBackgroundGaussian_1);
                $__params.add($param_Point2Transform2Model_F32_2);
                $__params.add($param_ImageType_3);
                $__params.add($param_ImageType_4);
                $__params.add($param_FactoryImageBorder_5);
                $__params.add($param_FactoryInterpolation_6);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((boofcv.alg.background.moving.BackgroundMovingGaussian) $__result);
    }

    // Implementation of movingBasic(ConfigBackgroundBasic, Point2Transform2Model_F32, ImageType, ImageType, FactoryImageBorder, FactoryInterpolation)
    public boofcv.alg.background.moving.BackgroundMovingBasic movingBasic(boofcv.factory.background.ConfigBackgroundBasic $param_ConfigBackgroundBasic_1, boofcv.struct.distort.Point2Transform2Model_F32 $param_Point2Transform2Model_F32_2, boofcv.struct.image.ImageType $param_ImageType_3, boofcv.struct.image.ImageType $param_ImageType_4, boofcv.core.image.border.FactoryImageBorder $param_FactoryImageBorder_5, boofcv.factory.interpolate.FactoryInterpolation $param_FactoryInterpolation_6) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.movingBasic( $param_ConfigBackgroundBasic_1,  $param_Point2Transform2Model_F32_2,  $param_ImageType_3,  $param_ImageType_4,  $param_FactoryImageBorder_5,  $param_FactoryInterpolation_6);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public <T,Motion> boofcv.alg.background.moving.BackgroundMovingBasic<T, Motion> boofcv.factory.background.FactoryBackgroundModel.movingBasic(boofcv.factory.background.ConfigBackgroundBasic,boofcv.struct.distort.Point2Transform2Model_F32<Motion>,boofcv.struct.image.ImageType<T>,boofcv.struct.image.ImageType,boofcv.core.image.border.FactoryImageBorder,boofcv.factory.interpolate.FactoryInterpolation)";
                $__params.add($param_ConfigBackgroundBasic_1);
                $__params.add($param_Point2Transform2Model_F32_2);
                $__params.add($param_ImageType_3);
                $__params.add($param_ImageType_4);
                $__params.add($param_FactoryImageBorder_5);
                $__params.add($param_FactoryInterpolation_6);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((boofcv.alg.background.moving.BackgroundMovingBasic) $__result);
    }
}
