/*
 * Stub for class boofcv.factory.distort.FactoryDistort
 * Generated by Sapphire Compiler (sc).
 */
package boofcv.factory.distort.stubs;


public final class FactoryDistort_Stub extends boofcv.factory.distort.FactoryDistort implements sapphire.common.AppObjectStub {

    sapphire.policy.SapphirePolicy.SapphireClientPolicy $__client = null;
    boolean $__directInvocation = false;

    public FactoryDistort_Stub () {
        super();
    }


    public void $__initialize(sapphire.policy.SapphirePolicy.SapphireClientPolicy client) {
        $__client = client;
    }

    public void $__initialize(boolean directInvocation) {
        $__directInvocation = directInvocation;
    }

    public Object $__clone() throws CloneNotSupportedException {
        return super.clone();
    }



    // Implementation of distortSB(boolean, InterpolatePixelS, Class)
    public boofcv.alg.distort.ImageDistort distortSB(boolean $param_boolean_1, boofcv.alg.interpolate.InterpolatePixelS $param_InterpolatePixelS_2, java.lang.Class $param_Class_3) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.distortSB( $param_boolean_1,  $param_InterpolatePixelS_2,  $param_Class_3);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public <Input,Output> boofcv.alg.distort.ImageDistort<Input, Output> boofcv.factory.distort.FactoryDistort.distortSB(boolean,boofcv.alg.interpolate.InterpolatePixelS<Input>,java.lang.Class<Output>)";
                $__params.add($param_boolean_1);
                $__params.add($param_InterpolatePixelS_2);
                $__params.add($param_Class_3);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((boofcv.alg.distort.ImageDistort) $__result);
    }

    // Implementation of distortPL(boolean, InterpolatePixelS, Class)
    public boofcv.alg.distort.ImageDistort distortPL(boolean $param_boolean_1, boofcv.alg.interpolate.InterpolatePixelS $param_InterpolatePixelS_2, java.lang.Class $param_Class_3) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.distortPL( $param_boolean_1,  $param_InterpolatePixelS_2,  $param_Class_3);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public <Input,Output> boofcv.alg.distort.ImageDistort<boofcv.struct.image.Planar<Input>, boofcv.struct.image.Planar<Output>> boofcv.factory.distort.FactoryDistort.distortPL(boolean,boofcv.alg.interpolate.InterpolatePixelS<Input>,java.lang.Class<Output>)";
                $__params.add($param_boolean_1);
                $__params.add($param_InterpolatePixelS_2);
                $__params.add($param_Class_3);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((boofcv.alg.distort.ImageDistort) $__result);
    }

    // Implementation of distortIL(boolean, InterpolatePixelMB, ImageType)
    public boofcv.alg.distort.ImageDistort distortIL(boolean $param_boolean_1, boofcv.alg.interpolate.InterpolatePixelMB $param_InterpolatePixelMB_2, boofcv.struct.image.ImageType $param_ImageType_3) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.distortIL( $param_boolean_1,  $param_InterpolatePixelMB_2,  $param_ImageType_3);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public <Input,Output> boofcv.alg.distort.ImageDistort<Input, Output> boofcv.factory.distort.FactoryDistort.distortIL(boolean,boofcv.alg.interpolate.InterpolatePixelMB<Input>,boofcv.struct.image.ImageType<Output>)";
                $__params.add($param_boolean_1);
                $__params.add($param_InterpolatePixelMB_2);
                $__params.add($param_ImageType_3);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((boofcv.alg.distort.ImageDistort) $__result);
    }

    // Implementation of distort(boolean, InterpolationType, BorderType, ImageType, ImageType, FactoryImageBorder, FactoryInterpolation)
    public boofcv.alg.distort.ImageDistort distort(boolean $param_boolean_1, boofcv.alg.interpolate.InterpolationType $param_InterpolationType_2, boofcv.core.image.border.BorderType $param_BorderType_3, boofcv.struct.image.ImageType $param_ImageType_4, boofcv.struct.image.ImageType $param_ImageType_5, boofcv.core.image.border.FactoryImageBorder $param_FactoryImageBorder_6, boofcv.factory.interpolate.FactoryInterpolation $param_FactoryInterpolation_7) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.distort( $param_boolean_1,  $param_InterpolationType_2,  $param_BorderType_3,  $param_ImageType_4,  $param_ImageType_5,  $param_FactoryImageBorder_6,  $param_FactoryInterpolation_7);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public <Input,Output> boofcv.alg.distort.ImageDistort<Input, Output> boofcv.factory.distort.FactoryDistort.distort(boolean,boofcv.alg.interpolate.InterpolationType,boofcv.core.image.border.BorderType,boofcv.struct.image.ImageType<Input>,boofcv.struct.image.ImageType<Output>,boofcv.core.image.border.FactoryImageBorder,boofcv.factory.interpolate.FactoryInterpolation)";
                $__params.add($param_boolean_1);
                $__params.add($param_InterpolationType_2);
                $__params.add($param_BorderType_3);
                $__params.add($param_ImageType_4);
                $__params.add($param_ImageType_5);
                $__params.add($param_FactoryImageBorder_6);
                $__params.add($param_FactoryInterpolation_7);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((boofcv.alg.distort.ImageDistort) $__result);
    }

    // Implementation of distort(boolean, InterpolatePixel, ImageType)
    public boofcv.alg.distort.ImageDistort distort(boolean $param_boolean_1, boofcv.alg.interpolate.InterpolatePixel $param_InterpolatePixel_2, boofcv.struct.image.ImageType $param_ImageType_3) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.distort( $param_boolean_1,  $param_InterpolatePixel_2,  $param_ImageType_3);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public <Input,Output> boofcv.alg.distort.ImageDistort<Input, Output> boofcv.factory.distort.FactoryDistort.distort(boolean,boofcv.alg.interpolate.InterpolatePixel<Input>,boofcv.struct.image.ImageType<Output>)";
                $__params.add($param_boolean_1);
                $__params.add($param_InterpolatePixel_2);
                $__params.add($param_ImageType_3);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((boofcv.alg.distort.ImageDistort) $__result);
    }
}
