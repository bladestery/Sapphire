/*
 * Stub for class boofcv.struct.image.ImageType
 * Generated by Sapphire Compiler (sc).
 */
package boofcv.struct.image.stubs;


public final class ImageType_Stub extends boofcv.struct.image.ImageType implements sapphire.common.AppObjectStub {

    sapphire.policy.SapphirePolicy.SapphireClientPolicy $__client = null;
    boolean $__directInvocation = false;

    public ImageType_Stub () {
        super();
    }

    public ImageType_Stub (boofcv.struct.image.ImageType.Family $param_ImageType$Family_1, boofcv.struct.image.ImageDataType $param_ImageDataType_2, int $param_int_3) {
        super($param_ImageType$Family_1, $param_ImageDataType_2, $param_int_3);
    }


    public void $__initialize(sapphire.policy.SapphirePolicy.SapphireClientPolicy client) {
        $__client = client;
    }

    public void $__initialize(boolean directInvocation) {
        $__directInvocation = directInvocation;
    }

    public Object $__clone() throws CloneNotSupportedException {
        return super.clone();
    }



    // Implementation of toString()
    public java.lang.String toString() {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.toString();
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public java.lang.String boofcv.struct.image.ImageType.toString()";
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((java.lang.String) $__result);
    }

    // Implementation of single(Class)
    public boofcv.struct.image.ImageType single(java.lang.Class $param_Class_1) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.single( $param_Class_1);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public <I> boofcv.struct.image.ImageType<I> boofcv.struct.image.ImageType.single(java.lang.Class<I>)";
                $__params.add($param_Class_1);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((boofcv.struct.image.ImageType) $__result);
    }

    // Implementation of single(ImageDataType)
    public boofcv.struct.image.ImageType single(boofcv.struct.image.ImageDataType $param_ImageDataType_1) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.single( $param_ImageDataType_1);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public <I> boofcv.struct.image.ImageType<I> boofcv.struct.image.ImageType.single(boofcv.struct.image.ImageDataType)";
                $__params.add($param_ImageDataType_1);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((boofcv.struct.image.ImageType) $__result);
    }

    // Implementation of pl(int, Class)
    public boofcv.struct.image.ImageType pl(int $param_int_1, java.lang.Class $param_Class_2) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.pl( $param_int_1,  $param_Class_2);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public <I> boofcv.struct.image.ImageType<boofcv.struct.image.Planar<I>> boofcv.struct.image.ImageType.pl(int,java.lang.Class<I>)";
                $__params.add($param_int_1);
                $__params.add($param_Class_2);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((boofcv.struct.image.ImageType) $__result);
    }

    // Implementation of pl(int, ImageDataType)
    public boofcv.struct.image.ImageType pl(int $param_int_1, boofcv.struct.image.ImageDataType $param_ImageDataType_2) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.pl( $param_int_1,  $param_ImageDataType_2);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public <I> boofcv.struct.image.ImageType<boofcv.struct.image.Planar<I>> boofcv.struct.image.ImageType.pl(int,boofcv.struct.image.ImageDataType)";
                $__params.add($param_int_1);
                $__params.add($param_ImageDataType_2);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((boofcv.struct.image.ImageType) $__result);
    }

    // Implementation of il(int, Class)
    public boofcv.struct.image.ImageType il(int $param_int_1, java.lang.Class $param_Class_2) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.il( $param_int_1,  $param_Class_2);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public <I> boofcv.struct.image.ImageType<I> boofcv.struct.image.ImageType.il(int,java.lang.Class<I>)";
                $__params.add($param_int_1);
                $__params.add($param_Class_2);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((boofcv.struct.image.ImageType) $__result);
    }

    // Implementation of il(int, ImageDataType)
    public boofcv.struct.image.ImageType il(int $param_int_1, boofcv.struct.image.ImageDataType $param_ImageDataType_2) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.il( $param_int_1,  $param_ImageDataType_2);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public <I> boofcv.struct.image.ImageType<I> boofcv.struct.image.ImageType.il(int,boofcv.struct.image.ImageDataType)";
                $__params.add($param_int_1);
                $__params.add($param_ImageDataType_2);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((boofcv.struct.image.ImageType) $__result);
    }

    // Implementation of getNumBands()
    public int getNumBands() {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.getNumBands();
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public int boofcv.struct.image.ImageType.getNumBands()";
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((java.lang.Integer) $__result).intValue();
    }

    // Implementation of getImageClass(ImageType.Family, ImageDataType)
    public java.lang.Class getImageClass(boofcv.struct.image.ImageType.Family $param_ImageType$Family_1, boofcv.struct.image.ImageDataType $param_ImageDataType_2) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.getImageClass( $param_ImageType$Family_1,  $param_ImageDataType_2);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public java.lang.Class boofcv.struct.image.ImageType.getImageClass(boofcv.struct.image.ImageType$Family,boofcv.struct.image.ImageDataType)";
                $__params.add($param_ImageType$Family_1);
                $__params.add($param_ImageDataType_2);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((java.lang.Class) $__result);
    }

    // Implementation of getImageClass()
    public java.lang.Class getImageClass() {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.getImageClass();
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public java.lang.Class boofcv.struct.image.ImageType.getImageClass()";
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((java.lang.Class) $__result);
    }

    // Implementation of getFamily()
    public boofcv.struct.image.ImageType.Family getFamily() {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.getFamily();
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public boofcv.struct.image.ImageType$Family boofcv.struct.image.ImageType.getFamily()";
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((boofcv.struct.image.ImageType.Family) $__result);
    }

    // Implementation of getDataType()
    public boofcv.struct.image.ImageDataType getDataType() {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.getDataType();
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public boofcv.struct.image.ImageDataType boofcv.struct.image.ImageType.getDataType()";
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((boofcv.struct.image.ImageDataType) $__result);
    }

    // Implementation of createImage(int, int)
    public boofcv.struct.image.ImageBase createImage(int $param_int_1, int $param_int_2) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.createImage( $param_int_1,  $param_int_2);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public T boofcv.struct.image.ImageType.createImage(int,int)";
                $__params.add($param_int_1);
                $__params.add($param_int_2);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((boofcv.struct.image.ImageBase) $__result);
    }

    // Implementation of createArray(int)
    public boofcv.struct.image.ImageBase[] createArray(int $param_int_1) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.createArray( $param_int_1);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public T[] boofcv.struct.image.ImageType.createArray(int)";
                $__params.add($param_int_1);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((boofcv.struct.image.ImageBase[]) $__result);
    }
}
