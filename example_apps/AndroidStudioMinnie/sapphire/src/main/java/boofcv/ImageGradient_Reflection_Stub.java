/*
 * Stub for class boofcv.abst.filter.derivative.ImageGradient_Reflection
 * Generated by Sapphire Compiler (sc).
 */
package boofcv.abst.filter.derivative.stubs;


public final class ImageGradient_Reflection_Stub extends boofcv.abst.filter.derivative.ImageGradient_Reflection implements sapphire.common.AppObjectStub {

    sapphire.policy.SapphirePolicy.SapphireClientPolicy $__client = null;
    boolean $__directInvocation = false;

    public ImageGradient_Reflection_Stub (java.lang.reflect.Method $param_Method_1, boofcv.core.image.border.FactoryImageBorder $param_FactoryImageBorder_2) {
        super($param_Method_1, $param_FactoryImageBorder_2);
    }


    public void $__initialize(sapphire.policy.SapphirePolicy.SapphireClientPolicy client) {
        $__client = client;
    }

    public void $__initialize(boolean directInvocation) {
        $__directInvocation = directInvocation;
    }

    public Object $__clone() throws CloneNotSupportedException {
        return super.clone();
    }



    // Implementation of setBorderType(BorderType, FactoryImageBorder)
    public void setBorderType(boofcv.core.image.border.BorderType $param_BorderType_1, boofcv.core.image.border.FactoryImageBorder $param_FactoryImageBorder_2) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.setBorderType( $param_BorderType_1,  $param_FactoryImageBorder_2);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.abst.filter.derivative.ImageGradient_Reflection.setBorderType(boofcv.core.image.border.BorderType,boofcv.core.image.border.FactoryImageBorder)";
                $__params.add($param_BorderType_1);
                $__params.add($param_FactoryImageBorder_2);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of process(ImageGray, ImageGray, ImageGray, InputSanityCheck, DerivativeHelperFunctions, ConvolveImageNoBorder, ConvolveJustBorder_General, GradientSobel_Outer, GradientSobel_UnrolledOuter)
    public void process(boofcv.struct.image.ImageGray $param_ImageGray_1, boofcv.struct.image.ImageGray $param_ImageGray_2, boofcv.struct.image.ImageGray $param_ImageGray_3, boofcv.alg.InputSanityCheck $param_InputSanityCheck_4, boofcv.alg.filter.derivative.DerivativeHelperFunctions $param_DerivativeHelperFunctions_5, boofcv.alg.filter.convolve.ConvolveImageNoBorder $param_ConvolveImageNoBorder_6, boofcv.alg.filter.convolve.border.ConvolveJustBorder_General $param_ConvolveJustBorder_General_7, boofcv.alg.filter.derivative.impl.GradientSobel_Outer $param_GradientSobel_Outer_8, boofcv.alg.filter.derivative.impl.GradientSobel_UnrolledOuter $param_GradientSobel_UnrolledOuter_9) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.process( $param_ImageGray_1,  $param_ImageGray_2,  $param_ImageGray_3,  $param_InputSanityCheck_4,  $param_DerivativeHelperFunctions_5,  $param_ConvolveImageNoBorder_6,  $param_ConvolveJustBorder_General_7,  $param_GradientSobel_Outer_8,  $param_GradientSobel_UnrolledOuter_9);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.abst.filter.derivative.ImageGradient_Reflection.process(Input,Output,Output,boofcv.alg.InputSanityCheck,boofcv.alg.filter.derivative.DerivativeHelperFunctions,boofcv.alg.filter.convolve.ConvolveImageNoBorder,boofcv.alg.filter.convolve.border.ConvolveJustBorder_General,boofcv.alg.filter.derivative.impl.GradientSobel_Outer,boofcv.alg.filter.derivative.impl.GradientSobel_UnrolledOuter)";
                $__params.add($param_ImageGray_1);
                $__params.add($param_ImageGray_2);
                $__params.add($param_ImageGray_3);
                $__params.add($param_InputSanityCheck_4);
                $__params.add($param_DerivativeHelperFunctions_5);
                $__params.add($param_ConvolveImageNoBorder_6);
                $__params.add($param_ConvolveJustBorder_General_7);
                $__params.add($param_GradientSobel_Outer_8);
                $__params.add($param_GradientSobel_UnrolledOuter_9);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of getDerivativeType(ImageType)
    public boofcv.struct.image.ImageType getDerivativeType(boofcv.struct.image.ImageType $param_ImageType_1) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.getDerivativeType( $param_ImageType_1);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public boofcv.struct.image.ImageType<Output> boofcv.abst.filter.derivative.ImageGradient_Reflection.getDerivativeType(boofcv.struct.image.ImageType)";
                $__params.add($param_ImageType_1);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((boofcv.struct.image.ImageType) $__result);
    }

    // Implementation of getBorderType()
    public boofcv.core.image.border.BorderType getBorderType() {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.getBorderType();
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public boofcv.core.image.border.BorderType boofcv.abst.filter.derivative.ImageGradient_Reflection.getBorderType()";
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((boofcv.core.image.border.BorderType) $__result);
    }

    // Implementation of getBorder()
    public int getBorder() {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.getBorder();
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public int boofcv.abst.filter.derivative.ImageGradient_Reflection.getBorder()";
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((java.lang.Integer) $__result).intValue();
    }
}
