/*
 * Stub for class boofcv.abst.feature.detect.line.DetectLineSegmentsGridRansac
 * Generated by Sapphire Compiler (sc).
 */
package boofcv.abst.feature.detect.line.stubs;


public final class DetectLineSegmentsGridRansac_Stub extends boofcv.abst.feature.detect.line.DetectLineSegmentsGridRansac implements sapphire.common.AppObjectStub {

    sapphire.policy.SapphirePolicy.SapphireClientPolicy $__client = null;
    boolean $__directInvocation = false;

    public DetectLineSegmentsGridRansac_Stub (boofcv.alg.feature.detect.line.GridRansacLineDetector $param_GridRansacLineDetector_1, boofcv.alg.feature.detect.line.ConnectLinesGrid $param_ConnectLinesGrid_2, boofcv.abst.filter.derivative.ImageGradient $param_ImageGradient_3, double $param_double_4, java.lang.Class $param_Class_5, java.lang.Class $param_Class_6, boofcv.core.image.GeneralizedImageOps $param_GeneralizedImageOps_7) {
        super($param_GridRansacLineDetector_1, $param_ConnectLinesGrid_2, $param_ImageGradient_3, $param_double_4, $param_Class_5, $param_Class_6, $param_GeneralizedImageOps_7);
    }


    public void $__initialize(sapphire.policy.SapphirePolicy.SapphireClientPolicy client) {
        $__client = client;
    }

    public void $__initialize(boolean directInvocation) {
        $__directInvocation = directInvocation;
    }

    public Object $__clone() throws CloneNotSupportedException {
        return super.clone();
    }



    // Implementation of detect(ImageGray, InputSanityCheck, DerivativeHelperFunctions, ConvolveImageNoBorder, GradientToEdgeFeatures, ThresholdImageOps, GeneralizedImageOps, GGradientToEdgeFeatures, GThresholdImageOps, ConvolveJustBorder_General, GradientSobel_Outer, GradientSobel_UnrolledOuter)
    public java.util.List detect(boofcv.struct.image.ImageGray $param_ImageGray_1, boofcv.alg.InputSanityCheck $param_InputSanityCheck_2, boofcv.alg.filter.derivative.DerivativeHelperFunctions $param_DerivativeHelperFunctions_3, boofcv.alg.filter.convolve.ConvolveImageNoBorder $param_ConvolveImageNoBorder_4, boofcv.alg.feature.detect.edge.GradientToEdgeFeatures $param_GradientToEdgeFeatures_5, boofcv.alg.filter.binary.ThresholdImageOps $param_ThresholdImageOps_6, boofcv.core.image.GeneralizedImageOps $param_GeneralizedImageOps_7, boofcv.alg.feature.detect.edge.GGradientToEdgeFeatures $param_GGradientToEdgeFeatures_8, boofcv.alg.filter.binary.GThresholdImageOps $param_GThresholdImageOps_9, boofcv.alg.filter.convolve.border.ConvolveJustBorder_General $param_ConvolveJustBorder_General_10, boofcv.alg.filter.derivative.impl.GradientSobel_Outer $param_GradientSobel_Outer_11, boofcv.alg.filter.derivative.impl.GradientSobel_UnrolledOuter $param_GradientSobel_UnrolledOuter_12) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.detect( $param_ImageGray_1,  $param_InputSanityCheck_2,  $param_DerivativeHelperFunctions_3,  $param_ConvolveImageNoBorder_4,  $param_GradientToEdgeFeatures_5,  $param_ThresholdImageOps_6,  $param_GeneralizedImageOps_7,  $param_GGradientToEdgeFeatures_8,  $param_GThresholdImageOps_9,  $param_ConvolveJustBorder_General_10,  $param_GradientSobel_Outer_11,  $param_GradientSobel_UnrolledOuter_12);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public java.util.List<georegression.struct.line.LineSegment2D_F32> boofcv.abst.feature.detect.line.DetectLineSegmentsGridRansac.detect(T,boofcv.alg.InputSanityCheck,boofcv.alg.filter.derivative.DerivativeHelperFunctions,boofcv.alg.filter.convolve.ConvolveImageNoBorder,boofcv.alg.feature.detect.edge.GradientToEdgeFeatures,boofcv.alg.filter.binary.ThresholdImageOps,boofcv.core.image.GeneralizedImageOps,boofcv.alg.feature.detect.edge.GGradientToEdgeFeatures,boofcv.alg.filter.binary.GThresholdImageOps,boofcv.alg.filter.convolve.border.ConvolveJustBorder_General,boofcv.alg.filter.derivative.impl.GradientSobel_Outer,boofcv.alg.filter.derivative.impl.GradientSobel_UnrolledOuter)";
                $__params.add($param_ImageGray_1);
                $__params.add($param_InputSanityCheck_2);
                $__params.add($param_DerivativeHelperFunctions_3);
                $__params.add($param_ConvolveImageNoBorder_4);
                $__params.add($param_GradientToEdgeFeatures_5);
                $__params.add($param_ThresholdImageOps_6);
                $__params.add($param_GeneralizedImageOps_7);
                $__params.add($param_GGradientToEdgeFeatures_8);
                $__params.add($param_GThresholdImageOps_9);
                $__params.add($param_ConvolveJustBorder_General_10);
                $__params.add($param_GradientSobel_Outer_11);
                $__params.add($param_GradientSobel_UnrolledOuter_12);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((java.util.List) $__result);
    }
}
