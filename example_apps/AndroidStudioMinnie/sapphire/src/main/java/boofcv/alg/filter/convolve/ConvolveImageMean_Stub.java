/*
 * Stub for class boofcv.alg.filter.convolve.ConvolveImageMean
 * Generated by Sapphire Compiler (sc).
 */
package boofcv.alg.filter.convolve.stubs;


public final class ConvolveImageMean_Stub extends boofcv.alg.filter.convolve.ConvolveImageMean implements sapphire.common.AppObjectStub {

    sapphire.policy.SapphirePolicy.SapphireClientPolicy $__client = null;
    boolean $__directInvocation = false;

    public ConvolveImageMean_Stub () {
        super();
    }


    public void $__initialize(sapphire.policy.SapphirePolicy.SapphireClientPolicy client) {
        $__client = client;
    }

    public void $__initialize(boolean directInvocation) {
        $__directInvocation = directInvocation;
    }

    public Object $__clone() throws CloneNotSupportedException {
        return super.clone();
    }



    // Implementation of vertical(GrayU8, GrayI8, int, InputSanityCheck, ConvolveNormalized, ConvolveNormalizedNaive, ConvolveImageNoBorder, ConvolveNormalized_JustBorder, ImplConvolveMean)
    public void vertical(boofcv.struct.image.GrayU8 $param_GrayU8_1, boofcv.struct.image.GrayI8 $param_GrayI8_2, int $param_int_3, boofcv.alg.InputSanityCheck $param_InputSanityCheck_4, boofcv.alg.filter.convolve.ConvolveNormalized $param_ConvolveNormalized_5, boofcv.alg.filter.convolve.normalized.ConvolveNormalizedNaive $param_ConvolveNormalizedNaive_6, boofcv.alg.filter.convolve.ConvolveImageNoBorder $param_ConvolveImageNoBorder_7, boofcv.alg.filter.convolve.normalized.ConvolveNormalized_JustBorder $param_ConvolveNormalized_JustBorder_8, boofcv.alg.filter.convolve.noborder.ImplConvolveMean $param_ImplConvolveMean_9) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.vertical( $param_GrayU8_1,  $param_GrayI8_2,  $param_int_3,  $param_InputSanityCheck_4,  $param_ConvolveNormalized_5,  $param_ConvolveNormalizedNaive_6,  $param_ConvolveImageNoBorder_7,  $param_ConvolveNormalized_JustBorder_8,  $param_ImplConvolveMean_9);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.filter.convolve.ConvolveImageMean.vertical(boofcv.struct.image.GrayU8,boofcv.struct.image.GrayI8,int,boofcv.alg.InputSanityCheck,boofcv.alg.filter.convolve.ConvolveNormalized,boofcv.alg.filter.convolve.normalized.ConvolveNormalizedNaive,boofcv.alg.filter.convolve.ConvolveImageNoBorder,boofcv.alg.filter.convolve.normalized.ConvolveNormalized_JustBorder,boofcv.alg.filter.convolve.noborder.ImplConvolveMean)";
                $__params.add($param_GrayU8_1);
                $__params.add($param_GrayI8_2);
                $__params.add($param_int_3);
                $__params.add($param_InputSanityCheck_4);
                $__params.add($param_ConvolveNormalized_5);
                $__params.add($param_ConvolveNormalizedNaive_6);
                $__params.add($param_ConvolveImageNoBorder_7);
                $__params.add($param_ConvolveNormalized_JustBorder_8);
                $__params.add($param_ImplConvolveMean_9);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of vertical(GrayS16, GrayI16, int, InputSanityCheck, ConvolveNormalized, ConvolveNormalizedNaive, ConvolveImageNoBorder, ConvolveNormalized_JustBorder, ImplConvolveMean)
    public void vertical(boofcv.struct.image.GrayS16 $param_GrayS16_1, boofcv.struct.image.GrayI16 $param_GrayI16_2, int $param_int_3, boofcv.alg.InputSanityCheck $param_InputSanityCheck_4, boofcv.alg.filter.convolve.ConvolveNormalized $param_ConvolveNormalized_5, boofcv.alg.filter.convolve.normalized.ConvolveNormalizedNaive $param_ConvolveNormalizedNaive_6, boofcv.alg.filter.convolve.ConvolveImageNoBorder $param_ConvolveImageNoBorder_7, boofcv.alg.filter.convolve.normalized.ConvolveNormalized_JustBorder $param_ConvolveNormalized_JustBorder_8, boofcv.alg.filter.convolve.noborder.ImplConvolveMean $param_ImplConvolveMean_9) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.vertical( $param_GrayS16_1,  $param_GrayI16_2,  $param_int_3,  $param_InputSanityCheck_4,  $param_ConvolveNormalized_5,  $param_ConvolveNormalizedNaive_6,  $param_ConvolveImageNoBorder_7,  $param_ConvolveNormalized_JustBorder_8,  $param_ImplConvolveMean_9);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.filter.convolve.ConvolveImageMean.vertical(boofcv.struct.image.GrayS16,boofcv.struct.image.GrayI16,int,boofcv.alg.InputSanityCheck,boofcv.alg.filter.convolve.ConvolveNormalized,boofcv.alg.filter.convolve.normalized.ConvolveNormalizedNaive,boofcv.alg.filter.convolve.ConvolveImageNoBorder,boofcv.alg.filter.convolve.normalized.ConvolveNormalized_JustBorder,boofcv.alg.filter.convolve.noborder.ImplConvolveMean)";
                $__params.add($param_GrayS16_1);
                $__params.add($param_GrayI16_2);
                $__params.add($param_int_3);
                $__params.add($param_InputSanityCheck_4);
                $__params.add($param_ConvolveNormalized_5);
                $__params.add($param_ConvolveNormalizedNaive_6);
                $__params.add($param_ConvolveImageNoBorder_7);
                $__params.add($param_ConvolveNormalized_JustBorder_8);
                $__params.add($param_ImplConvolveMean_9);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of vertical(GrayF64, GrayF64, int, InputSanityCheck, ConvolveNormalized, ConvolveNormalizedNaive, ConvolveImageNoBorder, ConvolveNormalized_JustBorder, ImplConvolveMean)
    public void vertical(boofcv.struct.image.GrayF64 $param_GrayF64_1, boofcv.struct.image.GrayF64 $param_GrayF64_2, int $param_int_3, boofcv.alg.InputSanityCheck $param_InputSanityCheck_4, boofcv.alg.filter.convolve.ConvolveNormalized $param_ConvolveNormalized_5, boofcv.alg.filter.convolve.normalized.ConvolveNormalizedNaive $param_ConvolveNormalizedNaive_6, boofcv.alg.filter.convolve.ConvolveImageNoBorder $param_ConvolveImageNoBorder_7, boofcv.alg.filter.convolve.normalized.ConvolveNormalized_JustBorder $param_ConvolveNormalized_JustBorder_8, boofcv.alg.filter.convolve.noborder.ImplConvolveMean $param_ImplConvolveMean_9) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.vertical( $param_GrayF64_1,  $param_GrayF64_2,  $param_int_3,  $param_InputSanityCheck_4,  $param_ConvolveNormalized_5,  $param_ConvolveNormalizedNaive_6,  $param_ConvolveImageNoBorder_7,  $param_ConvolveNormalized_JustBorder_8,  $param_ImplConvolveMean_9);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.filter.convolve.ConvolveImageMean.vertical(boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64,int,boofcv.alg.InputSanityCheck,boofcv.alg.filter.convolve.ConvolveNormalized,boofcv.alg.filter.convolve.normalized.ConvolveNormalizedNaive,boofcv.alg.filter.convolve.ConvolveImageNoBorder,boofcv.alg.filter.convolve.normalized.ConvolveNormalized_JustBorder,boofcv.alg.filter.convolve.noborder.ImplConvolveMean)";
                $__params.add($param_GrayF64_1);
                $__params.add($param_GrayF64_2);
                $__params.add($param_int_3);
                $__params.add($param_InputSanityCheck_4);
                $__params.add($param_ConvolveNormalized_5);
                $__params.add($param_ConvolveNormalizedNaive_6);
                $__params.add($param_ConvolveImageNoBorder_7);
                $__params.add($param_ConvolveNormalized_JustBorder_8);
                $__params.add($param_ImplConvolveMean_9);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of vertical(GrayF32, GrayF32, int, InputSanityCheck, ConvolveNormalized, ConvolveNormalizedNaive, ConvolveImageNoBorder, ConvolveNormalized_JustBorder, ImplConvolveMean)
    public void vertical(boofcv.struct.image.GrayF32 $param_GrayF32_1, boofcv.struct.image.GrayF32 $param_GrayF32_2, int $param_int_3, boofcv.alg.InputSanityCheck $param_InputSanityCheck_4, boofcv.alg.filter.convolve.ConvolveNormalized $param_ConvolveNormalized_5, boofcv.alg.filter.convolve.normalized.ConvolveNormalizedNaive $param_ConvolveNormalizedNaive_6, boofcv.alg.filter.convolve.ConvolveImageNoBorder $param_ConvolveImageNoBorder_7, boofcv.alg.filter.convolve.normalized.ConvolveNormalized_JustBorder $param_ConvolveNormalized_JustBorder_8, boofcv.alg.filter.convolve.noborder.ImplConvolveMean $param_ImplConvolveMean_9) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.vertical( $param_GrayF32_1,  $param_GrayF32_2,  $param_int_3,  $param_InputSanityCheck_4,  $param_ConvolveNormalized_5,  $param_ConvolveNormalizedNaive_6,  $param_ConvolveImageNoBorder_7,  $param_ConvolveNormalized_JustBorder_8,  $param_ImplConvolveMean_9);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.filter.convolve.ConvolveImageMean.vertical(boofcv.struct.image.GrayF32,boofcv.struct.image.GrayF32,int,boofcv.alg.InputSanityCheck,boofcv.alg.filter.convolve.ConvolveNormalized,boofcv.alg.filter.convolve.normalized.ConvolveNormalizedNaive,boofcv.alg.filter.convolve.ConvolveImageNoBorder,boofcv.alg.filter.convolve.normalized.ConvolveNormalized_JustBorder,boofcv.alg.filter.convolve.noborder.ImplConvolveMean)";
                $__params.add($param_GrayF32_1);
                $__params.add($param_GrayF32_2);
                $__params.add($param_int_3);
                $__params.add($param_InputSanityCheck_4);
                $__params.add($param_ConvolveNormalized_5);
                $__params.add($param_ConvolveNormalizedNaive_6);
                $__params.add($param_ConvolveImageNoBorder_7);
                $__params.add($param_ConvolveNormalized_JustBorder_8);
                $__params.add($param_ImplConvolveMean_9);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of horizontal(GrayU8, GrayU8, int, InputSanityCheck, ConvolveNormalized, ConvolveNormalizedNaive, ConvolveImageNoBorder, ConvolveNormalized_JustBorder, ImplConvolveMean)
    public void horizontal(boofcv.struct.image.GrayU8 $param_GrayU8_1, boofcv.struct.image.GrayU8 $param_GrayU8_2, int $param_int_3, boofcv.alg.InputSanityCheck $param_InputSanityCheck_4, boofcv.alg.filter.convolve.ConvolveNormalized $param_ConvolveNormalized_5, boofcv.alg.filter.convolve.normalized.ConvolveNormalizedNaive $param_ConvolveNormalizedNaive_6, boofcv.alg.filter.convolve.ConvolveImageNoBorder $param_ConvolveImageNoBorder_7, boofcv.alg.filter.convolve.normalized.ConvolveNormalized_JustBorder $param_ConvolveNormalized_JustBorder_8, boofcv.alg.filter.convolve.noborder.ImplConvolveMean $param_ImplConvolveMean_9) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.horizontal( $param_GrayU8_1,  $param_GrayU8_2,  $param_int_3,  $param_InputSanityCheck_4,  $param_ConvolveNormalized_5,  $param_ConvolveNormalizedNaive_6,  $param_ConvolveImageNoBorder_7,  $param_ConvolveNormalized_JustBorder_8,  $param_ImplConvolveMean_9);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.filter.convolve.ConvolveImageMean.horizontal(boofcv.struct.image.GrayU8,boofcv.struct.image.GrayU8,int,boofcv.alg.InputSanityCheck,boofcv.alg.filter.convolve.ConvolveNormalized,boofcv.alg.filter.convolve.normalized.ConvolveNormalizedNaive,boofcv.alg.filter.convolve.ConvolveImageNoBorder,boofcv.alg.filter.convolve.normalized.ConvolveNormalized_JustBorder,boofcv.alg.filter.convolve.noborder.ImplConvolveMean)";
                $__params.add($param_GrayU8_1);
                $__params.add($param_GrayU8_2);
                $__params.add($param_int_3);
                $__params.add($param_InputSanityCheck_4);
                $__params.add($param_ConvolveNormalized_5);
                $__params.add($param_ConvolveNormalizedNaive_6);
                $__params.add($param_ConvolveImageNoBorder_7);
                $__params.add($param_ConvolveNormalized_JustBorder_8);
                $__params.add($param_ImplConvolveMean_9);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of horizontal(GrayS16, GrayI16, int, InputSanityCheck, ConvolveNormalized, ConvolveNormalizedNaive, ConvolveImageNoBorder, ConvolveNormalized_JustBorder, ImplConvolveMean)
    public void horizontal(boofcv.struct.image.GrayS16 $param_GrayS16_1, boofcv.struct.image.GrayI16 $param_GrayI16_2, int $param_int_3, boofcv.alg.InputSanityCheck $param_InputSanityCheck_4, boofcv.alg.filter.convolve.ConvolveNormalized $param_ConvolveNormalized_5, boofcv.alg.filter.convolve.normalized.ConvolveNormalizedNaive $param_ConvolveNormalizedNaive_6, boofcv.alg.filter.convolve.ConvolveImageNoBorder $param_ConvolveImageNoBorder_7, boofcv.alg.filter.convolve.normalized.ConvolveNormalized_JustBorder $param_ConvolveNormalized_JustBorder_8, boofcv.alg.filter.convolve.noborder.ImplConvolveMean $param_ImplConvolveMean_9) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.horizontal( $param_GrayS16_1,  $param_GrayI16_2,  $param_int_3,  $param_InputSanityCheck_4,  $param_ConvolveNormalized_5,  $param_ConvolveNormalizedNaive_6,  $param_ConvolveImageNoBorder_7,  $param_ConvolveNormalized_JustBorder_8,  $param_ImplConvolveMean_9);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.filter.convolve.ConvolveImageMean.horizontal(boofcv.struct.image.GrayS16,boofcv.struct.image.GrayI16,int,boofcv.alg.InputSanityCheck,boofcv.alg.filter.convolve.ConvolveNormalized,boofcv.alg.filter.convolve.normalized.ConvolveNormalizedNaive,boofcv.alg.filter.convolve.ConvolveImageNoBorder,boofcv.alg.filter.convolve.normalized.ConvolveNormalized_JustBorder,boofcv.alg.filter.convolve.noborder.ImplConvolveMean)";
                $__params.add($param_GrayS16_1);
                $__params.add($param_GrayI16_2);
                $__params.add($param_int_3);
                $__params.add($param_InputSanityCheck_4);
                $__params.add($param_ConvolveNormalized_5);
                $__params.add($param_ConvolveNormalizedNaive_6);
                $__params.add($param_ConvolveImageNoBorder_7);
                $__params.add($param_ConvolveNormalized_JustBorder_8);
                $__params.add($param_ImplConvolveMean_9);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of horizontal(GrayF64, GrayF64, int, InputSanityCheck, ConvolveNormalized, ConvolveNormalizedNaive, ConvolveImageNoBorder, ConvolveNormalized_JustBorder, ImplConvolveMean)
    public void horizontal(boofcv.struct.image.GrayF64 $param_GrayF64_1, boofcv.struct.image.GrayF64 $param_GrayF64_2, int $param_int_3, boofcv.alg.InputSanityCheck $param_InputSanityCheck_4, boofcv.alg.filter.convolve.ConvolveNormalized $param_ConvolveNormalized_5, boofcv.alg.filter.convolve.normalized.ConvolveNormalizedNaive $param_ConvolveNormalizedNaive_6, boofcv.alg.filter.convolve.ConvolveImageNoBorder $param_ConvolveImageNoBorder_7, boofcv.alg.filter.convolve.normalized.ConvolveNormalized_JustBorder $param_ConvolveNormalized_JustBorder_8, boofcv.alg.filter.convolve.noborder.ImplConvolveMean $param_ImplConvolveMean_9) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.horizontal( $param_GrayF64_1,  $param_GrayF64_2,  $param_int_3,  $param_InputSanityCheck_4,  $param_ConvolveNormalized_5,  $param_ConvolveNormalizedNaive_6,  $param_ConvolveImageNoBorder_7,  $param_ConvolveNormalized_JustBorder_8,  $param_ImplConvolveMean_9);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.filter.convolve.ConvolveImageMean.horizontal(boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64,int,boofcv.alg.InputSanityCheck,boofcv.alg.filter.convolve.ConvolveNormalized,boofcv.alg.filter.convolve.normalized.ConvolveNormalizedNaive,boofcv.alg.filter.convolve.ConvolveImageNoBorder,boofcv.alg.filter.convolve.normalized.ConvolveNormalized_JustBorder,boofcv.alg.filter.convolve.noborder.ImplConvolveMean)";
                $__params.add($param_GrayF64_1);
                $__params.add($param_GrayF64_2);
                $__params.add($param_int_3);
                $__params.add($param_InputSanityCheck_4);
                $__params.add($param_ConvolveNormalized_5);
                $__params.add($param_ConvolveNormalizedNaive_6);
                $__params.add($param_ConvolveImageNoBorder_7);
                $__params.add($param_ConvolveNormalized_JustBorder_8);
                $__params.add($param_ImplConvolveMean_9);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of horizontal(GrayF32, GrayF32, int, InputSanityCheck, ConvolveNormalized, ConvolveNormalizedNaive, ConvolveImageNoBorder, ConvolveNormalized_JustBorder, ImplConvolveMean)
    public void horizontal(boofcv.struct.image.GrayF32 $param_GrayF32_1, boofcv.struct.image.GrayF32 $param_GrayF32_2, int $param_int_3, boofcv.alg.InputSanityCheck $param_InputSanityCheck_4, boofcv.alg.filter.convolve.ConvolveNormalized $param_ConvolveNormalized_5, boofcv.alg.filter.convolve.normalized.ConvolveNormalizedNaive $param_ConvolveNormalizedNaive_6, boofcv.alg.filter.convolve.ConvolveImageNoBorder $param_ConvolveImageNoBorder_7, boofcv.alg.filter.convolve.normalized.ConvolveNormalized_JustBorder $param_ConvolveNormalized_JustBorder_8, boofcv.alg.filter.convolve.noborder.ImplConvolveMean $param_ImplConvolveMean_9) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.horizontal( $param_GrayF32_1,  $param_GrayF32_2,  $param_int_3,  $param_InputSanityCheck_4,  $param_ConvolveNormalized_5,  $param_ConvolveNormalizedNaive_6,  $param_ConvolveImageNoBorder_7,  $param_ConvolveNormalized_JustBorder_8,  $param_ImplConvolveMean_9);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.filter.convolve.ConvolveImageMean.horizontal(boofcv.struct.image.GrayF32,boofcv.struct.image.GrayF32,int,boofcv.alg.InputSanityCheck,boofcv.alg.filter.convolve.ConvolveNormalized,boofcv.alg.filter.convolve.normalized.ConvolveNormalizedNaive,boofcv.alg.filter.convolve.ConvolveImageNoBorder,boofcv.alg.filter.convolve.normalized.ConvolveNormalized_JustBorder,boofcv.alg.filter.convolve.noborder.ImplConvolveMean)";
                $__params.add($param_GrayF32_1);
                $__params.add($param_GrayF32_2);
                $__params.add($param_int_3);
                $__params.add($param_InputSanityCheck_4);
                $__params.add($param_ConvolveNormalized_5);
                $__params.add($param_ConvolveNormalizedNaive_6);
                $__params.add($param_ConvolveImageNoBorder_7);
                $__params.add($param_ConvolveNormalized_JustBorder_8);
                $__params.add($param_ImplConvolveMean_9);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
