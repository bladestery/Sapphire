/*
 * Stub for class boofcv.alg.feature.detect.interest.SiftDetector
 * Generated by Sapphire Compiler (sc).
 */
package boofcv.alg.feature.detect.interest.stubs;


public final class SiftDetector_Stub extends boofcv.alg.feature.detect.interest.SiftDetector implements sapphire.common.AppObjectStub {

    sapphire.policy.SapphirePolicy.SapphireClientPolicy $__client = null;
    boolean $__directInvocation = false;

    public SiftDetector_Stub (boofcv.alg.feature.detect.interest.SiftScaleSpace $param_SiftScaleSpace_1, double $param_double_2, boofcv.abst.feature.detect.extract.NonMaxLimiter $param_NonMaxLimiter_3, boofcv.core.image.border.FactoryImageBorder $param_FactoryImageBorder_4, boofcv.core.image.GeneralizedImageOps $param_GeneralizedImageOps_5) {
        super($param_SiftScaleSpace_1, $param_double_2, $param_NonMaxLimiter_3, $param_FactoryImageBorder_4, $param_GeneralizedImageOps_5);
    }


    public void $__initialize(sapphire.policy.SapphirePolicy.SapphireClientPolicy client) {
        $__client = client;
    }

    public void $__initialize(boolean directInvocation) {
        $__directInvocation = directInvocation;
    }

    public Object $__clone() throws CloneNotSupportedException {
        return super.clone();
    }



    // Implementation of process(GrayF32, FastHessianFeatureDetector, FactoryImageBorder, InputSanityCheck, ConvolveNormalizedNaive, ConvolveImageNoBorder, ConvolveNormalized_JustBorder, ConvolveNormalized, DerivativeHelperFunctions, ConvolveJustBorder_General, GradientSobel_Outer, GradientSobel_UnrolledOuter)
    public void process(boofcv.struct.image.GrayF32 $param_GrayF32_1, boofcv.alg.feature.detect.interest.FastHessianFeatureDetector $param_FastHessianFeatureDetector_2, boofcv.core.image.border.FactoryImageBorder $param_FactoryImageBorder_3, boofcv.alg.InputSanityCheck $param_InputSanityCheck_4, boofcv.alg.filter.convolve.normalized.ConvolveNormalizedNaive $param_ConvolveNormalizedNaive_5, boofcv.alg.filter.convolve.ConvolveImageNoBorder $param_ConvolveImageNoBorder_6, boofcv.alg.filter.convolve.normalized.ConvolveNormalized_JustBorder $param_ConvolveNormalized_JustBorder_7, boofcv.alg.filter.convolve.ConvolveNormalized $param_ConvolveNormalized_8, boofcv.alg.filter.derivative.DerivativeHelperFunctions $param_DerivativeHelperFunctions_9, boofcv.alg.filter.convolve.border.ConvolveJustBorder_General $param_ConvolveJustBorder_General_10, boofcv.alg.filter.derivative.impl.GradientSobel_Outer $param_GradientSobel_Outer_11, boofcv.alg.filter.derivative.impl.GradientSobel_UnrolledOuter $param_GradientSobel_UnrolledOuter_12) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.process( $param_GrayF32_1,  $param_FastHessianFeatureDetector_2,  $param_FactoryImageBorder_3,  $param_InputSanityCheck_4,  $param_ConvolveNormalizedNaive_5,  $param_ConvolveImageNoBorder_6,  $param_ConvolveNormalized_JustBorder_7,  $param_ConvolveNormalized_8,  $param_DerivativeHelperFunctions_9,  $param_ConvolveJustBorder_General_10,  $param_GradientSobel_Outer_11,  $param_GradientSobel_UnrolledOuter_12);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.feature.detect.interest.SiftDetector.process(boofcv.struct.image.GrayF32,boofcv.alg.feature.detect.interest.FastHessianFeatureDetector,boofcv.core.image.border.FactoryImageBorder,boofcv.alg.InputSanityCheck,boofcv.alg.filter.convolve.normalized.ConvolveNormalizedNaive,boofcv.alg.filter.convolve.ConvolveImageNoBorder,boofcv.alg.filter.convolve.normalized.ConvolveNormalized_JustBorder,boofcv.alg.filter.convolve.ConvolveNormalized,boofcv.alg.filter.derivative.DerivativeHelperFunctions,boofcv.alg.filter.convolve.border.ConvolveJustBorder_General,boofcv.alg.filter.derivative.impl.GradientSobel_Outer,boofcv.alg.filter.derivative.impl.GradientSobel_UnrolledOuter)";
                $__params.add($param_GrayF32_1);
                $__params.add($param_FastHessianFeatureDetector_2);
                $__params.add($param_FactoryImageBorder_3);
                $__params.add($param_InputSanityCheck_4);
                $__params.add($param_ConvolveNormalizedNaive_5);
                $__params.add($param_ConvolveImageNoBorder_6);
                $__params.add($param_ConvolveNormalized_JustBorder_7);
                $__params.add($param_ConvolveNormalized_8);
                $__params.add($param_DerivativeHelperFunctions_9);
                $__params.add($param_ConvolveJustBorder_General_10);
                $__params.add($param_GradientSobel_Outer_11);
                $__params.add($param_GradientSobel_UnrolledOuter_12);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of getDetections()
    public org.ddogleg.struct.FastQueue getDetections() {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.getDetections();
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public org.ddogleg.struct.FastQueue<boofcv.struct.feature.ScalePoint> boofcv.alg.feature.detect.interest.SiftDetector.getDetections()";
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((org.ddogleg.struct.FastQueue) $__result);
    }
}
