/*
 * Stub for class boofcv.alg.shapes.ellipse.BinaryEllipseDetectorPixel
 * Generated by Sapphire Compiler (sc).
 */
package boofcv.alg.shapes.ellipse.stubs;


public final class BinaryEllipseDetectorPixel_Stub extends boofcv.alg.shapes.ellipse.BinaryEllipseDetectorPixel implements sapphire.common.AppObjectStub {

    sapphire.policy.SapphirePolicy.SapphireClientPolicy $__client = null;
    boolean $__directInvocation = false;

    public BinaryEllipseDetectorPixel_Stub () {
        super();
    }


    public void $__initialize(sapphire.policy.SapphirePolicy.SapphireClientPolicy client) {
        $__client = client;
    }

    public void $__initialize(boolean directInvocation) {
        $__directInvocation = directInvocation;
    }

    public Object $__clone() throws CloneNotSupportedException {
        return super.clone();
    }



    // Implementation of setVerbose(boolean)
    public void setVerbose(boolean $param_boolean_1) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.setVerbose( $param_boolean_1);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.shapes.ellipse.BinaryEllipseDetectorPixel.setVerbose(boolean)";
                $__params.add($param_boolean_1);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of setMinimumContour(int)
    public void setMinimumContour(int $param_int_1) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.setMinimumContour( $param_int_1);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.shapes.ellipse.BinaryEllipseDetectorPixel.setMinimumContour(int)";
                $__params.add($param_int_1);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of setMaximumContour(int)
    public void setMaximumContour(int $param_int_1) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.setMaximumContour( $param_int_1);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.shapes.ellipse.BinaryEllipseDetectorPixel.setMaximumContour(int)";
                $__params.add($param_int_1);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of setMaxMajorToMinorRatio(double)
    public void setMaxMajorToMinorRatio(double $param_double_1) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.setMaxMajorToMinorRatio( $param_double_1);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.shapes.ellipse.BinaryEllipseDetectorPixel.setMaxMajorToMinorRatio(double)";
                $__params.add($param_double_1);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of setMaxDistanceFromEllipse(double)
    public void setMaxDistanceFromEllipse(double $param_double_1) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.setMaxDistanceFromEllipse( $param_double_1);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.shapes.ellipse.BinaryEllipseDetectorPixel.setMaxDistanceFromEllipse(double)";
                $__params.add($param_double_1);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of setLensDistortion(PixelTransform2_F32)
    public void setLensDistortion(boofcv.struct.distort.PixelTransform2_F32 $param_PixelTransform2_F32_1) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.setLensDistortion( $param_PixelTransform2_F32_1);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.shapes.ellipse.BinaryEllipseDetectorPixel.setLensDistortion(boofcv.struct.distort.PixelTransform2_F32)";
                $__params.add($param_PixelTransform2_F32_1);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of setInternalContour(boolean)
    public void setInternalContour(boolean $param_boolean_1) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.setInternalContour( $param_boolean_1);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.shapes.ellipse.BinaryEllipseDetectorPixel.setInternalContour(boolean)";
                $__params.add($param_boolean_1);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of process(GrayU8, LinearContourLabelChang2004, ImageMiscOps)
    public void process(boofcv.struct.image.GrayU8 $param_GrayU8_1, boofcv.alg.filter.binary.LinearContourLabelChang2004 $param_LinearContourLabelChang2004_2, boofcv.alg.misc.ImageMiscOps $param_ImageMiscOps_3) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.process( $param_GrayU8_1,  $param_LinearContourLabelChang2004_2,  $param_ImageMiscOps_3);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.shapes.ellipse.BinaryEllipseDetectorPixel.process(boofcv.struct.image.GrayU8,boofcv.alg.filter.binary.LinearContourLabelChang2004,boofcv.alg.misc.ImageMiscOps)";
                $__params.add($param_GrayU8_1);
                $__params.add($param_LinearContourLabelChang2004_2);
                $__params.add($param_ImageMiscOps_3);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of isVerbose()
    public boolean isVerbose() {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.isVerbose();
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public boolean boofcv.alg.shapes.ellipse.BinaryEllipseDetectorPixel.isVerbose()";
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((java.lang.Boolean) $__result).booleanValue();
    }

    // Implementation of isInternalContour()
    public boolean isInternalContour() {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.isInternalContour();
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public boolean boofcv.alg.shapes.ellipse.BinaryEllipseDetectorPixel.isInternalContour()";
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((java.lang.Boolean) $__result).booleanValue();
    }

    // Implementation of getMinimumContour()
    public int getMinimumContour() {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.getMinimumContour();
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public int boofcv.alg.shapes.ellipse.BinaryEllipseDetectorPixel.getMinimumContour()";
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((java.lang.Integer) $__result).intValue();
    }

    // Implementation of getMaximumContour()
    public int getMaximumContour() {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.getMaximumContour();
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public int boofcv.alg.shapes.ellipse.BinaryEllipseDetectorPixel.getMaximumContour()";
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((java.lang.Integer) $__result).intValue();
    }

    // Implementation of getMaxMajorToMinorRatio()
    public double getMaxMajorToMinorRatio() {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.getMaxMajorToMinorRatio();
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public double boofcv.alg.shapes.ellipse.BinaryEllipseDetectorPixel.getMaxMajorToMinorRatio()";
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((java.lang.Double) $__result).doubleValue();
    }

    // Implementation of getMaxDistanceFromEllipse()
    public double getMaxDistanceFromEllipse() {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.getMaxDistanceFromEllipse();
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public double boofcv.alg.shapes.ellipse.BinaryEllipseDetectorPixel.getMaxDistanceFromEllipse()";
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((java.lang.Double) $__result).doubleValue();
    }

    // Implementation of getFound()
    public java.util.List getFound() {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.getFound();
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public java.util.List<boofcv.alg.shapes.ellipse.BinaryEllipseDetectorPixel$Found> boofcv.alg.shapes.ellipse.BinaryEllipseDetectorPixel.getFound()";
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((java.util.List) $__result);
    }

    // Implementation of getContourFinder()
    public boofcv.alg.filter.binary.LinearContourLabelChang2004 getContourFinder() {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.getContourFinder();
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public boofcv.alg.filter.binary.LinearContourLabelChang2004 boofcv.alg.shapes.ellipse.BinaryEllipseDetectorPixel.getContourFinder()";
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((boofcv.alg.filter.binary.LinearContourLabelChang2004) $__result);
    }
}
