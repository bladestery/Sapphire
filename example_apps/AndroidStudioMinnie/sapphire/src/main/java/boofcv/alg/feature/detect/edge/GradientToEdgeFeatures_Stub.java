/*
 * Stub for class boofcv.alg.feature.detect.edge.GradientToEdgeFeatures
 * Generated by Sapphire Compiler (sc).
 */
package boofcv.alg.feature.detect.edge.stubs;


public final class GradientToEdgeFeatures_Stub extends boofcv.alg.feature.detect.edge.GradientToEdgeFeatures implements sapphire.common.AppObjectStub {

    sapphire.policy.SapphirePolicy.SapphireClientPolicy $__client = null;
    boolean $__directInvocation = false;

    public GradientToEdgeFeatures_Stub () {
        super();
    }


    public void $__initialize(sapphire.policy.SapphirePolicy.SapphireClientPolicy client) {
        $__client = client;
    }

    public void $__initialize(boolean directInvocation) {
        $__directInvocation = directInvocation;
    }

    public Object $__clone() throws CloneNotSupportedException {
        return super.clone();
    }



    // Implementation of nonMaxSuppressionCrude4(GrayF32, GrayS32, GrayS32, GrayF32, InputSanityCheck, ImplEdgeNonMaxSuppressionCrude, FactoryImageBorderAlgs, ImageBorderValue)
    public boofcv.struct.image.GrayF32 nonMaxSuppressionCrude4(boofcv.struct.image.GrayF32 $param_GrayF32_1, boofcv.struct.image.GrayS32 $param_GrayS32_2, boofcv.struct.image.GrayS32 $param_GrayS32_3, boofcv.struct.image.GrayF32 $param_GrayF32_4, boofcv.alg.InputSanityCheck $param_InputSanityCheck_5, boofcv.alg.feature.detect.edge.impl.ImplEdgeNonMaxSuppressionCrude $param_ImplEdgeNonMaxSuppressionCrude_6, boofcv.core.image.border.FactoryImageBorderAlgs $param_FactoryImageBorderAlgs_7, boofcv.core.image.border.ImageBorderValue $param_ImageBorderValue_8) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.nonMaxSuppressionCrude4( $param_GrayF32_1,  $param_GrayS32_2,  $param_GrayS32_3,  $param_GrayF32_4,  $param_InputSanityCheck_5,  $param_ImplEdgeNonMaxSuppressionCrude_6,  $param_FactoryImageBorderAlgs_7,  $param_ImageBorderValue_8);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public boofcv.struct.image.GrayF32 boofcv.alg.feature.detect.edge.GradientToEdgeFeatures.nonMaxSuppressionCrude4(boofcv.struct.image.GrayF32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayF32,boofcv.alg.InputSanityCheck,boofcv.alg.feature.detect.edge.impl.ImplEdgeNonMaxSuppressionCrude,boofcv.core.image.border.FactoryImageBorderAlgs,boofcv.core.image.border.ImageBorderValue)";
                $__params.add($param_GrayF32_1);
                $__params.add($param_GrayS32_2);
                $__params.add($param_GrayS32_3);
                $__params.add($param_GrayF32_4);
                $__params.add($param_InputSanityCheck_5);
                $__params.add($param_ImplEdgeNonMaxSuppressionCrude_6);
                $__params.add($param_FactoryImageBorderAlgs_7);
                $__params.add($param_ImageBorderValue_8);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((boofcv.struct.image.GrayF32) $__result);
    }

    // Implementation of nonMaxSuppressionCrude4(GrayF32, GrayS16, GrayS16, GrayF32, InputSanityCheck, ImplEdgeNonMaxSuppressionCrude, FactoryImageBorderAlgs, ImageBorderValue)
    public boofcv.struct.image.GrayF32 nonMaxSuppressionCrude4(boofcv.struct.image.GrayF32 $param_GrayF32_1, boofcv.struct.image.GrayS16 $param_GrayS16_2, boofcv.struct.image.GrayS16 $param_GrayS16_3, boofcv.struct.image.GrayF32 $param_GrayF32_4, boofcv.alg.InputSanityCheck $param_InputSanityCheck_5, boofcv.alg.feature.detect.edge.impl.ImplEdgeNonMaxSuppressionCrude $param_ImplEdgeNonMaxSuppressionCrude_6, boofcv.core.image.border.FactoryImageBorderAlgs $param_FactoryImageBorderAlgs_7, boofcv.core.image.border.ImageBorderValue $param_ImageBorderValue_8) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.nonMaxSuppressionCrude4( $param_GrayF32_1,  $param_GrayS16_2,  $param_GrayS16_3,  $param_GrayF32_4,  $param_InputSanityCheck_5,  $param_ImplEdgeNonMaxSuppressionCrude_6,  $param_FactoryImageBorderAlgs_7,  $param_ImageBorderValue_8);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public boofcv.struct.image.GrayF32 boofcv.alg.feature.detect.edge.GradientToEdgeFeatures.nonMaxSuppressionCrude4(boofcv.struct.image.GrayF32,boofcv.struct.image.GrayS16,boofcv.struct.image.GrayS16,boofcv.struct.image.GrayF32,boofcv.alg.InputSanityCheck,boofcv.alg.feature.detect.edge.impl.ImplEdgeNonMaxSuppressionCrude,boofcv.core.image.border.FactoryImageBorderAlgs,boofcv.core.image.border.ImageBorderValue)";
                $__params.add($param_GrayF32_1);
                $__params.add($param_GrayS16_2);
                $__params.add($param_GrayS16_3);
                $__params.add($param_GrayF32_4);
                $__params.add($param_InputSanityCheck_5);
                $__params.add($param_ImplEdgeNonMaxSuppressionCrude_6);
                $__params.add($param_FactoryImageBorderAlgs_7);
                $__params.add($param_ImageBorderValue_8);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((boofcv.struct.image.GrayF32) $__result);
    }

    // Implementation of nonMaxSuppressionCrude4(GrayF32, GrayF32, GrayF32, GrayF32, InputSanityCheck, ImplEdgeNonMaxSuppressionCrude, FactoryImageBorderAlgs, ImageBorderValue)
    public boofcv.struct.image.GrayF32 nonMaxSuppressionCrude4(boofcv.struct.image.GrayF32 $param_GrayF32_1, boofcv.struct.image.GrayF32 $param_GrayF32_2, boofcv.struct.image.GrayF32 $param_GrayF32_3, boofcv.struct.image.GrayF32 $param_GrayF32_4, boofcv.alg.InputSanityCheck $param_InputSanityCheck_5, boofcv.alg.feature.detect.edge.impl.ImplEdgeNonMaxSuppressionCrude $param_ImplEdgeNonMaxSuppressionCrude_6, boofcv.core.image.border.FactoryImageBorderAlgs $param_FactoryImageBorderAlgs_7, boofcv.core.image.border.ImageBorderValue $param_ImageBorderValue_8) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.nonMaxSuppressionCrude4( $param_GrayF32_1,  $param_GrayF32_2,  $param_GrayF32_3,  $param_GrayF32_4,  $param_InputSanityCheck_5,  $param_ImplEdgeNonMaxSuppressionCrude_6,  $param_FactoryImageBorderAlgs_7,  $param_ImageBorderValue_8);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public boofcv.struct.image.GrayF32 boofcv.alg.feature.detect.edge.GradientToEdgeFeatures.nonMaxSuppressionCrude4(boofcv.struct.image.GrayF32,boofcv.struct.image.GrayF32,boofcv.struct.image.GrayF32,boofcv.struct.image.GrayF32,boofcv.alg.InputSanityCheck,boofcv.alg.feature.detect.edge.impl.ImplEdgeNonMaxSuppressionCrude,boofcv.core.image.border.FactoryImageBorderAlgs,boofcv.core.image.border.ImageBorderValue)";
                $__params.add($param_GrayF32_1);
                $__params.add($param_GrayF32_2);
                $__params.add($param_GrayF32_3);
                $__params.add($param_GrayF32_4);
                $__params.add($param_InputSanityCheck_5);
                $__params.add($param_ImplEdgeNonMaxSuppressionCrude_6);
                $__params.add($param_FactoryImageBorderAlgs_7);
                $__params.add($param_ImageBorderValue_8);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((boofcv.struct.image.GrayF32) $__result);
    }

    // Implementation of nonMaxSuppression8(GrayF32, GrayS8, GrayF32, ImageBorderValue, ImplEdgeNonMaxSuppression, FactoryImageBorderAlgs, InputSanityCheck)
    public boofcv.struct.image.GrayF32 nonMaxSuppression8(boofcv.struct.image.GrayF32 $param_GrayF32_1, boofcv.struct.image.GrayS8 $param_GrayS8_2, boofcv.struct.image.GrayF32 $param_GrayF32_3, boofcv.core.image.border.ImageBorderValue $param_ImageBorderValue_4, boofcv.alg.feature.detect.edge.impl.ImplEdgeNonMaxSuppression $param_ImplEdgeNonMaxSuppression_5, boofcv.core.image.border.FactoryImageBorderAlgs $param_FactoryImageBorderAlgs_6, boofcv.alg.InputSanityCheck $param_InputSanityCheck_7) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.nonMaxSuppression8( $param_GrayF32_1,  $param_GrayS8_2,  $param_GrayF32_3,  $param_ImageBorderValue_4,  $param_ImplEdgeNonMaxSuppression_5,  $param_FactoryImageBorderAlgs_6,  $param_InputSanityCheck_7);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public boofcv.struct.image.GrayF32 boofcv.alg.feature.detect.edge.GradientToEdgeFeatures.nonMaxSuppression8(boofcv.struct.image.GrayF32,boofcv.struct.image.GrayS8,boofcv.struct.image.GrayF32,boofcv.core.image.border.ImageBorderValue,boofcv.alg.feature.detect.edge.impl.ImplEdgeNonMaxSuppression,boofcv.core.image.border.FactoryImageBorderAlgs,boofcv.alg.InputSanityCheck)";
                $__params.add($param_GrayF32_1);
                $__params.add($param_GrayS8_2);
                $__params.add($param_GrayF32_3);
                $__params.add($param_ImageBorderValue_4);
                $__params.add($param_ImplEdgeNonMaxSuppression_5);
                $__params.add($param_FactoryImageBorderAlgs_6);
                $__params.add($param_InputSanityCheck_7);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((boofcv.struct.image.GrayF32) $__result);
    }

    // Implementation of nonMaxSuppression4(GrayF32, GrayS8, GrayF32, ImageBorderValue, ImplEdgeNonMaxSuppression, FactoryImageBorderAlgs, InputSanityCheck)
    public boofcv.struct.image.GrayF32 nonMaxSuppression4(boofcv.struct.image.GrayF32 $param_GrayF32_1, boofcv.struct.image.GrayS8 $param_GrayS8_2, boofcv.struct.image.GrayF32 $param_GrayF32_3, boofcv.core.image.border.ImageBorderValue $param_ImageBorderValue_4, boofcv.alg.feature.detect.edge.impl.ImplEdgeNonMaxSuppression $param_ImplEdgeNonMaxSuppression_5, boofcv.core.image.border.FactoryImageBorderAlgs $param_FactoryImageBorderAlgs_6, boofcv.alg.InputSanityCheck $param_InputSanityCheck_7) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.nonMaxSuppression4( $param_GrayF32_1,  $param_GrayS8_2,  $param_GrayF32_3,  $param_ImageBorderValue_4,  $param_ImplEdgeNonMaxSuppression_5,  $param_FactoryImageBorderAlgs_6,  $param_InputSanityCheck_7);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public boofcv.struct.image.GrayF32 boofcv.alg.feature.detect.edge.GradientToEdgeFeatures.nonMaxSuppression4(boofcv.struct.image.GrayF32,boofcv.struct.image.GrayS8,boofcv.struct.image.GrayF32,boofcv.core.image.border.ImageBorderValue,boofcv.alg.feature.detect.edge.impl.ImplEdgeNonMaxSuppression,boofcv.core.image.border.FactoryImageBorderAlgs,boofcv.alg.InputSanityCheck)";
                $__params.add($param_GrayF32_1);
                $__params.add($param_GrayS8_2);
                $__params.add($param_GrayF32_3);
                $__params.add($param_ImageBorderValue_4);
                $__params.add($param_ImplEdgeNonMaxSuppression_5);
                $__params.add($param_FactoryImageBorderAlgs_6);
                $__params.add($param_InputSanityCheck_7);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((boofcv.struct.image.GrayF32) $__result);
    }

    // Implementation of intensityE(GrayS32, GrayS32, GrayF32, InputSanityCheck)
    public void intensityE(boofcv.struct.image.GrayS32 $param_GrayS32_1, boofcv.struct.image.GrayS32 $param_GrayS32_2, boofcv.struct.image.GrayF32 $param_GrayF32_3, boofcv.alg.InputSanityCheck $param_InputSanityCheck_4) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.intensityE( $param_GrayS32_1,  $param_GrayS32_2,  $param_GrayF32_3,  $param_InputSanityCheck_4);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.feature.detect.edge.GradientToEdgeFeatures.intensityE(boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayF32,boofcv.alg.InputSanityCheck)";
                $__params.add($param_GrayS32_1);
                $__params.add($param_GrayS32_2);
                $__params.add($param_GrayF32_3);
                $__params.add($param_InputSanityCheck_4);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of intensityE(GrayS16, GrayS16, GrayF32, InputSanityCheck)
    public void intensityE(boofcv.struct.image.GrayS16 $param_GrayS16_1, boofcv.struct.image.GrayS16 $param_GrayS16_2, boofcv.struct.image.GrayF32 $param_GrayF32_3, boofcv.alg.InputSanityCheck $param_InputSanityCheck_4) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.intensityE( $param_GrayS16_1,  $param_GrayS16_2,  $param_GrayF32_3,  $param_InputSanityCheck_4);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.feature.detect.edge.GradientToEdgeFeatures.intensityE(boofcv.struct.image.GrayS16,boofcv.struct.image.GrayS16,boofcv.struct.image.GrayF32,boofcv.alg.InputSanityCheck)";
                $__params.add($param_GrayS16_1);
                $__params.add($param_GrayS16_2);
                $__params.add($param_GrayF32_3);
                $__params.add($param_InputSanityCheck_4);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of intensityE(GrayF32, GrayF32, GrayF32, InputSanityCheck)
    public void intensityE(boofcv.struct.image.GrayF32 $param_GrayF32_1, boofcv.struct.image.GrayF32 $param_GrayF32_2, boofcv.struct.image.GrayF32 $param_GrayF32_3, boofcv.alg.InputSanityCheck $param_InputSanityCheck_4) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.intensityE( $param_GrayF32_1,  $param_GrayF32_2,  $param_GrayF32_3,  $param_InputSanityCheck_4);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.feature.detect.edge.GradientToEdgeFeatures.intensityE(boofcv.struct.image.GrayF32,boofcv.struct.image.GrayF32,boofcv.struct.image.GrayF32,boofcv.alg.InputSanityCheck)";
                $__params.add($param_GrayF32_1);
                $__params.add($param_GrayF32_2);
                $__params.add($param_GrayF32_3);
                $__params.add($param_InputSanityCheck_4);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of intensityAbs(GrayS32, GrayS32, GrayF32, InputSanityCheck)
    public void intensityAbs(boofcv.struct.image.GrayS32 $param_GrayS32_1, boofcv.struct.image.GrayS32 $param_GrayS32_2, boofcv.struct.image.GrayF32 $param_GrayF32_3, boofcv.alg.InputSanityCheck $param_InputSanityCheck_4) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.intensityAbs( $param_GrayS32_1,  $param_GrayS32_2,  $param_GrayF32_3,  $param_InputSanityCheck_4);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.feature.detect.edge.GradientToEdgeFeatures.intensityAbs(boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayF32,boofcv.alg.InputSanityCheck)";
                $__params.add($param_GrayS32_1);
                $__params.add($param_GrayS32_2);
                $__params.add($param_GrayF32_3);
                $__params.add($param_InputSanityCheck_4);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of intensityAbs(GrayS16, GrayS16, GrayF32, InputSanityCheck)
    public void intensityAbs(boofcv.struct.image.GrayS16 $param_GrayS16_1, boofcv.struct.image.GrayS16 $param_GrayS16_2, boofcv.struct.image.GrayF32 $param_GrayF32_3, boofcv.alg.InputSanityCheck $param_InputSanityCheck_4) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.intensityAbs( $param_GrayS16_1,  $param_GrayS16_2,  $param_GrayF32_3,  $param_InputSanityCheck_4);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.feature.detect.edge.GradientToEdgeFeatures.intensityAbs(boofcv.struct.image.GrayS16,boofcv.struct.image.GrayS16,boofcv.struct.image.GrayF32,boofcv.alg.InputSanityCheck)";
                $__params.add($param_GrayS16_1);
                $__params.add($param_GrayS16_2);
                $__params.add($param_GrayF32_3);
                $__params.add($param_InputSanityCheck_4);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of intensityAbs(GrayF32, GrayF32, GrayF32, InputSanityCheck)
    public void intensityAbs(boofcv.struct.image.GrayF32 $param_GrayF32_1, boofcv.struct.image.GrayF32 $param_GrayF32_2, boofcv.struct.image.GrayF32 $param_GrayF32_3, boofcv.alg.InputSanityCheck $param_InputSanityCheck_4) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.intensityAbs( $param_GrayF32_1,  $param_GrayF32_2,  $param_GrayF32_3,  $param_InputSanityCheck_4);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.feature.detect.edge.GradientToEdgeFeatures.intensityAbs(boofcv.struct.image.GrayF32,boofcv.struct.image.GrayF32,boofcv.struct.image.GrayF32,boofcv.alg.InputSanityCheck)";
                $__params.add($param_GrayF32_1);
                $__params.add($param_GrayF32_2);
                $__params.add($param_GrayF32_3);
                $__params.add($param_InputSanityCheck_4);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of discretizeDirection8(GrayF32, GrayS8, InputSanityCheck, GeneralizedImageOps)
    public boofcv.struct.image.GrayS8 discretizeDirection8(boofcv.struct.image.GrayF32 $param_GrayF32_1, boofcv.struct.image.GrayS8 $param_GrayS8_2, boofcv.alg.InputSanityCheck $param_InputSanityCheck_3, boofcv.core.image.GeneralizedImageOps $param_GeneralizedImageOps_4) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.discretizeDirection8( $param_GrayF32_1,  $param_GrayS8_2,  $param_InputSanityCheck_3,  $param_GeneralizedImageOps_4);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public boofcv.struct.image.GrayS8 boofcv.alg.feature.detect.edge.GradientToEdgeFeatures.discretizeDirection8(boofcv.struct.image.GrayF32,boofcv.struct.image.GrayS8,boofcv.alg.InputSanityCheck,boofcv.core.image.GeneralizedImageOps)";
                $__params.add($param_GrayF32_1);
                $__params.add($param_GrayS8_2);
                $__params.add($param_InputSanityCheck_3);
                $__params.add($param_GeneralizedImageOps_4);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((boofcv.struct.image.GrayS8) $__result);
    }

    // Implementation of discretizeDirection4(GrayF32, GrayS8, InputSanityCheck, GeneralizedImageOps)
    public boofcv.struct.image.GrayS8 discretizeDirection4(boofcv.struct.image.GrayF32 $param_GrayF32_1, boofcv.struct.image.GrayS8 $param_GrayS8_2, boofcv.alg.InputSanityCheck $param_InputSanityCheck_3, boofcv.core.image.GeneralizedImageOps $param_GeneralizedImageOps_4) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.discretizeDirection4( $param_GrayF32_1,  $param_GrayS8_2,  $param_InputSanityCheck_3,  $param_GeneralizedImageOps_4);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public boofcv.struct.image.GrayS8 boofcv.alg.feature.detect.edge.GradientToEdgeFeatures.discretizeDirection4(boofcv.struct.image.GrayF32,boofcv.struct.image.GrayS8,boofcv.alg.InputSanityCheck,boofcv.core.image.GeneralizedImageOps)";
                $__params.add($param_GrayF32_1);
                $__params.add($param_GrayS8_2);
                $__params.add($param_InputSanityCheck_3);
                $__params.add($param_GeneralizedImageOps_4);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((boofcv.struct.image.GrayS8) $__result);
    }

    // Implementation of direction2(GrayS32, GrayS32, GrayF32, InputSanityCheck)
    public void direction2(boofcv.struct.image.GrayS32 $param_GrayS32_1, boofcv.struct.image.GrayS32 $param_GrayS32_2, boofcv.struct.image.GrayF32 $param_GrayF32_3, boofcv.alg.InputSanityCheck $param_InputSanityCheck_4) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.direction2( $param_GrayS32_1,  $param_GrayS32_2,  $param_GrayF32_3,  $param_InputSanityCheck_4);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.feature.detect.edge.GradientToEdgeFeatures.direction2(boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayF32,boofcv.alg.InputSanityCheck)";
                $__params.add($param_GrayS32_1);
                $__params.add($param_GrayS32_2);
                $__params.add($param_GrayF32_3);
                $__params.add($param_InputSanityCheck_4);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of direction2(GrayS16, GrayS16, GrayF32, InputSanityCheck)
    public void direction2(boofcv.struct.image.GrayS16 $param_GrayS16_1, boofcv.struct.image.GrayS16 $param_GrayS16_2, boofcv.struct.image.GrayF32 $param_GrayF32_3, boofcv.alg.InputSanityCheck $param_InputSanityCheck_4) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.direction2( $param_GrayS16_1,  $param_GrayS16_2,  $param_GrayF32_3,  $param_InputSanityCheck_4);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.feature.detect.edge.GradientToEdgeFeatures.direction2(boofcv.struct.image.GrayS16,boofcv.struct.image.GrayS16,boofcv.struct.image.GrayF32,boofcv.alg.InputSanityCheck)";
                $__params.add($param_GrayS16_1);
                $__params.add($param_GrayS16_2);
                $__params.add($param_GrayF32_3);
                $__params.add($param_InputSanityCheck_4);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of direction2(GrayF32, GrayF32, GrayF32, InputSanityCheck)
    public void direction2(boofcv.struct.image.GrayF32 $param_GrayF32_1, boofcv.struct.image.GrayF32 $param_GrayF32_2, boofcv.struct.image.GrayF32 $param_GrayF32_3, boofcv.alg.InputSanityCheck $param_InputSanityCheck_4) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.direction2( $param_GrayF32_1,  $param_GrayF32_2,  $param_GrayF32_3,  $param_InputSanityCheck_4);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.feature.detect.edge.GradientToEdgeFeatures.direction2(boofcv.struct.image.GrayF32,boofcv.struct.image.GrayF32,boofcv.struct.image.GrayF32,boofcv.alg.InputSanityCheck)";
                $__params.add($param_GrayF32_1);
                $__params.add($param_GrayF32_2);
                $__params.add($param_GrayF32_3);
                $__params.add($param_InputSanityCheck_4);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of direction(GrayS32, GrayS32, GrayF32, InputSanityCheck)
    public void direction(boofcv.struct.image.GrayS32 $param_GrayS32_1, boofcv.struct.image.GrayS32 $param_GrayS32_2, boofcv.struct.image.GrayF32 $param_GrayF32_3, boofcv.alg.InputSanityCheck $param_InputSanityCheck_4) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.direction( $param_GrayS32_1,  $param_GrayS32_2,  $param_GrayF32_3,  $param_InputSanityCheck_4);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.feature.detect.edge.GradientToEdgeFeatures.direction(boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayF32,boofcv.alg.InputSanityCheck)";
                $__params.add($param_GrayS32_1);
                $__params.add($param_GrayS32_2);
                $__params.add($param_GrayF32_3);
                $__params.add($param_InputSanityCheck_4);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of direction(GrayS16, GrayS16, GrayF32, InputSanityCheck)
    public void direction(boofcv.struct.image.GrayS16 $param_GrayS16_1, boofcv.struct.image.GrayS16 $param_GrayS16_2, boofcv.struct.image.GrayF32 $param_GrayF32_3, boofcv.alg.InputSanityCheck $param_InputSanityCheck_4) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.direction( $param_GrayS16_1,  $param_GrayS16_2,  $param_GrayF32_3,  $param_InputSanityCheck_4);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.feature.detect.edge.GradientToEdgeFeatures.direction(boofcv.struct.image.GrayS16,boofcv.struct.image.GrayS16,boofcv.struct.image.GrayF32,boofcv.alg.InputSanityCheck)";
                $__params.add($param_GrayS16_1);
                $__params.add($param_GrayS16_2);
                $__params.add($param_GrayF32_3);
                $__params.add($param_InputSanityCheck_4);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of direction(GrayF32, GrayF32, GrayF32, InputSanityCheck)
    public void direction(boofcv.struct.image.GrayF32 $param_GrayF32_1, boofcv.struct.image.GrayF32 $param_GrayF32_2, boofcv.struct.image.GrayF32 $param_GrayF32_3, boofcv.alg.InputSanityCheck $param_InputSanityCheck_4) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.direction( $param_GrayF32_1,  $param_GrayF32_2,  $param_GrayF32_3,  $param_InputSanityCheck_4);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.feature.detect.edge.GradientToEdgeFeatures.direction(boofcv.struct.image.GrayF32,boofcv.struct.image.GrayF32,boofcv.struct.image.GrayF32,boofcv.alg.InputSanityCheck)";
                $__params.add($param_GrayF32_1);
                $__params.add($param_GrayF32_2);
                $__params.add($param_GrayF32_3);
                $__params.add($param_InputSanityCheck_4);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
