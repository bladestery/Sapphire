/*
 * Stub for class boofcv.alg.segmentation.ImageSegmentationOps
 * Generated by Sapphire Compiler (sc).
 */
package boofcv.alg.segmentation.stubs;


public final class ImageSegmentationOps_Stub extends boofcv.alg.segmentation.ImageSegmentationOps implements sapphire.common.AppObjectStub {

    sapphire.policy.SapphirePolicy.SapphireClientPolicy $__client = null;
    boolean $__directInvocation = false;

    public ImageSegmentationOps_Stub () {
        super();
    }


    public void $__initialize(sapphire.policy.SapphirePolicy.SapphireClientPolicy client) {
        $__client = client;
    }

    public void $__initialize(boolean directInvocation) {
        $__directInvocation = directInvocation;
    }

    public Object $__clone() throws CloneNotSupportedException {
        return super.clone();
    }



    // Implementation of regionPixelId_to_Compact(GrayS32, FastQueue, GrayS32, InputSanityCheck)
    public void regionPixelId_to_Compact(boofcv.struct.image.GrayS32 $param_GrayS32_1, org.ddogleg.struct.FastQueue $param_FastQueue_2, boofcv.struct.image.GrayS32 $param_GrayS32_3, boofcv.alg.InputSanityCheck $param_InputSanityCheck_4) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.regionPixelId_to_Compact( $param_GrayS32_1,  $param_FastQueue_2,  $param_GrayS32_3,  $param_InputSanityCheck_4);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.segmentation.ImageSegmentationOps.regionPixelId_to_Compact(boofcv.struct.image.GrayS32,org.ddogleg.struct.FastQueue<java.lang.Integer>,boofcv.struct.image.GrayS32,boofcv.alg.InputSanityCheck)";
                $__params.add($param_GrayS32_1);
                $__params.add($param_FastQueue_2);
                $__params.add($param_GrayS32_3);
                $__params.add($param_InputSanityCheck_4);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of markRegionBorders(GrayS32, GrayU8, InputSanityCheck, ImageMiscOps)
    public void markRegionBorders(boofcv.struct.image.GrayS32 $param_GrayS32_1, boofcv.struct.image.GrayU8 $param_GrayU8_2, boofcv.alg.InputSanityCheck $param_InputSanityCheck_3, boofcv.alg.misc.ImageMiscOps $param_ImageMiscOps_4) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.markRegionBorders( $param_GrayS32_1,  $param_GrayU8_2,  $param_InputSanityCheck_3,  $param_ImageMiscOps_4);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.segmentation.ImageSegmentationOps.markRegionBorders(boofcv.struct.image.GrayS32,boofcv.struct.image.GrayU8,boofcv.alg.InputSanityCheck,boofcv.alg.misc.ImageMiscOps)";
                $__params.add($param_GrayS32_1);
                $__params.add($param_GrayU8_2);
                $__params.add($param_InputSanityCheck_3);
                $__params.add($param_ImageMiscOps_4);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of countRegionPixels(GrayS32, int, Integer[])
    public void countRegionPixels(boofcv.struct.image.GrayS32 $param_GrayS32_1, int $param_int_2, java.lang.Integer[] $param_arrayOf_Integer_3) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.countRegionPixels( $param_GrayS32_1,  $param_int_2,  $param_arrayOf_Integer_3);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.segmentation.ImageSegmentationOps.countRegionPixels(boofcv.struct.image.GrayS32,int,java.lang.Integer[])";
                $__params.add($param_GrayS32_1);
                $__params.add($param_int_2);
                $__params.add($param_arrayOf_Integer_3);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of countRegionPixels(GrayS32, int)
    public int countRegionPixels(boofcv.struct.image.GrayS32 $param_GrayS32_1, int $param_int_2) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.countRegionPixels( $param_GrayS32_1,  $param_int_2);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public int boofcv.alg.segmentation.ImageSegmentationOps.countRegionPixels(boofcv.struct.image.GrayS32,int)";
                $__params.add($param_GrayS32_1);
                $__params.add($param_int_2);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((java.lang.Integer) $__result).intValue();
    }
}
