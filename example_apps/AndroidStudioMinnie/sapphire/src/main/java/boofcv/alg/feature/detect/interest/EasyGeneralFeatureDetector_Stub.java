/*
 * Stub for class boofcv.alg.feature.detect.interest.EasyGeneralFeatureDetector
 * Generated by Sapphire Compiler (sc).
 */
package boofcv.alg.feature.detect.interest.stubs;


public final class EasyGeneralFeatureDetector_Stub extends boofcv.alg.feature.detect.interest.EasyGeneralFeatureDetector implements sapphire.common.AppObjectStub {

    sapphire.policy.SapphirePolicy.SapphireClientPolicy $__client = null;
    boolean $__directInvocation = false;

    public EasyGeneralFeatureDetector_Stub (boofcv.alg.feature.detect.interest.GeneralFeatureDetector $param_GeneralFeatureDetector_1, java.lang.Class $param_Class_2, java.lang.Class $param_Class_3, boofcv.factory.filter.derivative.FactoryDerivative $param_FactoryDerivative_4, boofcv.core.image.GeneralizedImageOps $param_GeneralizedImageOps_5, boofcv.core.image.border.FactoryImageBorder $param_FactoryImageBorder_6) {
        super($param_GeneralFeatureDetector_1, $param_Class_2, $param_Class_3, $param_FactoryDerivative_4, $param_GeneralizedImageOps_5, $param_FactoryImageBorder_6);
    }

    public EasyGeneralFeatureDetector_Stub (boofcv.alg.feature.detect.interest.GeneralFeatureDetector $param_GeneralFeatureDetector_1, boofcv.abst.filter.derivative.ImageGradient $param_ImageGradient_2, boofcv.abst.filter.derivative.ImageHessian $param_ImageHessian_3, java.lang.Class $param_Class_4, boofcv.core.image.GeneralizedImageOps $param_GeneralizedImageOps_5) {
        super($param_GeneralFeatureDetector_1, $param_ImageGradient_2, $param_ImageHessian_3, $param_Class_4, $param_GeneralizedImageOps_5);
    }


    public void $__initialize(sapphire.policy.SapphirePolicy.SapphireClientPolicy client) {
        $__client = client;
    }

    public void $__initialize(boolean directInvocation) {
        $__directInvocation = directInvocation;
    }

    public Object $__clone() throws CloneNotSupportedException {
        return super.clone();
    }



    // Implementation of getMinimums()
    public boofcv.struct.QueueCorner getMinimums() {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.getMinimums();
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public boofcv.struct.QueueCorner boofcv.alg.feature.detect.interest.EasyGeneralFeatureDetector.getMinimums()";
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((boofcv.struct.QueueCorner) $__result);
    }

    // Implementation of getMaximums()
    public boofcv.struct.QueueCorner getMaximums() {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.getMaximums();
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public boofcv.struct.QueueCorner boofcv.alg.feature.detect.interest.EasyGeneralFeatureDetector.getMaximums()";
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((boofcv.struct.QueueCorner) $__result);
    }

    // Implementation of getDetector()
    public boofcv.alg.feature.detect.interest.GeneralFeatureDetector getDetector() {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.getDetector();
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public boofcv.alg.feature.detect.interest.GeneralFeatureDetector<T, D> boofcv.alg.feature.detect.interest.EasyGeneralFeatureDetector.getDetector()";
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((boofcv.alg.feature.detect.interest.GeneralFeatureDetector) $__result);
    }

    // Implementation of detect(ImageGray, QueueCorner, InputSanityCheck, DerivativeHelperFunctions, ConvolveImageNoBorder, ConvolveJustBorder_General, GradientSobel_Outer, GradientSobel_UnrolledOuter, GImageMiscOps, ImageMiscOps, ConvolveNormalizedNaive, ConvolveNormalized_JustBorder, ConvolveNormalized)
    public void detect(boofcv.struct.image.ImageGray $param_ImageGray_1, boofcv.struct.QueueCorner $param_QueueCorner_2, boofcv.alg.InputSanityCheck $param_InputSanityCheck_3, boofcv.alg.filter.derivative.DerivativeHelperFunctions $param_DerivativeHelperFunctions_4, boofcv.alg.filter.convolve.ConvolveImageNoBorder $param_ConvolveImageNoBorder_5, boofcv.alg.filter.convolve.border.ConvolveJustBorder_General $param_ConvolveJustBorder_General_6, boofcv.alg.filter.derivative.impl.GradientSobel_Outer $param_GradientSobel_Outer_7, boofcv.alg.filter.derivative.impl.GradientSobel_UnrolledOuter $param_GradientSobel_UnrolledOuter_8, boofcv.alg.misc.GImageMiscOps $param_GImageMiscOps_9, boofcv.alg.misc.ImageMiscOps $param_ImageMiscOps_10, boofcv.alg.filter.convolve.normalized.ConvolveNormalizedNaive $param_ConvolveNormalizedNaive_11, boofcv.alg.filter.convolve.normalized.ConvolveNormalized_JustBorder $param_ConvolveNormalized_JustBorder_12, boofcv.alg.filter.convolve.ConvolveNormalized $param_ConvolveNormalized_13) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.detect( $param_ImageGray_1,  $param_QueueCorner_2,  $param_InputSanityCheck_3,  $param_DerivativeHelperFunctions_4,  $param_ConvolveImageNoBorder_5,  $param_ConvolveJustBorder_General_6,  $param_GradientSobel_Outer_7,  $param_GradientSobel_UnrolledOuter_8,  $param_GImageMiscOps_9,  $param_ImageMiscOps_10,  $param_ConvolveNormalizedNaive_11,  $param_ConvolveNormalized_JustBorder_12,  $param_ConvolveNormalized_13);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.feature.detect.interest.EasyGeneralFeatureDetector.detect(T,boofcv.struct.QueueCorner,boofcv.alg.InputSanityCheck,boofcv.alg.filter.derivative.DerivativeHelperFunctions,boofcv.alg.filter.convolve.ConvolveImageNoBorder,boofcv.alg.filter.convolve.border.ConvolveJustBorder_General,boofcv.alg.filter.derivative.impl.GradientSobel_Outer,boofcv.alg.filter.derivative.impl.GradientSobel_UnrolledOuter,boofcv.alg.misc.GImageMiscOps,boofcv.alg.misc.ImageMiscOps,boofcv.alg.filter.convolve.normalized.ConvolveNormalizedNaive,boofcv.alg.filter.convolve.normalized.ConvolveNormalized_JustBorder,boofcv.alg.filter.convolve.ConvolveNormalized)";
                $__params.add($param_ImageGray_1);
                $__params.add($param_QueueCorner_2);
                $__params.add($param_InputSanityCheck_3);
                $__params.add($param_DerivativeHelperFunctions_4);
                $__params.add($param_ConvolveImageNoBorder_5);
                $__params.add($param_ConvolveJustBorder_General_6);
                $__params.add($param_GradientSobel_Outer_7);
                $__params.add($param_GradientSobel_UnrolledOuter_8);
                $__params.add($param_GImageMiscOps_9);
                $__params.add($param_ImageMiscOps_10);
                $__params.add($param_ConvolveNormalizedNaive_11);
                $__params.add($param_ConvolveNormalized_JustBorder_12);
                $__params.add($param_ConvolveNormalized_13);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
