/*
 * Stub for class boofcv.alg.feature.detect.interest.FastHessianFeatureDetector
 * Generated by Sapphire Compiler (sc).
 */
package boofcv.alg.feature.detect.interest.stubs;


public final class FastHessianFeatureDetector_Stub extends boofcv.alg.feature.detect.interest.FastHessianFeatureDetector implements sapphire.common.AppObjectStub {

    sapphire.policy.SapphirePolicy.SapphireClientPolicy $__client = null;
    boolean $__directInvocation = false;

    public FastHessianFeatureDetector_Stub () {
        super();
    }

    public FastHessianFeatureDetector_Stub (boofcv.abst.feature.detect.extract.NonMaxSuppression $param_NonMaxSuppression_1, int $param_int_2, int $param_int_3, int $param_int_4, int $param_int_5, int $param_int_6, int $param_int_7) {
        super($param_NonMaxSuppression_1, $param_int_2, $param_int_3, $param_int_4, $param_int_5, $param_int_6, $param_int_7);
    }


    public void $__initialize(sapphire.policy.SapphirePolicy.SapphireClientPolicy client) {
        $__client = client;
    }

    public void $__initialize(boolean directInvocation) {
        $__directInvocation = directInvocation;
    }

    public Object $__clone() throws CloneNotSupportedException {
        return super.clone();
    }



    // Implementation of polyPeak(float, float, float)
    public float polyPeak(float $param_float_1, float $param_float_2, float $param_float_3) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.polyPeak( $param_float_1,  $param_float_2,  $param_float_3);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public float boofcv.alg.feature.detect.interest.FastHessianFeatureDetector.polyPeak(float,float,float)";
                $__params.add($param_float_1);
                $__params.add($param_float_2);
                $__params.add($param_float_3);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((java.lang.Float) $__result).floatValue();
    }

    // Implementation of polyPeak(double, double, double, double, double, double)
    public double polyPeak(double $param_double_1, double $param_double_2, double $param_double_3, double $param_double_4, double $param_double_5, double $param_double_6) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.polyPeak( $param_double_1,  $param_double_2,  $param_double_3,  $param_double_4,  $param_double_5,  $param_double_6);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public double boofcv.alg.feature.detect.interest.FastHessianFeatureDetector.polyPeak(double,double,double,double,double,double)";
                $__params.add($param_double_1);
                $__params.add($param_double_2);
                $__params.add($param_double_3);
                $__params.add($param_double_4);
                $__params.add($param_double_5);
                $__params.add($param_double_6);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((java.lang.Double) $__result).doubleValue();
    }

    // Implementation of polyPeak(double, double, double)
    public double polyPeak(double $param_double_1, double $param_double_2, double $param_double_3) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.polyPeak( $param_double_1,  $param_double_2,  $param_double_3);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public double boofcv.alg.feature.detect.interest.FastHessianFeatureDetector.polyPeak(double,double,double)";
                $__params.add($param_double_1);
                $__params.add($param_double_2);
                $__params.add($param_double_3);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((java.lang.Double) $__result).doubleValue();
    }

    // Implementation of getSmallestWidth()
    public int getSmallestWidth() {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.getSmallestWidth();
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public int boofcv.alg.feature.detect.interest.FastHessianFeatureDetector.getSmallestWidth()";
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((java.lang.Integer) $__result).intValue();
    }

    // Implementation of getFoundPoints()
    public java.util.List getFoundPoints() {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.getFoundPoints();
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public java.util.List<boofcv.struct.feature.ScalePoint> boofcv.alg.feature.detect.interest.FastHessianFeatureDetector.getFoundPoints()";
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((java.util.List) $__result);
    }

    // Implementation of detect(ImageGray, FactoryImageBorderAlgs, ImageBorderValue)
    public void detect(boofcv.struct.image.ImageGray $param_ImageGray_1, boofcv.core.image.border.FactoryImageBorderAlgs $param_FactoryImageBorderAlgs_2, boofcv.core.image.border.ImageBorderValue $param_ImageBorderValue_3) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.detect( $param_ImageGray_1,  $param_FactoryImageBorderAlgs_2,  $param_ImageBorderValue_3);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.feature.detect.interest.FastHessianFeatureDetector.detect(II,boofcv.core.image.border.FactoryImageBorderAlgs,boofcv.core.image.border.ImageBorderValue)";
                $__params.add($param_ImageGray_1);
                $__params.add($param_FactoryImageBorderAlgs_2);
                $__params.add($param_ImageBorderValue_3);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
