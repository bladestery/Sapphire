/*
 * Stub for class boofcv.alg.shapes.polygon.BinaryPolygonDetector
 * Generated by Sapphire Compiler (sc).
 */
package boofcv.alg.shapes.polygon.stubs;


public final class BinaryPolygonDetector_Stub extends boofcv.alg.shapes.polygon.BinaryPolygonDetector implements sapphire.common.AppObjectStub {

    sapphire.policy.SapphirePolicy.SapphireClientPolicy $__client = null;
    boolean $__directInvocation = false;

    public BinaryPolygonDetector_Stub (int $param_int_1, int $param_int_2, boofcv.alg.shapes.polyline.SplitMergeLineFitLoop $param_SplitMergeLineFitLoop_3, boofcv.alg.shapes.polygon.RefineBinaryPolygon $param_RefineBinaryPolygon_4, double $param_double_5, boolean $param_boolean_6, boolean $param_boolean_7, boolean $param_boolean_8, double $param_double_9, double $param_double_10, java.lang.Class $param_Class_11) {
        super($param_int_1, $param_int_2, $param_SplitMergeLineFitLoop_3, $param_RefineBinaryPolygon_4, $param_double_5, $param_boolean_6, $param_boolean_7, $param_boolean_8, $param_double_9, $param_double_10, $param_Class_11);
    }


    public void $__initialize(sapphire.policy.SapphirePolicy.SapphireClientPolicy client) {
        $__client = client;
    }

    public void $__initialize(boolean directInvocation) {
        $__directInvocation = directInvocation;
    }

    public Object $__clone() throws CloneNotSupportedException {
        return super.clone();
    }



    // Implementation of setVerbose(boolean)
    public void setVerbose(boolean $param_boolean_1) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.setVerbose( $param_boolean_1);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.shapes.polygon.BinaryPolygonDetector.setVerbose(boolean)";
                $__params.add($param_boolean_1);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of setRefinePolygon(RefineBinaryPolygon)
    public void setRefinePolygon(boofcv.alg.shapes.polygon.RefineBinaryPolygon $param_RefineBinaryPolygon_1) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.setRefinePolygon( $param_RefineBinaryPolygon_1);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.shapes.polygon.BinaryPolygonDetector.setRefinePolygon(boofcv.alg.shapes.polygon.RefineBinaryPolygon<T>)";
                $__params.add($param_RefineBinaryPolygon_1);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of setNumberOfSides(int, int)
    public void setNumberOfSides(int $param_int_1, int $param_int_2) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.setNumberOfSides( $param_int_1,  $param_int_2);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.shapes.polygon.BinaryPolygonDetector.setNumberOfSides(int,int)";
                $__params.add($param_int_1);
                $__params.add($param_int_2);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of setLensDistortion(int, int, PixelTransform2_F32, PixelTransform2_F32)
    public void setLensDistortion(int $param_int_1, int $param_int_2, boofcv.struct.distort.PixelTransform2_F32 $param_PixelTransform2_F32_3, boofcv.struct.distort.PixelTransform2_F32 $param_PixelTransform2_F32_4) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.setLensDistortion( $param_int_1,  $param_int_2,  $param_PixelTransform2_F32_3,  $param_PixelTransform2_F32_4);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.shapes.polygon.BinaryPolygonDetector.setLensDistortion(int,int,boofcv.struct.distort.PixelTransform2_F32,boofcv.struct.distort.PixelTransform2_F32)";
                $__params.add($param_int_1);
                $__params.add($param_int_2);
                $__params.add($param_PixelTransform2_F32_3);
                $__params.add($param_PixelTransform2_F32_4);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of setHelper(PolygonHelper)
    public void setHelper(boofcv.alg.shapes.polygon.PolygonHelper $param_PolygonHelper_1) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.setHelper( $param_PolygonHelper_1);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.shapes.polygon.BinaryPolygonDetector.setHelper(boofcv.alg.shapes.polygon.PolygonHelper)";
                $__params.add($param_PolygonHelper_1);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of setEdgeThreshold(double)
    public void setEdgeThreshold(double $param_double_1) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.setEdgeThreshold( $param_double_1);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.shapes.polygon.BinaryPolygonDetector.setEdgeThreshold(double)";
                $__params.add($param_double_1);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of setConvex(boolean)
    public void setConvex(boolean $param_boolean_1) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.setConvex( $param_boolean_1);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.shapes.polygon.BinaryPolygonDetector.setConvex(boolean)";
                $__params.add($param_boolean_1);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of setCheckEdgeBefore(boolean)
    public void setCheckEdgeBefore(boolean $param_boolean_1) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.setCheckEdgeBefore( $param_boolean_1);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.shapes.polygon.BinaryPolygonDetector.setCheckEdgeBefore(boolean)";
                $__params.add($param_boolean_1);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of process(ImageGray, GrayU8, InputSanityCheck, ImageMiscOps, LinearContourLabelChang2004)
    public void process(boofcv.struct.image.ImageGray $param_ImageGray_1, boofcv.struct.image.GrayU8 $param_GrayU8_2, boofcv.alg.InputSanityCheck $param_InputSanityCheck_3, boofcv.alg.misc.ImageMiscOps $param_ImageMiscOps_4, boofcv.alg.filter.binary.LinearContourLabelChang2004 $param_LinearContourLabelChang2004_5) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.process( $param_ImageGray_1,  $param_GrayU8_2,  $param_InputSanityCheck_3,  $param_ImageMiscOps_4,  $param_LinearContourLabelChang2004_5);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.shapes.polygon.BinaryPolygonDetector.process(T,boofcv.struct.image.GrayU8,boofcv.alg.InputSanityCheck,boofcv.alg.misc.ImageMiscOps,boofcv.alg.filter.binary.LinearContourLabelChang2004)";
                $__params.add($param_ImageGray_1);
                $__params.add($param_GrayU8_2);
                $__params.add($param_InputSanityCheck_3);
                $__params.add($param_ImageMiscOps_4);
                $__params.add($param_LinearContourLabelChang2004_5);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of isOutputClockwise()
    public boolean isOutputClockwise() {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.isOutputClockwise();
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public boolean boofcv.alg.shapes.polygon.BinaryPolygonDetector.isOutputClockwise()";
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((java.lang.Boolean) $__result).booleanValue();
    }

    // Implementation of isConvex()
    public boolean isConvex() {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.isConvex();
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public boolean boofcv.alg.shapes.polygon.BinaryPolygonDetector.isConvex()";
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((java.lang.Boolean) $__result).booleanValue();
    }

    // Implementation of isCheckEdgeBefore()
    public boolean isCheckEdgeBefore() {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.isCheckEdgeBefore();
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public boolean boofcv.alg.shapes.polygon.BinaryPolygonDetector.isCheckEdgeBefore()";
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((java.lang.Boolean) $__result).booleanValue();
    }

    // Implementation of getUsedContours()
    public java.util.List getUsedContours() {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.getUsedContours();
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public java.util.List<boofcv.alg.filter.binary.Contour> boofcv.alg.shapes.polygon.BinaryPolygonDetector.getUsedContours()";
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((java.util.List) $__result);
    }

    // Implementation of getUndistToDist()
    public boofcv.struct.distort.PixelTransform2_F32 getUndistToDist() {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.getUndistToDist();
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public boofcv.struct.distort.PixelTransform2_F32 boofcv.alg.shapes.polygon.BinaryPolygonDetector.getUndistToDist()";
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((boofcv.struct.distort.PixelTransform2_F32) $__result);
    }

    // Implementation of getRefinePolygon()
    public boofcv.alg.shapes.polygon.RefineBinaryPolygon getRefinePolygon() {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.getRefinePolygon();
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public boofcv.alg.shapes.polygon.RefineBinaryPolygon<T> boofcv.alg.shapes.polygon.BinaryPolygonDetector.getRefinePolygon()";
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((boofcv.alg.shapes.polygon.RefineBinaryPolygon) $__result);
    }

    // Implementation of getPolygonInfo()
    public org.ddogleg.struct.FastQueue getPolygonInfo() {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.getPolygonInfo();
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public org.ddogleg.struct.FastQueue<boofcv.alg.shapes.polygon.BinaryPolygonDetector$Info> boofcv.alg.shapes.polygon.BinaryPolygonDetector.getPolygonInfo()";
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((org.ddogleg.struct.FastQueue) $__result);
    }

    // Implementation of getMinimumSides()
    public int getMinimumSides() {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.getMinimumSides();
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public int boofcv.alg.shapes.polygon.BinaryPolygonDetector.getMinimumSides()";
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((java.lang.Integer) $__result).intValue();
    }

    // Implementation of getMaximumSides()
    public int getMaximumSides() {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.getMaximumSides();
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public int boofcv.alg.shapes.polygon.BinaryPolygonDetector.getMaximumSides()";
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((java.lang.Integer) $__result).intValue();
    }

    // Implementation of getLabeled()
    public boofcv.struct.image.GrayS32 getLabeled() {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.getLabeled();
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public boofcv.struct.image.GrayS32 boofcv.alg.shapes.polygon.BinaryPolygonDetector.getLabeled()";
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((boofcv.struct.image.GrayS32) $__result);
    }

    // Implementation of getInputType()
    public java.lang.Class getInputType() {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.getInputType();
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public java.lang.Class<T> boofcv.alg.shapes.polygon.BinaryPolygonDetector.getInputType()";
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((java.lang.Class) $__result);
    }

    // Implementation of getFoundPolygons()
    public org.ddogleg.struct.FastQueue getFoundPolygons() {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.getFoundPolygons();
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public org.ddogleg.struct.FastQueue<georegression.struct.shapes.Polygon2D_F64> boofcv.alg.shapes.polygon.BinaryPolygonDetector.getFoundPolygons()";
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((org.ddogleg.struct.FastQueue) $__result);
    }

    // Implementation of getEdgeThreshold()
    public double getEdgeThreshold() {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.getEdgeThreshold();
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public double boofcv.alg.shapes.polygon.BinaryPolygonDetector.getEdgeThreshold()";
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((java.lang.Double) $__result).doubleValue();
    }

    // Implementation of getDistToUndist()
    public boofcv.struct.distort.PixelTransform2_F32 getDistToUndist() {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.getDistToUndist();
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public boofcv.struct.distort.PixelTransform2_F32 boofcv.alg.shapes.polygon.BinaryPolygonDetector.getDistToUndist()";
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((boofcv.struct.distort.PixelTransform2_F32) $__result);
    }

    // Implementation of getAllContours(LinearContourLabelChang2004)
    public java.util.List getAllContours(boofcv.alg.filter.binary.LinearContourLabelChang2004 $param_LinearContourLabelChang2004_1) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.getAllContours( $param_LinearContourLabelChang2004_1);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public java.util.List<boofcv.alg.filter.binary.Contour> boofcv.alg.shapes.polygon.BinaryPolygonDetector.getAllContours(boofcv.alg.filter.binary.LinearContourLabelChang2004)";
                $__params.add($param_LinearContourLabelChang2004_1);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((java.util.List) $__result);
    }

    // Implementation of clearLensDistortion()
    public void clearLensDistortion() {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.clearLensDistortion();
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.shapes.polygon.BinaryPolygonDetector.clearLensDistortion()";
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
