/*
 * Stub for class boofcv.alg.misc.ImageMiscOps
 * Generated by Sapphire Compiler (sc).
 */
package boofcv.alg.misc.stubs;


public final class ImageMiscOps_Stub extends boofcv.alg.misc.ImageMiscOps implements sapphire.common.AppObjectStub {

    sapphire.policy.SapphirePolicy.SapphireClientPolicy $__client = null;
    boolean $__directInvocation = false;

    public ImageMiscOps_Stub () {
        super();
    }


    public void $__initialize(sapphire.policy.SapphirePolicy.SapphireClientPolicy client) {
        $__client = client;
    }

    public void $__initialize(boolean directInvocation) {
        $__directInvocation = directInvocation;
    }

    public Object $__clone() throws CloneNotSupportedException {
        return super.clone();
    }



    // Implementation of rotateCW(GrayS64, GrayS64)
    public void rotateCW(boofcv.struct.image.GrayS64 $param_GrayS64_1, boofcv.struct.image.GrayS64 $param_GrayS64_2) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.rotateCW( $param_GrayS64_1,  $param_GrayS64_2);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.rotateCW(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)";
                $__params.add($param_GrayS64_1);
                $__params.add($param_GrayS64_2);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of rotateCW(GrayS64)
    public void rotateCW(boofcv.struct.image.GrayS64 $param_GrayS64_1) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.rotateCW( $param_GrayS64_1);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.rotateCW(boofcv.struct.image.GrayS64)";
                $__params.add($param_GrayS64_1);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of rotateCW(GrayS32, GrayS32)
    public void rotateCW(boofcv.struct.image.GrayS32 $param_GrayS32_1, boofcv.struct.image.GrayS32 $param_GrayS32_2) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.rotateCW( $param_GrayS32_1,  $param_GrayS32_2);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.rotateCW(boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)";
                $__params.add($param_GrayS32_1);
                $__params.add($param_GrayS32_2);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of rotateCW(GrayS32)
    public void rotateCW(boofcv.struct.image.GrayS32 $param_GrayS32_1) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.rotateCW( $param_GrayS32_1);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.rotateCW(boofcv.struct.image.GrayS32)";
                $__params.add($param_GrayS32_1);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of rotateCW(GrayI8, GrayI8)
    public void rotateCW(boofcv.struct.image.GrayI8 $param_GrayI8_1, boofcv.struct.image.GrayI8 $param_GrayI8_2) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.rotateCW( $param_GrayI8_1,  $param_GrayI8_2);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.rotateCW(boofcv.struct.image.GrayI8,boofcv.struct.image.GrayI8)";
                $__params.add($param_GrayI8_1);
                $__params.add($param_GrayI8_2);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of rotateCW(GrayI8)
    public void rotateCW(boofcv.struct.image.GrayI8 $param_GrayI8_1) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.rotateCW( $param_GrayI8_1);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.rotateCW(boofcv.struct.image.GrayI8)";
                $__params.add($param_GrayI8_1);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of rotateCW(GrayI16, GrayI16)
    public void rotateCW(boofcv.struct.image.GrayI16 $param_GrayI16_1, boofcv.struct.image.GrayI16 $param_GrayI16_2) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.rotateCW( $param_GrayI16_1,  $param_GrayI16_2);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.rotateCW(boofcv.struct.image.GrayI16,boofcv.struct.image.GrayI16)";
                $__params.add($param_GrayI16_1);
                $__params.add($param_GrayI16_2);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of rotateCW(GrayI16)
    public void rotateCW(boofcv.struct.image.GrayI16 $param_GrayI16_1) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.rotateCW( $param_GrayI16_1);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.rotateCW(boofcv.struct.image.GrayI16)";
                $__params.add($param_GrayI16_1);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of rotateCW(GrayF64, GrayF64)
    public void rotateCW(boofcv.struct.image.GrayF64 $param_GrayF64_1, boofcv.struct.image.GrayF64 $param_GrayF64_2) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.rotateCW( $param_GrayF64_1,  $param_GrayF64_2);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.rotateCW(boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)";
                $__params.add($param_GrayF64_1);
                $__params.add($param_GrayF64_2);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of rotateCW(GrayF64)
    public void rotateCW(boofcv.struct.image.GrayF64 $param_GrayF64_1) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.rotateCW( $param_GrayF64_1);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.rotateCW(boofcv.struct.image.GrayF64)";
                $__params.add($param_GrayF64_1);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of rotateCW(GrayF32, GrayF32)
    public void rotateCW(boofcv.struct.image.GrayF32 $param_GrayF32_1, boofcv.struct.image.GrayF32 $param_GrayF32_2) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.rotateCW( $param_GrayF32_1,  $param_GrayF32_2);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.rotateCW(boofcv.struct.image.GrayF32,boofcv.struct.image.GrayF32)";
                $__params.add($param_GrayF32_1);
                $__params.add($param_GrayF32_2);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of rotateCW(GrayF32)
    public void rotateCW(boofcv.struct.image.GrayF32 $param_GrayF32_1) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.rotateCW( $param_GrayF32_1);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.rotateCW(boofcv.struct.image.GrayF32)";
                $__params.add($param_GrayF32_1);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of rotateCCW(GrayS64, GrayS64)
    public void rotateCCW(boofcv.struct.image.GrayS64 $param_GrayS64_1, boofcv.struct.image.GrayS64 $param_GrayS64_2) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.rotateCCW( $param_GrayS64_1,  $param_GrayS64_2);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.rotateCCW(boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)";
                $__params.add($param_GrayS64_1);
                $__params.add($param_GrayS64_2);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of rotateCCW(GrayS64)
    public void rotateCCW(boofcv.struct.image.GrayS64 $param_GrayS64_1) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.rotateCCW( $param_GrayS64_1);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.rotateCCW(boofcv.struct.image.GrayS64)";
                $__params.add($param_GrayS64_1);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of rotateCCW(GrayS32, GrayS32)
    public void rotateCCW(boofcv.struct.image.GrayS32 $param_GrayS32_1, boofcv.struct.image.GrayS32 $param_GrayS32_2) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.rotateCCW( $param_GrayS32_1,  $param_GrayS32_2);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.rotateCCW(boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)";
                $__params.add($param_GrayS32_1);
                $__params.add($param_GrayS32_2);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of rotateCCW(GrayS32)
    public void rotateCCW(boofcv.struct.image.GrayS32 $param_GrayS32_1) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.rotateCCW( $param_GrayS32_1);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.rotateCCW(boofcv.struct.image.GrayS32)";
                $__params.add($param_GrayS32_1);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of rotateCCW(GrayI8, GrayI8)
    public void rotateCCW(boofcv.struct.image.GrayI8 $param_GrayI8_1, boofcv.struct.image.GrayI8 $param_GrayI8_2) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.rotateCCW( $param_GrayI8_1,  $param_GrayI8_2);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.rotateCCW(boofcv.struct.image.GrayI8,boofcv.struct.image.GrayI8)";
                $__params.add($param_GrayI8_1);
                $__params.add($param_GrayI8_2);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of rotateCCW(GrayI8)
    public void rotateCCW(boofcv.struct.image.GrayI8 $param_GrayI8_1) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.rotateCCW( $param_GrayI8_1);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.rotateCCW(boofcv.struct.image.GrayI8)";
                $__params.add($param_GrayI8_1);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of rotateCCW(GrayI16, GrayI16)
    public void rotateCCW(boofcv.struct.image.GrayI16 $param_GrayI16_1, boofcv.struct.image.GrayI16 $param_GrayI16_2) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.rotateCCW( $param_GrayI16_1,  $param_GrayI16_2);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.rotateCCW(boofcv.struct.image.GrayI16,boofcv.struct.image.GrayI16)";
                $__params.add($param_GrayI16_1);
                $__params.add($param_GrayI16_2);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of rotateCCW(GrayI16)
    public void rotateCCW(boofcv.struct.image.GrayI16 $param_GrayI16_1) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.rotateCCW( $param_GrayI16_1);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.rotateCCW(boofcv.struct.image.GrayI16)";
                $__params.add($param_GrayI16_1);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of rotateCCW(GrayF64, GrayF64)
    public void rotateCCW(boofcv.struct.image.GrayF64 $param_GrayF64_1, boofcv.struct.image.GrayF64 $param_GrayF64_2) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.rotateCCW( $param_GrayF64_1,  $param_GrayF64_2);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.rotateCCW(boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)";
                $__params.add($param_GrayF64_1);
                $__params.add($param_GrayF64_2);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of rotateCCW(GrayF64)
    public void rotateCCW(boofcv.struct.image.GrayF64 $param_GrayF64_1) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.rotateCCW( $param_GrayF64_1);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.rotateCCW(boofcv.struct.image.GrayF64)";
                $__params.add($param_GrayF64_1);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of rotateCCW(GrayF32, GrayF32)
    public void rotateCCW(boofcv.struct.image.GrayF32 $param_GrayF32_1, boofcv.struct.image.GrayF32 $param_GrayF32_2) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.rotateCCW( $param_GrayF32_1,  $param_GrayF32_2);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.rotateCCW(boofcv.struct.image.GrayF32,boofcv.struct.image.GrayF32)";
                $__params.add($param_GrayF32_1);
                $__params.add($param_GrayF32_2);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of rotateCCW(GrayF32)
    public void rotateCCW(boofcv.struct.image.GrayF32 $param_GrayF32_1) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.rotateCCW( $param_GrayF32_1);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.rotateCCW(boofcv.struct.image.GrayF32)";
                $__params.add($param_GrayF32_1);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of insertBand(GrayS64, int, InterleavedS64)
    public void insertBand(boofcv.struct.image.GrayS64 $param_GrayS64_1, int $param_int_2, boofcv.struct.image.InterleavedS64 $param_InterleavedS64_3) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.insertBand( $param_GrayS64_1,  $param_int_2,  $param_InterleavedS64_3);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.insertBand(boofcv.struct.image.GrayS64,int,boofcv.struct.image.InterleavedS64)";
                $__params.add($param_GrayS64_1);
                $__params.add($param_int_2);
                $__params.add($param_InterleavedS64_3);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of insertBand(GrayS32, int, InterleavedS32)
    public void insertBand(boofcv.struct.image.GrayS32 $param_GrayS32_1, int $param_int_2, boofcv.struct.image.InterleavedS32 $param_InterleavedS32_3) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.insertBand( $param_GrayS32_1,  $param_int_2,  $param_InterleavedS32_3);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.insertBand(boofcv.struct.image.GrayS32,int,boofcv.struct.image.InterleavedS32)";
                $__params.add($param_GrayS32_1);
                $__params.add($param_int_2);
                $__params.add($param_InterleavedS32_3);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of insertBand(GrayI8, int, InterleavedI8)
    public void insertBand(boofcv.struct.image.GrayI8 $param_GrayI8_1, int $param_int_2, boofcv.struct.image.InterleavedI8 $param_InterleavedI8_3) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.insertBand( $param_GrayI8_1,  $param_int_2,  $param_InterleavedI8_3);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.insertBand(boofcv.struct.image.GrayI8,int,boofcv.struct.image.InterleavedI8)";
                $__params.add($param_GrayI8_1);
                $__params.add($param_int_2);
                $__params.add($param_InterleavedI8_3);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of insertBand(GrayI16, int, InterleavedI16)
    public void insertBand(boofcv.struct.image.GrayI16 $param_GrayI16_1, int $param_int_2, boofcv.struct.image.InterleavedI16 $param_InterleavedI16_3) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.insertBand( $param_GrayI16_1,  $param_int_2,  $param_InterleavedI16_3);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.insertBand(boofcv.struct.image.GrayI16,int,boofcv.struct.image.InterleavedI16)";
                $__params.add($param_GrayI16_1);
                $__params.add($param_int_2);
                $__params.add($param_InterleavedI16_3);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of insertBand(GrayF64, int, InterleavedF64)
    public void insertBand(boofcv.struct.image.GrayF64 $param_GrayF64_1, int $param_int_2, boofcv.struct.image.InterleavedF64 $param_InterleavedF64_3) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.insertBand( $param_GrayF64_1,  $param_int_2,  $param_InterleavedF64_3);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.insertBand(boofcv.struct.image.GrayF64,int,boofcv.struct.image.InterleavedF64)";
                $__params.add($param_GrayF64_1);
                $__params.add($param_int_2);
                $__params.add($param_InterleavedF64_3);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of insertBand(GrayF32, int, InterleavedF32)
    public void insertBand(boofcv.struct.image.GrayF32 $param_GrayF32_1, int $param_int_2, boofcv.struct.image.InterleavedF32 $param_InterleavedF32_3) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.insertBand( $param_GrayF32_1,  $param_int_2,  $param_InterleavedF32_3);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.insertBand(boofcv.struct.image.GrayF32,int,boofcv.struct.image.InterleavedF32)";
                $__params.add($param_GrayF32_1);
                $__params.add($param_int_2);
                $__params.add($param_InterleavedF32_3);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of flipVertical(GrayS64)
    public void flipVertical(boofcv.struct.image.GrayS64 $param_GrayS64_1) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.flipVertical( $param_GrayS64_1);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.flipVertical(boofcv.struct.image.GrayS64)";
                $__params.add($param_GrayS64_1);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of flipVertical(GrayS32)
    public void flipVertical(boofcv.struct.image.GrayS32 $param_GrayS32_1) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.flipVertical( $param_GrayS32_1);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.flipVertical(boofcv.struct.image.GrayS32)";
                $__params.add($param_GrayS32_1);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of flipVertical(GrayI8)
    public void flipVertical(boofcv.struct.image.GrayI8 $param_GrayI8_1) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.flipVertical( $param_GrayI8_1);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.flipVertical(boofcv.struct.image.GrayI8)";
                $__params.add($param_GrayI8_1);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of flipVertical(GrayI16)
    public void flipVertical(boofcv.struct.image.GrayI16 $param_GrayI16_1) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.flipVertical( $param_GrayI16_1);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.flipVertical(boofcv.struct.image.GrayI16)";
                $__params.add($param_GrayI16_1);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of flipVertical(GrayF64)
    public void flipVertical(boofcv.struct.image.GrayF64 $param_GrayF64_1) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.flipVertical( $param_GrayF64_1);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.flipVertical(boofcv.struct.image.GrayF64)";
                $__params.add($param_GrayF64_1);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of flipVertical(GrayF32)
    public void flipVertical(boofcv.struct.image.GrayF32 $param_GrayF32_1) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.flipVertical( $param_GrayF32_1);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.flipVertical(boofcv.struct.image.GrayF32)";
                $__params.add($param_GrayF32_1);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of flipHorizontal(GrayS64)
    public void flipHorizontal(boofcv.struct.image.GrayS64 $param_GrayS64_1) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.flipHorizontal( $param_GrayS64_1);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.flipHorizontal(boofcv.struct.image.GrayS64)";
                $__params.add($param_GrayS64_1);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of flipHorizontal(GrayS32)
    public void flipHorizontal(boofcv.struct.image.GrayS32 $param_GrayS32_1) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.flipHorizontal( $param_GrayS32_1);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.flipHorizontal(boofcv.struct.image.GrayS32)";
                $__params.add($param_GrayS32_1);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of flipHorizontal(GrayI8)
    public void flipHorizontal(boofcv.struct.image.GrayI8 $param_GrayI8_1) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.flipHorizontal( $param_GrayI8_1);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.flipHorizontal(boofcv.struct.image.GrayI8)";
                $__params.add($param_GrayI8_1);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of flipHorizontal(GrayI16)
    public void flipHorizontal(boofcv.struct.image.GrayI16 $param_GrayI16_1) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.flipHorizontal( $param_GrayI16_1);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.flipHorizontal(boofcv.struct.image.GrayI16)";
                $__params.add($param_GrayI16_1);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of flipHorizontal(GrayF64)
    public void flipHorizontal(boofcv.struct.image.GrayF64 $param_GrayF64_1) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.flipHorizontal( $param_GrayF64_1);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.flipHorizontal(boofcv.struct.image.GrayF64)";
                $__params.add($param_GrayF64_1);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of flipHorizontal(GrayF32)
    public void flipHorizontal(boofcv.struct.image.GrayF32 $param_GrayF32_1) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.flipHorizontal( $param_GrayF32_1);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.flipHorizontal(boofcv.struct.image.GrayF32)";
                $__params.add($param_GrayF32_1);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of fillUniform(InterleavedS64, Random, long, long)
    public void fillUniform(boofcv.struct.image.InterleavedS64 $param_InterleavedS64_1, java.util.Random $param_Random_2, long $param_long_3, long $param_long_4) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.fillUniform( $param_InterleavedS64_1,  $param_Random_2,  $param_long_3,  $param_long_4);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.fillUniform(boofcv.struct.image.InterleavedS64,java.util.Random,long,long)";
                $__params.add($param_InterleavedS64_1);
                $__params.add($param_Random_2);
                $__params.add($param_long_3);
                $__params.add($param_long_4);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of fillUniform(InterleavedS32, Random, int, int)
    public void fillUniform(boofcv.struct.image.InterleavedS32 $param_InterleavedS32_1, java.util.Random $param_Random_2, int $param_int_3, int $param_int_4) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.fillUniform( $param_InterleavedS32_1,  $param_Random_2,  $param_int_3,  $param_int_4);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.fillUniform(boofcv.struct.image.InterleavedS32,java.util.Random,int,int)";
                $__params.add($param_InterleavedS32_1);
                $__params.add($param_Random_2);
                $__params.add($param_int_3);
                $__params.add($param_int_4);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of fillUniform(InterleavedI8, Random, int, int)
    public void fillUniform(boofcv.struct.image.InterleavedI8 $param_InterleavedI8_1, java.util.Random $param_Random_2, int $param_int_3, int $param_int_4) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.fillUniform( $param_InterleavedI8_1,  $param_Random_2,  $param_int_3,  $param_int_4);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.fillUniform(boofcv.struct.image.InterleavedI8,java.util.Random,int,int)";
                $__params.add($param_InterleavedI8_1);
                $__params.add($param_Random_2);
                $__params.add($param_int_3);
                $__params.add($param_int_4);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of fillUniform(InterleavedI16, Random, int, int)
    public void fillUniform(boofcv.struct.image.InterleavedI16 $param_InterleavedI16_1, java.util.Random $param_Random_2, int $param_int_3, int $param_int_4) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.fillUniform( $param_InterleavedI16_1,  $param_Random_2,  $param_int_3,  $param_int_4);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.fillUniform(boofcv.struct.image.InterleavedI16,java.util.Random,int,int)";
                $__params.add($param_InterleavedI16_1);
                $__params.add($param_Random_2);
                $__params.add($param_int_3);
                $__params.add($param_int_4);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of fillUniform(InterleavedF64, Random, double, double)
    public void fillUniform(boofcv.struct.image.InterleavedF64 $param_InterleavedF64_1, java.util.Random $param_Random_2, double $param_double_3, double $param_double_4) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.fillUniform( $param_InterleavedF64_1,  $param_Random_2,  $param_double_3,  $param_double_4);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.fillUniform(boofcv.struct.image.InterleavedF64,java.util.Random,double,double)";
                $__params.add($param_InterleavedF64_1);
                $__params.add($param_Random_2);
                $__params.add($param_double_3);
                $__params.add($param_double_4);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of fillUniform(InterleavedF32, Random, float, float)
    public void fillUniform(boofcv.struct.image.InterleavedF32 $param_InterleavedF32_1, java.util.Random $param_Random_2, float $param_float_3, float $param_float_4) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.fillUniform( $param_InterleavedF32_1,  $param_Random_2,  $param_float_3,  $param_float_4);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.fillUniform(boofcv.struct.image.InterleavedF32,java.util.Random,float,float)";
                $__params.add($param_InterleavedF32_1);
                $__params.add($param_Random_2);
                $__params.add($param_float_3);
                $__params.add($param_float_4);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of fillUniform(GrayS64, Random, long, long)
    public void fillUniform(boofcv.struct.image.GrayS64 $param_GrayS64_1, java.util.Random $param_Random_2, long $param_long_3, long $param_long_4) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.fillUniform( $param_GrayS64_1,  $param_Random_2,  $param_long_3,  $param_long_4);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.fillUniform(boofcv.struct.image.GrayS64,java.util.Random,long,long)";
                $__params.add($param_GrayS64_1);
                $__params.add($param_Random_2);
                $__params.add($param_long_3);
                $__params.add($param_long_4);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of fillUniform(GrayS32, Random, int, int)
    public void fillUniform(boofcv.struct.image.GrayS32 $param_GrayS32_1, java.util.Random $param_Random_2, int $param_int_3, int $param_int_4) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.fillUniform( $param_GrayS32_1,  $param_Random_2,  $param_int_3,  $param_int_4);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.fillUniform(boofcv.struct.image.GrayS32,java.util.Random,int,int)";
                $__params.add($param_GrayS32_1);
                $__params.add($param_Random_2);
                $__params.add($param_int_3);
                $__params.add($param_int_4);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of fillUniform(GrayI8, Random, int, int)
    public void fillUniform(boofcv.struct.image.GrayI8 $param_GrayI8_1, java.util.Random $param_Random_2, int $param_int_3, int $param_int_4) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.fillUniform( $param_GrayI8_1,  $param_Random_2,  $param_int_3,  $param_int_4);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.fillUniform(boofcv.struct.image.GrayI8,java.util.Random,int,int)";
                $__params.add($param_GrayI8_1);
                $__params.add($param_Random_2);
                $__params.add($param_int_3);
                $__params.add($param_int_4);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of fillUniform(GrayI16, Random, int, int)
    public void fillUniform(boofcv.struct.image.GrayI16 $param_GrayI16_1, java.util.Random $param_Random_2, int $param_int_3, int $param_int_4) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.fillUniform( $param_GrayI16_1,  $param_Random_2,  $param_int_3,  $param_int_4);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.fillUniform(boofcv.struct.image.GrayI16,java.util.Random,int,int)";
                $__params.add($param_GrayI16_1);
                $__params.add($param_Random_2);
                $__params.add($param_int_3);
                $__params.add($param_int_4);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of fillUniform(GrayF64, Random, double, double)
    public void fillUniform(boofcv.struct.image.GrayF64 $param_GrayF64_1, java.util.Random $param_Random_2, double $param_double_3, double $param_double_4) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.fillUniform( $param_GrayF64_1,  $param_Random_2,  $param_double_3,  $param_double_4);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.fillUniform(boofcv.struct.image.GrayF64,java.util.Random,double,double)";
                $__params.add($param_GrayF64_1);
                $__params.add($param_Random_2);
                $__params.add($param_double_3);
                $__params.add($param_double_4);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of fillUniform(GrayF32, Random, float, float)
    public void fillUniform(boofcv.struct.image.GrayF32 $param_GrayF32_1, java.util.Random $param_Random_2, float $param_float_3, float $param_float_4) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.fillUniform( $param_GrayF32_1,  $param_Random_2,  $param_float_3,  $param_float_4);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.fillUniform(boofcv.struct.image.GrayF32,java.util.Random,float,float)";
                $__params.add($param_GrayF32_1);
                $__params.add($param_Random_2);
                $__params.add($param_float_3);
                $__params.add($param_float_4);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of fillRectangle(InterleavedS64, long, int, int, int, int)
    public void fillRectangle(boofcv.struct.image.InterleavedS64 $param_InterleavedS64_1, long $param_long_2, int $param_int_3, int $param_int_4, int $param_int_5, int $param_int_6) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.fillRectangle( $param_InterleavedS64_1,  $param_long_2,  $param_int_3,  $param_int_4,  $param_int_5,  $param_int_6);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.fillRectangle(boofcv.struct.image.InterleavedS64,long,int,int,int,int)";
                $__params.add($param_InterleavedS64_1);
                $__params.add($param_long_2);
                $__params.add($param_int_3);
                $__params.add($param_int_4);
                $__params.add($param_int_5);
                $__params.add($param_int_6);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of fillRectangle(InterleavedS32, int, int, int, int, int)
    public void fillRectangle(boofcv.struct.image.InterleavedS32 $param_InterleavedS32_1, int $param_int_2, int $param_int_3, int $param_int_4, int $param_int_5, int $param_int_6) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.fillRectangle( $param_InterleavedS32_1,  $param_int_2,  $param_int_3,  $param_int_4,  $param_int_5,  $param_int_6);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.fillRectangle(boofcv.struct.image.InterleavedS32,int,int,int,int,int)";
                $__params.add($param_InterleavedS32_1);
                $__params.add($param_int_2);
                $__params.add($param_int_3);
                $__params.add($param_int_4);
                $__params.add($param_int_5);
                $__params.add($param_int_6);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of fillRectangle(InterleavedI8, byte, int, int, int, int)
    public void fillRectangle(boofcv.struct.image.InterleavedI8 $param_InterleavedI8_1, byte $param_byte_2, int $param_int_3, int $param_int_4, int $param_int_5, int $param_int_6) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.fillRectangle( $param_InterleavedI8_1,  $param_byte_2,  $param_int_3,  $param_int_4,  $param_int_5,  $param_int_6);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.fillRectangle(boofcv.struct.image.InterleavedI8,byte,int,int,int,int)";
                $__params.add($param_InterleavedI8_1);
                $__params.add($param_byte_2);
                $__params.add($param_int_3);
                $__params.add($param_int_4);
                $__params.add($param_int_5);
                $__params.add($param_int_6);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of fillRectangle(InterleavedI16, short, int, int, int, int)
    public void fillRectangle(boofcv.struct.image.InterleavedI16 $param_InterleavedI16_1, short $param_short_2, int $param_int_3, int $param_int_4, int $param_int_5, int $param_int_6) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.fillRectangle( $param_InterleavedI16_1,  $param_short_2,  $param_int_3,  $param_int_4,  $param_int_5,  $param_int_6);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.fillRectangle(boofcv.struct.image.InterleavedI16,short,int,int,int,int)";
                $__params.add($param_InterleavedI16_1);
                $__params.add($param_short_2);
                $__params.add($param_int_3);
                $__params.add($param_int_4);
                $__params.add($param_int_5);
                $__params.add($param_int_6);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of fillRectangle(InterleavedF64, double, int, int, int, int)
    public void fillRectangle(boofcv.struct.image.InterleavedF64 $param_InterleavedF64_1, double $param_double_2, int $param_int_3, int $param_int_4, int $param_int_5, int $param_int_6) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.fillRectangle( $param_InterleavedF64_1,  $param_double_2,  $param_int_3,  $param_int_4,  $param_int_5,  $param_int_6);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.fillRectangle(boofcv.struct.image.InterleavedF64,double,int,int,int,int)";
                $__params.add($param_InterleavedF64_1);
                $__params.add($param_double_2);
                $__params.add($param_int_3);
                $__params.add($param_int_4);
                $__params.add($param_int_5);
                $__params.add($param_int_6);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of fillRectangle(InterleavedF32, float, int, int, int, int)
    public void fillRectangle(boofcv.struct.image.InterleavedF32 $param_InterleavedF32_1, float $param_float_2, int $param_int_3, int $param_int_4, int $param_int_5, int $param_int_6) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.fillRectangle( $param_InterleavedF32_1,  $param_float_2,  $param_int_3,  $param_int_4,  $param_int_5,  $param_int_6);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.fillRectangle(boofcv.struct.image.InterleavedF32,float,int,int,int,int)";
                $__params.add($param_InterleavedF32_1);
                $__params.add($param_float_2);
                $__params.add($param_int_3);
                $__params.add($param_int_4);
                $__params.add($param_int_5);
                $__params.add($param_int_6);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of fillRectangle(GrayS64, long, int, int, int, int)
    public void fillRectangle(boofcv.struct.image.GrayS64 $param_GrayS64_1, long $param_long_2, int $param_int_3, int $param_int_4, int $param_int_5, int $param_int_6) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.fillRectangle( $param_GrayS64_1,  $param_long_2,  $param_int_3,  $param_int_4,  $param_int_5,  $param_int_6);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.fillRectangle(boofcv.struct.image.GrayS64,long,int,int,int,int)";
                $__params.add($param_GrayS64_1);
                $__params.add($param_long_2);
                $__params.add($param_int_3);
                $__params.add($param_int_4);
                $__params.add($param_int_5);
                $__params.add($param_int_6);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of fillRectangle(GrayS32, int, int, int, int, int)
    public void fillRectangle(boofcv.struct.image.GrayS32 $param_GrayS32_1, int $param_int_2, int $param_int_3, int $param_int_4, int $param_int_5, int $param_int_6) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.fillRectangle( $param_GrayS32_1,  $param_int_2,  $param_int_3,  $param_int_4,  $param_int_5,  $param_int_6);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.fillRectangle(boofcv.struct.image.GrayS32,int,int,int,int,int)";
                $__params.add($param_GrayS32_1);
                $__params.add($param_int_2);
                $__params.add($param_int_3);
                $__params.add($param_int_4);
                $__params.add($param_int_5);
                $__params.add($param_int_6);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of fillRectangle(GrayI8, int, int, int, int, int)
    public void fillRectangle(boofcv.struct.image.GrayI8 $param_GrayI8_1, int $param_int_2, int $param_int_3, int $param_int_4, int $param_int_5, int $param_int_6) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.fillRectangle( $param_GrayI8_1,  $param_int_2,  $param_int_3,  $param_int_4,  $param_int_5,  $param_int_6);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.fillRectangle(boofcv.struct.image.GrayI8,int,int,int,int,int)";
                $__params.add($param_GrayI8_1);
                $__params.add($param_int_2);
                $__params.add($param_int_3);
                $__params.add($param_int_4);
                $__params.add($param_int_5);
                $__params.add($param_int_6);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of fillRectangle(GrayI16, int, int, int, int, int)
    public void fillRectangle(boofcv.struct.image.GrayI16 $param_GrayI16_1, int $param_int_2, int $param_int_3, int $param_int_4, int $param_int_5, int $param_int_6) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.fillRectangle( $param_GrayI16_1,  $param_int_2,  $param_int_3,  $param_int_4,  $param_int_5,  $param_int_6);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.fillRectangle(boofcv.struct.image.GrayI16,int,int,int,int,int)";
                $__params.add($param_GrayI16_1);
                $__params.add($param_int_2);
                $__params.add($param_int_3);
                $__params.add($param_int_4);
                $__params.add($param_int_5);
                $__params.add($param_int_6);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of fillRectangle(GrayF64, double, int, int, int, int)
    public void fillRectangle(boofcv.struct.image.GrayF64 $param_GrayF64_1, double $param_double_2, int $param_int_3, int $param_int_4, int $param_int_5, int $param_int_6) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.fillRectangle( $param_GrayF64_1,  $param_double_2,  $param_int_3,  $param_int_4,  $param_int_5,  $param_int_6);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.fillRectangle(boofcv.struct.image.GrayF64,double,int,int,int,int)";
                $__params.add($param_GrayF64_1);
                $__params.add($param_double_2);
                $__params.add($param_int_3);
                $__params.add($param_int_4);
                $__params.add($param_int_5);
                $__params.add($param_int_6);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of fillRectangle(GrayF32, float, int, int, int, int)
    public void fillRectangle(boofcv.struct.image.GrayF32 $param_GrayF32_1, float $param_float_2, int $param_int_3, int $param_int_4, int $param_int_5, int $param_int_6) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.fillRectangle( $param_GrayF32_1,  $param_float_2,  $param_int_3,  $param_int_4,  $param_int_5,  $param_int_6);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.fillRectangle(boofcv.struct.image.GrayF32,float,int,int,int,int)";
                $__params.add($param_GrayF32_1);
                $__params.add($param_float_2);
                $__params.add($param_int_3);
                $__params.add($param_int_4);
                $__params.add($param_int_5);
                $__params.add($param_int_6);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of fillGaussian(InterleavedS64, Random, double, double, long, long)
    public void fillGaussian(boofcv.struct.image.InterleavedS64 $param_InterleavedS64_1, java.util.Random $param_Random_2, double $param_double_3, double $param_double_4, long $param_long_5, long $param_long_6) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.fillGaussian( $param_InterleavedS64_1,  $param_Random_2,  $param_double_3,  $param_double_4,  $param_long_5,  $param_long_6);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.fillGaussian(boofcv.struct.image.InterleavedS64,java.util.Random,double,double,long,long)";
                $__params.add($param_InterleavedS64_1);
                $__params.add($param_Random_2);
                $__params.add($param_double_3);
                $__params.add($param_double_4);
                $__params.add($param_long_5);
                $__params.add($param_long_6);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of fillGaussian(InterleavedS32, Random, double, double, int, int)
    public void fillGaussian(boofcv.struct.image.InterleavedS32 $param_InterleavedS32_1, java.util.Random $param_Random_2, double $param_double_3, double $param_double_4, int $param_int_5, int $param_int_6) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.fillGaussian( $param_InterleavedS32_1,  $param_Random_2,  $param_double_3,  $param_double_4,  $param_int_5,  $param_int_6);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.fillGaussian(boofcv.struct.image.InterleavedS32,java.util.Random,double,double,int,int)";
                $__params.add($param_InterleavedS32_1);
                $__params.add($param_Random_2);
                $__params.add($param_double_3);
                $__params.add($param_double_4);
                $__params.add($param_int_5);
                $__params.add($param_int_6);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of fillGaussian(InterleavedI8, Random, double, double, int, int)
    public void fillGaussian(boofcv.struct.image.InterleavedI8 $param_InterleavedI8_1, java.util.Random $param_Random_2, double $param_double_3, double $param_double_4, int $param_int_5, int $param_int_6) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.fillGaussian( $param_InterleavedI8_1,  $param_Random_2,  $param_double_3,  $param_double_4,  $param_int_5,  $param_int_6);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.fillGaussian(boofcv.struct.image.InterleavedI8,java.util.Random,double,double,int,int)";
                $__params.add($param_InterleavedI8_1);
                $__params.add($param_Random_2);
                $__params.add($param_double_3);
                $__params.add($param_double_4);
                $__params.add($param_int_5);
                $__params.add($param_int_6);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of fillGaussian(InterleavedI16, Random, double, double, int, int)
    public void fillGaussian(boofcv.struct.image.InterleavedI16 $param_InterleavedI16_1, java.util.Random $param_Random_2, double $param_double_3, double $param_double_4, int $param_int_5, int $param_int_6) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.fillGaussian( $param_InterleavedI16_1,  $param_Random_2,  $param_double_3,  $param_double_4,  $param_int_5,  $param_int_6);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.fillGaussian(boofcv.struct.image.InterleavedI16,java.util.Random,double,double,int,int)";
                $__params.add($param_InterleavedI16_1);
                $__params.add($param_Random_2);
                $__params.add($param_double_3);
                $__params.add($param_double_4);
                $__params.add($param_int_5);
                $__params.add($param_int_6);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of fillGaussian(InterleavedF64, Random, double, double, double, double)
    public void fillGaussian(boofcv.struct.image.InterleavedF64 $param_InterleavedF64_1, java.util.Random $param_Random_2, double $param_double_3, double $param_double_4, double $param_double_5, double $param_double_6) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.fillGaussian( $param_InterleavedF64_1,  $param_Random_2,  $param_double_3,  $param_double_4,  $param_double_5,  $param_double_6);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.fillGaussian(boofcv.struct.image.InterleavedF64,java.util.Random,double,double,double,double)";
                $__params.add($param_InterleavedF64_1);
                $__params.add($param_Random_2);
                $__params.add($param_double_3);
                $__params.add($param_double_4);
                $__params.add($param_double_5);
                $__params.add($param_double_6);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of fillGaussian(InterleavedF32, Random, double, double, float, float)
    public void fillGaussian(boofcv.struct.image.InterleavedF32 $param_InterleavedF32_1, java.util.Random $param_Random_2, double $param_double_3, double $param_double_4, float $param_float_5, float $param_float_6) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.fillGaussian( $param_InterleavedF32_1,  $param_Random_2,  $param_double_3,  $param_double_4,  $param_float_5,  $param_float_6);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.fillGaussian(boofcv.struct.image.InterleavedF32,java.util.Random,double,double,float,float)";
                $__params.add($param_InterleavedF32_1);
                $__params.add($param_Random_2);
                $__params.add($param_double_3);
                $__params.add($param_double_4);
                $__params.add($param_float_5);
                $__params.add($param_float_6);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of fillGaussian(GrayS64, Random, double, double, long, long)
    public void fillGaussian(boofcv.struct.image.GrayS64 $param_GrayS64_1, java.util.Random $param_Random_2, double $param_double_3, double $param_double_4, long $param_long_5, long $param_long_6) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.fillGaussian( $param_GrayS64_1,  $param_Random_2,  $param_double_3,  $param_double_4,  $param_long_5,  $param_long_6);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.fillGaussian(boofcv.struct.image.GrayS64,java.util.Random,double,double,long,long)";
                $__params.add($param_GrayS64_1);
                $__params.add($param_Random_2);
                $__params.add($param_double_3);
                $__params.add($param_double_4);
                $__params.add($param_long_5);
                $__params.add($param_long_6);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of fillGaussian(GrayS32, Random, double, double, int, int)
    public void fillGaussian(boofcv.struct.image.GrayS32 $param_GrayS32_1, java.util.Random $param_Random_2, double $param_double_3, double $param_double_4, int $param_int_5, int $param_int_6) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.fillGaussian( $param_GrayS32_1,  $param_Random_2,  $param_double_3,  $param_double_4,  $param_int_5,  $param_int_6);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.fillGaussian(boofcv.struct.image.GrayS32,java.util.Random,double,double,int,int)";
                $__params.add($param_GrayS32_1);
                $__params.add($param_Random_2);
                $__params.add($param_double_3);
                $__params.add($param_double_4);
                $__params.add($param_int_5);
                $__params.add($param_int_6);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of fillGaussian(GrayI8, Random, double, double, int, int)
    public void fillGaussian(boofcv.struct.image.GrayI8 $param_GrayI8_1, java.util.Random $param_Random_2, double $param_double_3, double $param_double_4, int $param_int_5, int $param_int_6) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.fillGaussian( $param_GrayI8_1,  $param_Random_2,  $param_double_3,  $param_double_4,  $param_int_5,  $param_int_6);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.fillGaussian(boofcv.struct.image.GrayI8,java.util.Random,double,double,int,int)";
                $__params.add($param_GrayI8_1);
                $__params.add($param_Random_2);
                $__params.add($param_double_3);
                $__params.add($param_double_4);
                $__params.add($param_int_5);
                $__params.add($param_int_6);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of fillGaussian(GrayI16, Random, double, double, int, int)
    public void fillGaussian(boofcv.struct.image.GrayI16 $param_GrayI16_1, java.util.Random $param_Random_2, double $param_double_3, double $param_double_4, int $param_int_5, int $param_int_6) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.fillGaussian( $param_GrayI16_1,  $param_Random_2,  $param_double_3,  $param_double_4,  $param_int_5,  $param_int_6);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.fillGaussian(boofcv.struct.image.GrayI16,java.util.Random,double,double,int,int)";
                $__params.add($param_GrayI16_1);
                $__params.add($param_Random_2);
                $__params.add($param_double_3);
                $__params.add($param_double_4);
                $__params.add($param_int_5);
                $__params.add($param_int_6);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of fillGaussian(GrayF64, Random, double, double, double, double)
    public void fillGaussian(boofcv.struct.image.GrayF64 $param_GrayF64_1, java.util.Random $param_Random_2, double $param_double_3, double $param_double_4, double $param_double_5, double $param_double_6) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.fillGaussian( $param_GrayF64_1,  $param_Random_2,  $param_double_3,  $param_double_4,  $param_double_5,  $param_double_6);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.fillGaussian(boofcv.struct.image.GrayF64,java.util.Random,double,double,double,double)";
                $__params.add($param_GrayF64_1);
                $__params.add($param_Random_2);
                $__params.add($param_double_3);
                $__params.add($param_double_4);
                $__params.add($param_double_5);
                $__params.add($param_double_6);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of fillGaussian(GrayF32, Random, double, double, float, float)
    public void fillGaussian(boofcv.struct.image.GrayF32 $param_GrayF32_1, java.util.Random $param_Random_2, double $param_double_3, double $param_double_4, float $param_float_5, float $param_float_6) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.fillGaussian( $param_GrayF32_1,  $param_Random_2,  $param_double_3,  $param_double_4,  $param_float_5,  $param_float_6);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.fillGaussian(boofcv.struct.image.GrayF32,java.util.Random,double,double,float,float)";
                $__params.add($param_GrayF32_1);
                $__params.add($param_Random_2);
                $__params.add($param_double_3);
                $__params.add($param_double_4);
                $__params.add($param_float_5);
                $__params.add($param_float_6);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of fillBorder(GrayS64, long, int)
    public void fillBorder(boofcv.struct.image.GrayS64 $param_GrayS64_1, long $param_long_2, int $param_int_3) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.fillBorder( $param_GrayS64_1,  $param_long_2,  $param_int_3);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.fillBorder(boofcv.struct.image.GrayS64,long,int)";
                $__params.add($param_GrayS64_1);
                $__params.add($param_long_2);
                $__params.add($param_int_3);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of fillBorder(GrayS32, int, int)
    public void fillBorder(boofcv.struct.image.GrayS32 $param_GrayS32_1, int $param_int_2, int $param_int_3) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.fillBorder( $param_GrayS32_1,  $param_int_2,  $param_int_3);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.fillBorder(boofcv.struct.image.GrayS32,int,int)";
                $__params.add($param_GrayS32_1);
                $__params.add($param_int_2);
                $__params.add($param_int_3);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of fillBorder(GrayI8, int, int)
    public void fillBorder(boofcv.struct.image.GrayI8 $param_GrayI8_1, int $param_int_2, int $param_int_3) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.fillBorder( $param_GrayI8_1,  $param_int_2,  $param_int_3);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.fillBorder(boofcv.struct.image.GrayI8,int,int)";
                $__params.add($param_GrayI8_1);
                $__params.add($param_int_2);
                $__params.add($param_int_3);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of fillBorder(GrayI16, int, int)
    public void fillBorder(boofcv.struct.image.GrayI16 $param_GrayI16_1, int $param_int_2, int $param_int_3) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.fillBorder( $param_GrayI16_1,  $param_int_2,  $param_int_3);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.fillBorder(boofcv.struct.image.GrayI16,int,int)";
                $__params.add($param_GrayI16_1);
                $__params.add($param_int_2);
                $__params.add($param_int_3);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of fillBorder(GrayF64, double, int)
    public void fillBorder(boofcv.struct.image.GrayF64 $param_GrayF64_1, double $param_double_2, int $param_int_3) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.fillBorder( $param_GrayF64_1,  $param_double_2,  $param_int_3);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.fillBorder(boofcv.struct.image.GrayF64,double,int)";
                $__params.add($param_GrayF64_1);
                $__params.add($param_double_2);
                $__params.add($param_int_3);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of fillBorder(GrayF32, float, int)
    public void fillBorder(boofcv.struct.image.GrayF32 $param_GrayF32_1, float $param_float_2, int $param_int_3) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.fillBorder( $param_GrayF32_1,  $param_float_2,  $param_int_3);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.fillBorder(boofcv.struct.image.GrayF32,float,int)";
                $__params.add($param_GrayF32_1);
                $__params.add($param_float_2);
                $__params.add($param_int_3);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of fillBand(InterleavedS64, int, long)
    public void fillBand(boofcv.struct.image.InterleavedS64 $param_InterleavedS64_1, int $param_int_2, long $param_long_3) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.fillBand( $param_InterleavedS64_1,  $param_int_2,  $param_long_3);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.fillBand(boofcv.struct.image.InterleavedS64,int,long)";
                $__params.add($param_InterleavedS64_1);
                $__params.add($param_int_2);
                $__params.add($param_long_3);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of fillBand(InterleavedS32, int, int)
    public void fillBand(boofcv.struct.image.InterleavedS32 $param_InterleavedS32_1, int $param_int_2, int $param_int_3) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.fillBand( $param_InterleavedS32_1,  $param_int_2,  $param_int_3);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.fillBand(boofcv.struct.image.InterleavedS32,int,int)";
                $__params.add($param_InterleavedS32_1);
                $__params.add($param_int_2);
                $__params.add($param_int_3);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of fillBand(InterleavedI8, int, int)
    public void fillBand(boofcv.struct.image.InterleavedI8 $param_InterleavedI8_1, int $param_int_2, int $param_int_3) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.fillBand( $param_InterleavedI8_1,  $param_int_2,  $param_int_3);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.fillBand(boofcv.struct.image.InterleavedI8,int,int)";
                $__params.add($param_InterleavedI8_1);
                $__params.add($param_int_2);
                $__params.add($param_int_3);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of fillBand(InterleavedI16, int, int)
    public void fillBand(boofcv.struct.image.InterleavedI16 $param_InterleavedI16_1, int $param_int_2, int $param_int_3) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.fillBand( $param_InterleavedI16_1,  $param_int_2,  $param_int_3);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.fillBand(boofcv.struct.image.InterleavedI16,int,int)";
                $__params.add($param_InterleavedI16_1);
                $__params.add($param_int_2);
                $__params.add($param_int_3);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of fillBand(InterleavedF64, int, double)
    public void fillBand(boofcv.struct.image.InterleavedF64 $param_InterleavedF64_1, int $param_int_2, double $param_double_3) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.fillBand( $param_InterleavedF64_1,  $param_int_2,  $param_double_3);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.fillBand(boofcv.struct.image.InterleavedF64,int,double)";
                $__params.add($param_InterleavedF64_1);
                $__params.add($param_int_2);
                $__params.add($param_double_3);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of fillBand(InterleavedF32, int, float)
    public void fillBand(boofcv.struct.image.InterleavedF32 $param_InterleavedF32_1, int $param_int_2, float $param_float_3) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.fillBand( $param_InterleavedF32_1,  $param_int_2,  $param_float_3);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.fillBand(boofcv.struct.image.InterleavedF32,int,float)";
                $__params.add($param_InterleavedF32_1);
                $__params.add($param_int_2);
                $__params.add($param_float_3);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of fill(InterleavedS64, long[])
    public void fill(boofcv.struct.image.InterleavedS64 $param_InterleavedS64_1, long[] $param_arrayOf_long_2) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.fill( $param_InterleavedS64_1,  $param_arrayOf_long_2);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.fill(boofcv.struct.image.InterleavedS64,long[])";
                $__params.add($param_InterleavedS64_1);
                $__params.add($param_arrayOf_long_2);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of fill(InterleavedS64, long)
    public void fill(boofcv.struct.image.InterleavedS64 $param_InterleavedS64_1, long $param_long_2) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.fill( $param_InterleavedS64_1,  $param_long_2);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.fill(boofcv.struct.image.InterleavedS64,long)";
                $__params.add($param_InterleavedS64_1);
                $__params.add($param_long_2);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of fill(InterleavedS32, int[])
    public void fill(boofcv.struct.image.InterleavedS32 $param_InterleavedS32_1, int[] $param_arrayOf_int_2) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.fill( $param_InterleavedS32_1,  $param_arrayOf_int_2);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.fill(boofcv.struct.image.InterleavedS32,int[])";
                $__params.add($param_InterleavedS32_1);
                $__params.add($param_arrayOf_int_2);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of fill(InterleavedS32, int)
    public void fill(boofcv.struct.image.InterleavedS32 $param_InterleavedS32_1, int $param_int_2) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.fill( $param_InterleavedS32_1,  $param_int_2);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.fill(boofcv.struct.image.InterleavedS32,int)";
                $__params.add($param_InterleavedS32_1);
                $__params.add($param_int_2);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of fill(InterleavedI8, int[])
    public void fill(boofcv.struct.image.InterleavedI8 $param_InterleavedI8_1, int[] $param_arrayOf_int_2) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.fill( $param_InterleavedI8_1,  $param_arrayOf_int_2);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.fill(boofcv.struct.image.InterleavedI8,int[])";
                $__params.add($param_InterleavedI8_1);
                $__params.add($param_arrayOf_int_2);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of fill(InterleavedI8, int)
    public void fill(boofcv.struct.image.InterleavedI8 $param_InterleavedI8_1, int $param_int_2) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.fill( $param_InterleavedI8_1,  $param_int_2);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.fill(boofcv.struct.image.InterleavedI8,int)";
                $__params.add($param_InterleavedI8_1);
                $__params.add($param_int_2);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of fill(InterleavedI16, int[])
    public void fill(boofcv.struct.image.InterleavedI16 $param_InterleavedI16_1, int[] $param_arrayOf_int_2) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.fill( $param_InterleavedI16_1,  $param_arrayOf_int_2);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.fill(boofcv.struct.image.InterleavedI16,int[])";
                $__params.add($param_InterleavedI16_1);
                $__params.add($param_arrayOf_int_2);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of fill(InterleavedI16, int)
    public void fill(boofcv.struct.image.InterleavedI16 $param_InterleavedI16_1, int $param_int_2) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.fill( $param_InterleavedI16_1,  $param_int_2);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.fill(boofcv.struct.image.InterleavedI16,int)";
                $__params.add($param_InterleavedI16_1);
                $__params.add($param_int_2);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of fill(InterleavedF64, double[])
    public void fill(boofcv.struct.image.InterleavedF64 $param_InterleavedF64_1, double[] $param_arrayOf_double_2) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.fill( $param_InterleavedF64_1,  $param_arrayOf_double_2);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.fill(boofcv.struct.image.InterleavedF64,double[])";
                $__params.add($param_InterleavedF64_1);
                $__params.add($param_arrayOf_double_2);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of fill(InterleavedF64, double)
    public void fill(boofcv.struct.image.InterleavedF64 $param_InterleavedF64_1, double $param_double_2) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.fill( $param_InterleavedF64_1,  $param_double_2);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.fill(boofcv.struct.image.InterleavedF64,double)";
                $__params.add($param_InterleavedF64_1);
                $__params.add($param_double_2);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of fill(InterleavedF32, float[])
    public void fill(boofcv.struct.image.InterleavedF32 $param_InterleavedF32_1, float[] $param_arrayOf_float_2) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.fill( $param_InterleavedF32_1,  $param_arrayOf_float_2);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.fill(boofcv.struct.image.InterleavedF32,float[])";
                $__params.add($param_InterleavedF32_1);
                $__params.add($param_arrayOf_float_2);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of fill(InterleavedF32, float)
    public void fill(boofcv.struct.image.InterleavedF32 $param_InterleavedF32_1, float $param_float_2) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.fill( $param_InterleavedF32_1,  $param_float_2);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.fill(boofcv.struct.image.InterleavedF32,float)";
                $__params.add($param_InterleavedF32_1);
                $__params.add($param_float_2);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of fill(GrayS64, long)
    public void fill(boofcv.struct.image.GrayS64 $param_GrayS64_1, long $param_long_2) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.fill( $param_GrayS64_1,  $param_long_2);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.fill(boofcv.struct.image.GrayS64,long)";
                $__params.add($param_GrayS64_1);
                $__params.add($param_long_2);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of fill(GrayS32, int)
    public void fill(boofcv.struct.image.GrayS32 $param_GrayS32_1, int $param_int_2) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.fill( $param_GrayS32_1,  $param_int_2);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.fill(boofcv.struct.image.GrayS32,int)";
                $__params.add($param_GrayS32_1);
                $__params.add($param_int_2);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of fill(GrayI8, int)
    public void fill(boofcv.struct.image.GrayI8 $param_GrayI8_1, int $param_int_2) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.fill( $param_GrayI8_1,  $param_int_2);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.fill(boofcv.struct.image.GrayI8,int)";
                $__params.add($param_GrayI8_1);
                $__params.add($param_int_2);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of fill(GrayI16, int)
    public void fill(boofcv.struct.image.GrayI16 $param_GrayI16_1, int $param_int_2) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.fill( $param_GrayI16_1,  $param_int_2);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.fill(boofcv.struct.image.GrayI16,int)";
                $__params.add($param_GrayI16_1);
                $__params.add($param_int_2);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of fill(GrayF64, double)
    public void fill(boofcv.struct.image.GrayF64 $param_GrayF64_1, double $param_double_2) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.fill( $param_GrayF64_1,  $param_double_2);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.fill(boofcv.struct.image.GrayF64,double)";
                $__params.add($param_GrayF64_1);
                $__params.add($param_double_2);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of fill(GrayF32, float)
    public void fill(boofcv.struct.image.GrayF32 $param_GrayF32_1, float $param_float_2) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.fill( $param_GrayF32_1,  $param_float_2);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.fill(boofcv.struct.image.GrayF32,float)";
                $__params.add($param_GrayF32_1);
                $__params.add($param_float_2);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of copy(int, int, int, int, int, int, GrayS64, GrayS64)
    public void copy(int $param_int_1, int $param_int_2, int $param_int_3, int $param_int_4, int $param_int_5, int $param_int_6, boofcv.struct.image.GrayS64 $param_GrayS64_7, boofcv.struct.image.GrayS64 $param_GrayS64_8) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.copy( $param_int_1,  $param_int_2,  $param_int_3,  $param_int_4,  $param_int_5,  $param_int_6,  $param_GrayS64_7,  $param_GrayS64_8);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.copy(int,int,int,int,int,int,boofcv.struct.image.GrayS64,boofcv.struct.image.GrayS64)";
                $__params.add($param_int_1);
                $__params.add($param_int_2);
                $__params.add($param_int_3);
                $__params.add($param_int_4);
                $__params.add($param_int_5);
                $__params.add($param_int_6);
                $__params.add($param_GrayS64_7);
                $__params.add($param_GrayS64_8);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of copy(int, int, int, int, int, int, GrayS32, GrayS32)
    public void copy(int $param_int_1, int $param_int_2, int $param_int_3, int $param_int_4, int $param_int_5, int $param_int_6, boofcv.struct.image.GrayS32 $param_GrayS32_7, boofcv.struct.image.GrayS32 $param_GrayS32_8) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.copy( $param_int_1,  $param_int_2,  $param_int_3,  $param_int_4,  $param_int_5,  $param_int_6,  $param_GrayS32_7,  $param_GrayS32_8);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.copy(int,int,int,int,int,int,boofcv.struct.image.GrayS32,boofcv.struct.image.GrayS32)";
                $__params.add($param_int_1);
                $__params.add($param_int_2);
                $__params.add($param_int_3);
                $__params.add($param_int_4);
                $__params.add($param_int_5);
                $__params.add($param_int_6);
                $__params.add($param_GrayS32_7);
                $__params.add($param_GrayS32_8);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of copy(int, int, int, int, int, int, GrayI8, GrayI8)
    public void copy(int $param_int_1, int $param_int_2, int $param_int_3, int $param_int_4, int $param_int_5, int $param_int_6, boofcv.struct.image.GrayI8 $param_GrayI8_7, boofcv.struct.image.GrayI8 $param_GrayI8_8) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.copy( $param_int_1,  $param_int_2,  $param_int_3,  $param_int_4,  $param_int_5,  $param_int_6,  $param_GrayI8_7,  $param_GrayI8_8);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.copy(int,int,int,int,int,int,boofcv.struct.image.GrayI8,boofcv.struct.image.GrayI8)";
                $__params.add($param_int_1);
                $__params.add($param_int_2);
                $__params.add($param_int_3);
                $__params.add($param_int_4);
                $__params.add($param_int_5);
                $__params.add($param_int_6);
                $__params.add($param_GrayI8_7);
                $__params.add($param_GrayI8_8);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of copy(int, int, int, int, int, int, GrayI16, GrayI16)
    public void copy(int $param_int_1, int $param_int_2, int $param_int_3, int $param_int_4, int $param_int_5, int $param_int_6, boofcv.struct.image.GrayI16 $param_GrayI16_7, boofcv.struct.image.GrayI16 $param_GrayI16_8) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.copy( $param_int_1,  $param_int_2,  $param_int_3,  $param_int_4,  $param_int_5,  $param_int_6,  $param_GrayI16_7,  $param_GrayI16_8);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.copy(int,int,int,int,int,int,boofcv.struct.image.GrayI16,boofcv.struct.image.GrayI16)";
                $__params.add($param_int_1);
                $__params.add($param_int_2);
                $__params.add($param_int_3);
                $__params.add($param_int_4);
                $__params.add($param_int_5);
                $__params.add($param_int_6);
                $__params.add($param_GrayI16_7);
                $__params.add($param_GrayI16_8);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of copy(int, int, int, int, int, int, GrayF64, GrayF64)
    public void copy(int $param_int_1, int $param_int_2, int $param_int_3, int $param_int_4, int $param_int_5, int $param_int_6, boofcv.struct.image.GrayF64 $param_GrayF64_7, boofcv.struct.image.GrayF64 $param_GrayF64_8) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.copy( $param_int_1,  $param_int_2,  $param_int_3,  $param_int_4,  $param_int_5,  $param_int_6,  $param_GrayF64_7,  $param_GrayF64_8);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.copy(int,int,int,int,int,int,boofcv.struct.image.GrayF64,boofcv.struct.image.GrayF64)";
                $__params.add($param_int_1);
                $__params.add($param_int_2);
                $__params.add($param_int_3);
                $__params.add($param_int_4);
                $__params.add($param_int_5);
                $__params.add($param_int_6);
                $__params.add($param_GrayF64_7);
                $__params.add($param_GrayF64_8);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of copy(int, int, int, int, int, int, GrayF32, GrayF32)
    public void copy(int $param_int_1, int $param_int_2, int $param_int_3, int $param_int_4, int $param_int_5, int $param_int_6, boofcv.struct.image.GrayF32 $param_GrayF32_7, boofcv.struct.image.GrayF32 $param_GrayF32_8) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.copy( $param_int_1,  $param_int_2,  $param_int_3,  $param_int_4,  $param_int_5,  $param_int_6,  $param_GrayF32_7,  $param_GrayF32_8);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.copy(int,int,int,int,int,int,boofcv.struct.image.GrayF32,boofcv.struct.image.GrayF32)";
                $__params.add($param_int_1);
                $__params.add($param_int_2);
                $__params.add($param_int_3);
                $__params.add($param_int_4);
                $__params.add($param_int_5);
                $__params.add($param_int_6);
                $__params.add($param_GrayF32_7);
                $__params.add($param_GrayF32_8);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of addUniform(InterleavedU8, Random, int, int)
    public void addUniform(boofcv.struct.image.InterleavedU8 $param_InterleavedU8_1, java.util.Random $param_Random_2, int $param_int_3, int $param_int_4) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.addUniform( $param_InterleavedU8_1,  $param_Random_2,  $param_int_3,  $param_int_4);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.addUniform(boofcv.struct.image.InterleavedU8,java.util.Random,int,int)";
                $__params.add($param_InterleavedU8_1);
                $__params.add($param_Random_2);
                $__params.add($param_int_3);
                $__params.add($param_int_4);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of addUniform(InterleavedU16, Random, int, int)
    public void addUniform(boofcv.struct.image.InterleavedU16 $param_InterleavedU16_1, java.util.Random $param_Random_2, int $param_int_3, int $param_int_4) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.addUniform( $param_InterleavedU16_1,  $param_Random_2,  $param_int_3,  $param_int_4);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.addUniform(boofcv.struct.image.InterleavedU16,java.util.Random,int,int)";
                $__params.add($param_InterleavedU16_1);
                $__params.add($param_Random_2);
                $__params.add($param_int_3);
                $__params.add($param_int_4);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of addUniform(InterleavedS8, Random, int, int)
    public void addUniform(boofcv.struct.image.InterleavedS8 $param_InterleavedS8_1, java.util.Random $param_Random_2, int $param_int_3, int $param_int_4) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.addUniform( $param_InterleavedS8_1,  $param_Random_2,  $param_int_3,  $param_int_4);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.addUniform(boofcv.struct.image.InterleavedS8,java.util.Random,int,int)";
                $__params.add($param_InterleavedS8_1);
                $__params.add($param_Random_2);
                $__params.add($param_int_3);
                $__params.add($param_int_4);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of addUniform(InterleavedS64, Random, long, long)
    public void addUniform(boofcv.struct.image.InterleavedS64 $param_InterleavedS64_1, java.util.Random $param_Random_2, long $param_long_3, long $param_long_4) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.addUniform( $param_InterleavedS64_1,  $param_Random_2,  $param_long_3,  $param_long_4);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.addUniform(boofcv.struct.image.InterleavedS64,java.util.Random,long,long)";
                $__params.add($param_InterleavedS64_1);
                $__params.add($param_Random_2);
                $__params.add($param_long_3);
                $__params.add($param_long_4);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of addUniform(InterleavedS32, Random, int, int)
    public void addUniform(boofcv.struct.image.InterleavedS32 $param_InterleavedS32_1, java.util.Random $param_Random_2, int $param_int_3, int $param_int_4) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.addUniform( $param_InterleavedS32_1,  $param_Random_2,  $param_int_3,  $param_int_4);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.addUniform(boofcv.struct.image.InterleavedS32,java.util.Random,int,int)";
                $__params.add($param_InterleavedS32_1);
                $__params.add($param_Random_2);
                $__params.add($param_int_3);
                $__params.add($param_int_4);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of addUniform(InterleavedS16, Random, int, int)
    public void addUniform(boofcv.struct.image.InterleavedS16 $param_InterleavedS16_1, java.util.Random $param_Random_2, int $param_int_3, int $param_int_4) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.addUniform( $param_InterleavedS16_1,  $param_Random_2,  $param_int_3,  $param_int_4);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.addUniform(boofcv.struct.image.InterleavedS16,java.util.Random,int,int)";
                $__params.add($param_InterleavedS16_1);
                $__params.add($param_Random_2);
                $__params.add($param_int_3);
                $__params.add($param_int_4);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of addUniform(InterleavedF64, Random, double, double)
    public void addUniform(boofcv.struct.image.InterleavedF64 $param_InterleavedF64_1, java.util.Random $param_Random_2, double $param_double_3, double $param_double_4) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.addUniform( $param_InterleavedF64_1,  $param_Random_2,  $param_double_3,  $param_double_4);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.addUniform(boofcv.struct.image.InterleavedF64,java.util.Random,double,double)";
                $__params.add($param_InterleavedF64_1);
                $__params.add($param_Random_2);
                $__params.add($param_double_3);
                $__params.add($param_double_4);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of addUniform(InterleavedF32, Random, float, float)
    public void addUniform(boofcv.struct.image.InterleavedF32 $param_InterleavedF32_1, java.util.Random $param_Random_2, float $param_float_3, float $param_float_4) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.addUniform( $param_InterleavedF32_1,  $param_Random_2,  $param_float_3,  $param_float_4);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.addUniform(boofcv.struct.image.InterleavedF32,java.util.Random,float,float)";
                $__params.add($param_InterleavedF32_1);
                $__params.add($param_Random_2);
                $__params.add($param_float_3);
                $__params.add($param_float_4);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of addUniform(GrayU8, Random, int, int)
    public void addUniform(boofcv.struct.image.GrayU8 $param_GrayU8_1, java.util.Random $param_Random_2, int $param_int_3, int $param_int_4) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.addUniform( $param_GrayU8_1,  $param_Random_2,  $param_int_3,  $param_int_4);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.addUniform(boofcv.struct.image.GrayU8,java.util.Random,int,int)";
                $__params.add($param_GrayU8_1);
                $__params.add($param_Random_2);
                $__params.add($param_int_3);
                $__params.add($param_int_4);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of addUniform(GrayU16, Random, int, int)
    public void addUniform(boofcv.struct.image.GrayU16 $param_GrayU16_1, java.util.Random $param_Random_2, int $param_int_3, int $param_int_4) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.addUniform( $param_GrayU16_1,  $param_Random_2,  $param_int_3,  $param_int_4);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.addUniform(boofcv.struct.image.GrayU16,java.util.Random,int,int)";
                $__params.add($param_GrayU16_1);
                $__params.add($param_Random_2);
                $__params.add($param_int_3);
                $__params.add($param_int_4);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of addUniform(GrayS8, Random, int, int)
    public void addUniform(boofcv.struct.image.GrayS8 $param_GrayS8_1, java.util.Random $param_Random_2, int $param_int_3, int $param_int_4) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.addUniform( $param_GrayS8_1,  $param_Random_2,  $param_int_3,  $param_int_4);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.addUniform(boofcv.struct.image.GrayS8,java.util.Random,int,int)";
                $__params.add($param_GrayS8_1);
                $__params.add($param_Random_2);
                $__params.add($param_int_3);
                $__params.add($param_int_4);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of addUniform(GrayS64, Random, long, long)
    public void addUniform(boofcv.struct.image.GrayS64 $param_GrayS64_1, java.util.Random $param_Random_2, long $param_long_3, long $param_long_4) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.addUniform( $param_GrayS64_1,  $param_Random_2,  $param_long_3,  $param_long_4);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.addUniform(boofcv.struct.image.GrayS64,java.util.Random,long,long)";
                $__params.add($param_GrayS64_1);
                $__params.add($param_Random_2);
                $__params.add($param_long_3);
                $__params.add($param_long_4);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of addUniform(GrayS32, Random, int, int)
    public void addUniform(boofcv.struct.image.GrayS32 $param_GrayS32_1, java.util.Random $param_Random_2, int $param_int_3, int $param_int_4) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.addUniform( $param_GrayS32_1,  $param_Random_2,  $param_int_3,  $param_int_4);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.addUniform(boofcv.struct.image.GrayS32,java.util.Random,int,int)";
                $__params.add($param_GrayS32_1);
                $__params.add($param_Random_2);
                $__params.add($param_int_3);
                $__params.add($param_int_4);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of addUniform(GrayS16, Random, int, int)
    public void addUniform(boofcv.struct.image.GrayS16 $param_GrayS16_1, java.util.Random $param_Random_2, int $param_int_3, int $param_int_4) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.addUniform( $param_GrayS16_1,  $param_Random_2,  $param_int_3,  $param_int_4);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.addUniform(boofcv.struct.image.GrayS16,java.util.Random,int,int)";
                $__params.add($param_GrayS16_1);
                $__params.add($param_Random_2);
                $__params.add($param_int_3);
                $__params.add($param_int_4);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of addUniform(GrayF64, Random, double, double)
    public void addUniform(boofcv.struct.image.GrayF64 $param_GrayF64_1, java.util.Random $param_Random_2, double $param_double_3, double $param_double_4) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.addUniform( $param_GrayF64_1,  $param_Random_2,  $param_double_3,  $param_double_4);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.addUniform(boofcv.struct.image.GrayF64,java.util.Random,double,double)";
                $__params.add($param_GrayF64_1);
                $__params.add($param_Random_2);
                $__params.add($param_double_3);
                $__params.add($param_double_4);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of addUniform(GrayF32, Random, float, float)
    public void addUniform(boofcv.struct.image.GrayF32 $param_GrayF32_1, java.util.Random $param_Random_2, float $param_float_3, float $param_float_4) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.addUniform( $param_GrayF32_1,  $param_Random_2,  $param_float_3,  $param_float_4);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.addUniform(boofcv.struct.image.GrayF32,java.util.Random,float,float)";
                $__params.add($param_GrayF32_1);
                $__params.add($param_Random_2);
                $__params.add($param_float_3);
                $__params.add($param_float_4);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of addGaussian(InterleavedU8, Random, double, int, int)
    public void addGaussian(boofcv.struct.image.InterleavedU8 $param_InterleavedU8_1, java.util.Random $param_Random_2, double $param_double_3, int $param_int_4, int $param_int_5) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.addGaussian( $param_InterleavedU8_1,  $param_Random_2,  $param_double_3,  $param_int_4,  $param_int_5);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.addGaussian(boofcv.struct.image.InterleavedU8,java.util.Random,double,int,int)";
                $__params.add($param_InterleavedU8_1);
                $__params.add($param_Random_2);
                $__params.add($param_double_3);
                $__params.add($param_int_4);
                $__params.add($param_int_5);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of addGaussian(InterleavedU16, Random, double, int, int)
    public void addGaussian(boofcv.struct.image.InterleavedU16 $param_InterleavedU16_1, java.util.Random $param_Random_2, double $param_double_3, int $param_int_4, int $param_int_5) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.addGaussian( $param_InterleavedU16_1,  $param_Random_2,  $param_double_3,  $param_int_4,  $param_int_5);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.addGaussian(boofcv.struct.image.InterleavedU16,java.util.Random,double,int,int)";
                $__params.add($param_InterleavedU16_1);
                $__params.add($param_Random_2);
                $__params.add($param_double_3);
                $__params.add($param_int_4);
                $__params.add($param_int_5);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of addGaussian(InterleavedS8, Random, double, int, int)
    public void addGaussian(boofcv.struct.image.InterleavedS8 $param_InterleavedS8_1, java.util.Random $param_Random_2, double $param_double_3, int $param_int_4, int $param_int_5) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.addGaussian( $param_InterleavedS8_1,  $param_Random_2,  $param_double_3,  $param_int_4,  $param_int_5);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.addGaussian(boofcv.struct.image.InterleavedS8,java.util.Random,double,int,int)";
                $__params.add($param_InterleavedS8_1);
                $__params.add($param_Random_2);
                $__params.add($param_double_3);
                $__params.add($param_int_4);
                $__params.add($param_int_5);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of addGaussian(InterleavedS64, Random, double, long, long)
    public void addGaussian(boofcv.struct.image.InterleavedS64 $param_InterleavedS64_1, java.util.Random $param_Random_2, double $param_double_3, long $param_long_4, long $param_long_5) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.addGaussian( $param_InterleavedS64_1,  $param_Random_2,  $param_double_3,  $param_long_4,  $param_long_5);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.addGaussian(boofcv.struct.image.InterleavedS64,java.util.Random,double,long,long)";
                $__params.add($param_InterleavedS64_1);
                $__params.add($param_Random_2);
                $__params.add($param_double_3);
                $__params.add($param_long_4);
                $__params.add($param_long_5);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of addGaussian(InterleavedS32, Random, double, int, int)
    public void addGaussian(boofcv.struct.image.InterleavedS32 $param_InterleavedS32_1, java.util.Random $param_Random_2, double $param_double_3, int $param_int_4, int $param_int_5) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.addGaussian( $param_InterleavedS32_1,  $param_Random_2,  $param_double_3,  $param_int_4,  $param_int_5);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.addGaussian(boofcv.struct.image.InterleavedS32,java.util.Random,double,int,int)";
                $__params.add($param_InterleavedS32_1);
                $__params.add($param_Random_2);
                $__params.add($param_double_3);
                $__params.add($param_int_4);
                $__params.add($param_int_5);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of addGaussian(InterleavedS16, Random, double, int, int)
    public void addGaussian(boofcv.struct.image.InterleavedS16 $param_InterleavedS16_1, java.util.Random $param_Random_2, double $param_double_3, int $param_int_4, int $param_int_5) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.addGaussian( $param_InterleavedS16_1,  $param_Random_2,  $param_double_3,  $param_int_4,  $param_int_5);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.addGaussian(boofcv.struct.image.InterleavedS16,java.util.Random,double,int,int)";
                $__params.add($param_InterleavedS16_1);
                $__params.add($param_Random_2);
                $__params.add($param_double_3);
                $__params.add($param_int_4);
                $__params.add($param_int_5);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of addGaussian(InterleavedF64, Random, double, double, double)
    public void addGaussian(boofcv.struct.image.InterleavedF64 $param_InterleavedF64_1, java.util.Random $param_Random_2, double $param_double_3, double $param_double_4, double $param_double_5) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.addGaussian( $param_InterleavedF64_1,  $param_Random_2,  $param_double_3,  $param_double_4,  $param_double_5);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.addGaussian(boofcv.struct.image.InterleavedF64,java.util.Random,double,double,double)";
                $__params.add($param_InterleavedF64_1);
                $__params.add($param_Random_2);
                $__params.add($param_double_3);
                $__params.add($param_double_4);
                $__params.add($param_double_5);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of addGaussian(InterleavedF32, Random, double, float, float)
    public void addGaussian(boofcv.struct.image.InterleavedF32 $param_InterleavedF32_1, java.util.Random $param_Random_2, double $param_double_3, float $param_float_4, float $param_float_5) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.addGaussian( $param_InterleavedF32_1,  $param_Random_2,  $param_double_3,  $param_float_4,  $param_float_5);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.addGaussian(boofcv.struct.image.InterleavedF32,java.util.Random,double,float,float)";
                $__params.add($param_InterleavedF32_1);
                $__params.add($param_Random_2);
                $__params.add($param_double_3);
                $__params.add($param_float_4);
                $__params.add($param_float_5);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of addGaussian(GrayU8, Random, double, int, int)
    public void addGaussian(boofcv.struct.image.GrayU8 $param_GrayU8_1, java.util.Random $param_Random_2, double $param_double_3, int $param_int_4, int $param_int_5) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.addGaussian( $param_GrayU8_1,  $param_Random_2,  $param_double_3,  $param_int_4,  $param_int_5);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.addGaussian(boofcv.struct.image.GrayU8,java.util.Random,double,int,int)";
                $__params.add($param_GrayU8_1);
                $__params.add($param_Random_2);
                $__params.add($param_double_3);
                $__params.add($param_int_4);
                $__params.add($param_int_5);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of addGaussian(GrayU16, Random, double, int, int)
    public void addGaussian(boofcv.struct.image.GrayU16 $param_GrayU16_1, java.util.Random $param_Random_2, double $param_double_3, int $param_int_4, int $param_int_5) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.addGaussian( $param_GrayU16_1,  $param_Random_2,  $param_double_3,  $param_int_4,  $param_int_5);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.addGaussian(boofcv.struct.image.GrayU16,java.util.Random,double,int,int)";
                $__params.add($param_GrayU16_1);
                $__params.add($param_Random_2);
                $__params.add($param_double_3);
                $__params.add($param_int_4);
                $__params.add($param_int_5);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of addGaussian(GrayS8, Random, double, int, int)
    public void addGaussian(boofcv.struct.image.GrayS8 $param_GrayS8_1, java.util.Random $param_Random_2, double $param_double_3, int $param_int_4, int $param_int_5) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.addGaussian( $param_GrayS8_1,  $param_Random_2,  $param_double_3,  $param_int_4,  $param_int_5);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.addGaussian(boofcv.struct.image.GrayS8,java.util.Random,double,int,int)";
                $__params.add($param_GrayS8_1);
                $__params.add($param_Random_2);
                $__params.add($param_double_3);
                $__params.add($param_int_4);
                $__params.add($param_int_5);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of addGaussian(GrayS64, Random, double, long, long)
    public void addGaussian(boofcv.struct.image.GrayS64 $param_GrayS64_1, java.util.Random $param_Random_2, double $param_double_3, long $param_long_4, long $param_long_5) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.addGaussian( $param_GrayS64_1,  $param_Random_2,  $param_double_3,  $param_long_4,  $param_long_5);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.addGaussian(boofcv.struct.image.GrayS64,java.util.Random,double,long,long)";
                $__params.add($param_GrayS64_1);
                $__params.add($param_Random_2);
                $__params.add($param_double_3);
                $__params.add($param_long_4);
                $__params.add($param_long_5);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of addGaussian(GrayS32, Random, double, int, int)
    public void addGaussian(boofcv.struct.image.GrayS32 $param_GrayS32_1, java.util.Random $param_Random_2, double $param_double_3, int $param_int_4, int $param_int_5) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.addGaussian( $param_GrayS32_1,  $param_Random_2,  $param_double_3,  $param_int_4,  $param_int_5);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.addGaussian(boofcv.struct.image.GrayS32,java.util.Random,double,int,int)";
                $__params.add($param_GrayS32_1);
                $__params.add($param_Random_2);
                $__params.add($param_double_3);
                $__params.add($param_int_4);
                $__params.add($param_int_5);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of addGaussian(GrayS16, Random, double, int, int)
    public void addGaussian(boofcv.struct.image.GrayS16 $param_GrayS16_1, java.util.Random $param_Random_2, double $param_double_3, int $param_int_4, int $param_int_5) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.addGaussian( $param_GrayS16_1,  $param_Random_2,  $param_double_3,  $param_int_4,  $param_int_5);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.addGaussian(boofcv.struct.image.GrayS16,java.util.Random,double,int,int)";
                $__params.add($param_GrayS16_1);
                $__params.add($param_Random_2);
                $__params.add($param_double_3);
                $__params.add($param_int_4);
                $__params.add($param_int_5);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of addGaussian(GrayF64, Random, double, double, double)
    public void addGaussian(boofcv.struct.image.GrayF64 $param_GrayF64_1, java.util.Random $param_Random_2, double $param_double_3, double $param_double_4, double $param_double_5) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.addGaussian( $param_GrayF64_1,  $param_Random_2,  $param_double_3,  $param_double_4,  $param_double_5);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.addGaussian(boofcv.struct.image.GrayF64,java.util.Random,double,double,double)";
                $__params.add($param_GrayF64_1);
                $__params.add($param_Random_2);
                $__params.add($param_double_3);
                $__params.add($param_double_4);
                $__params.add($param_double_5);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of addGaussian(GrayF32, Random, double, float, float)
    public void addGaussian(boofcv.struct.image.GrayF32 $param_GrayF32_1, java.util.Random $param_Random_2, double $param_double_3, float $param_float_4, float $param_float_5) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.addGaussian( $param_GrayF32_1,  $param_Random_2,  $param_double_3,  $param_float_4,  $param_float_5);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.alg.misc.ImageMiscOps.addGaussian(boofcv.struct.image.GrayF32,java.util.Random,double,float,float)";
                $__params.add($param_GrayF32_1);
                $__params.add($param_Random_2);
                $__params.add($param_double_3);
                $__params.add($param_float_4);
                $__params.add($param_float_5);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
