/*
 * Stub for class boofcv.factory.shape.FactoryShapeDetector
 * Generated by Sapphire Compiler (sc).
 */
package boofcv.factory.shape.stubs;


public final class FactoryShapeDetector_Stub extends boofcv.factory.shape.FactoryShapeDetector implements sapphire.common.AppObjectStub {

    sapphire.policy.SapphirePolicy.SapphireClientPolicy $__client = null;
    boolean $__directInvocation = false;

    public FactoryShapeDetector_Stub () {
        super();
    }


    public void $__initialize(sapphire.policy.SapphirePolicy.SapphireClientPolicy client) {
        $__client = client;
    }

    public void $__initialize(boolean directInvocation) {
        $__directInvocation = directInvocation;
    }

    public Object $__clone() throws CloneNotSupportedException {
        return super.clone();
    }



    // Implementation of refinePolygon(ConfigRefinePolygonLineToImage, Class)
    public boofcv.alg.shapes.polygon.RefineBinaryPolygon refinePolygon(boofcv.factory.shape.ConfigRefinePolygonLineToImage $param_ConfigRefinePolygonLineToImage_1, java.lang.Class $param_Class_2) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.refinePolygon( $param_ConfigRefinePolygonLineToImage_1,  $param_Class_2);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public <T> boofcv.alg.shapes.polygon.RefineBinaryPolygon<T> boofcv.factory.shape.FactoryShapeDetector.refinePolygon(boofcv.factory.shape.ConfigRefinePolygonLineToImage,java.lang.Class<T>)";
                $__params.add($param_ConfigRefinePolygonLineToImage_1);
                $__params.add($param_Class_2);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((boofcv.alg.shapes.polygon.RefineBinaryPolygon) $__result);
    }

    // Implementation of refinePolygon(ConfigRefinePolygonCornersToImage, Class)
    public boofcv.alg.shapes.polygon.RefineBinaryPolygon refinePolygon(boofcv.factory.shape.ConfigRefinePolygonCornersToImage $param_ConfigRefinePolygonCornersToImage_1, java.lang.Class $param_Class_2) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.refinePolygon( $param_ConfigRefinePolygonCornersToImage_1,  $param_Class_2);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public <T> boofcv.alg.shapes.polygon.RefineBinaryPolygon<T> boofcv.factory.shape.FactoryShapeDetector.refinePolygon(boofcv.factory.shape.ConfigRefinePolygonCornersToImage,java.lang.Class<T>)";
                $__params.add($param_ConfigRefinePolygonCornersToImage_1);
                $__params.add($param_Class_2);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((boofcv.alg.shapes.polygon.RefineBinaryPolygon) $__result);
    }

    // Implementation of polygon(ConfigPolygonDetector, Class)
    public boofcv.alg.shapes.polygon.BinaryPolygonDetector polygon(boofcv.factory.shape.ConfigPolygonDetector $param_ConfigPolygonDetector_1, java.lang.Class $param_Class_2) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.polygon( $param_ConfigPolygonDetector_1,  $param_Class_2);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public <T> boofcv.alg.shapes.polygon.BinaryPolygonDetector<T> boofcv.factory.shape.FactoryShapeDetector.polygon(boofcv.factory.shape.ConfigPolygonDetector,java.lang.Class<T>)";
                $__params.add($param_ConfigPolygonDetector_1);
                $__params.add($param_Class_2);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((boofcv.alg.shapes.polygon.BinaryPolygonDetector) $__result);
    }

    // Implementation of ellipse(ConfigEllipseDetector, Class)
    public boofcv.alg.shapes.ellipse.BinaryEllipseDetector ellipse(boofcv.factory.shape.ConfigEllipseDetector $param_ConfigEllipseDetector_1, java.lang.Class $param_Class_2) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.ellipse( $param_ConfigEllipseDetector_1,  $param_Class_2);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public <T> boofcv.alg.shapes.ellipse.BinaryEllipseDetector<T> boofcv.factory.shape.FactoryShapeDetector.ellipse(boofcv.factory.shape.ConfigEllipseDetector,java.lang.Class<T>)";
                $__params.add($param_ConfigEllipseDetector_1);
                $__params.add($param_Class_2);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((boofcv.alg.shapes.ellipse.BinaryEllipseDetector) $__result);
    }
}
