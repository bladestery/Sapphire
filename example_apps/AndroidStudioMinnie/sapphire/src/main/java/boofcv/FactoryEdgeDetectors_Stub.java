/*
 * Stub for class boofcv.factory.feature.detect.edge.FactoryEdgeDetectors
 * Generated by Sapphire Compiler (sc).
 */
package boofcv.factory.feature.detect.edge.stubs;


public final class FactoryEdgeDetectors_Stub extends boofcv.factory.feature.detect.edge.FactoryEdgeDetectors implements sapphire.common.AppObjectStub {

    sapphire.policy.SapphirePolicy.SapphireClientPolicy $__client = null;
    boolean $__directInvocation = false;

    public FactoryEdgeDetectors_Stub () {
        super();
    }


    public void $__initialize(sapphire.policy.SapphirePolicy.SapphireClientPolicy client) {
        $__client = client;
    }

    public void $__initialize(boolean directInvocation) {
        $__directInvocation = directInvocation;
    }

    public Object $__clone() throws CloneNotSupportedException {
        return super.clone();
    }



    // Implementation of canny(int, boolean, boolean, Class, Class, FactoryBlurFilter, FactoryDerivative, GeneralizedImageOps, ImageType, FactoryImageBorder)
    public boofcv.alg.feature.detect.edge.CannyEdge canny(int $param_int_1, boolean $param_boolean_2, boolean $param_boolean_3, java.lang.Class $param_Class_4, java.lang.Class $param_Class_5, boofcv.factory.filter.blur.FactoryBlurFilter $param_FactoryBlurFilter_6, boofcv.factory.filter.derivative.FactoryDerivative $param_FactoryDerivative_7, boofcv.core.image.GeneralizedImageOps $param_GeneralizedImageOps_8, boofcv.struct.image.ImageType $param_ImageType_9, boofcv.core.image.border.FactoryImageBorder $param_FactoryImageBorder_10) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.canny( $param_int_1,  $param_boolean_2,  $param_boolean_3,  $param_Class_4,  $param_Class_5,  $param_FactoryBlurFilter_6,  $param_FactoryDerivative_7,  $param_GeneralizedImageOps_8,  $param_ImageType_9,  $param_FactoryImageBorder_10);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public <T,D> boofcv.alg.feature.detect.edge.CannyEdge<T, D> boofcv.factory.feature.detect.edge.FactoryEdgeDetectors.canny(int,boolean,boolean,java.lang.Class<T>,java.lang.Class<D>,boofcv.factory.filter.blur.FactoryBlurFilter,boofcv.factory.filter.derivative.FactoryDerivative,boofcv.core.image.GeneralizedImageOps,boofcv.struct.image.ImageType,boofcv.core.image.border.FactoryImageBorder)";
                $__params.add($param_int_1);
                $__params.add($param_boolean_2);
                $__params.add($param_boolean_3);
                $__params.add($param_Class_4);
                $__params.add($param_Class_5);
                $__params.add($param_FactoryBlurFilter_6);
                $__params.add($param_FactoryDerivative_7);
                $__params.add($param_GeneralizedImageOps_8);
                $__params.add($param_ImageType_9);
                $__params.add($param_FactoryImageBorder_10);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((boofcv.alg.feature.detect.edge.CannyEdge) $__result);
    }
}
