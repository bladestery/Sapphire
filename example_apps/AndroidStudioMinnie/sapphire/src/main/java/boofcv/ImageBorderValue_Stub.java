/*
 * Stub for class boofcv.core.image.border.ImageBorderValue
 * Generated by Sapphire Compiler (sc).
 */
package boofcv.core.image.border.stubs;


public final class ImageBorderValue_Stub extends boofcv.core.image.border.ImageBorderValue implements sapphire.common.AppObjectStub {

    sapphire.policy.SapphirePolicy.SapphireClientPolicy $__client = null;
    boolean $__directInvocation = false;

    public ImageBorderValue_Stub () {
        super();
    }


    public void $__initialize(sapphire.policy.SapphirePolicy.SapphireClientPolicy client) {
        $__client = client;
    }

    public void $__initialize(boolean directInvocation) {
        $__directInvocation = directInvocation;
    }

    public Object $__clone() throws CloneNotSupportedException {
        return super.clone();
    }



    // Implementation of wrap(GrayS64, long)
    public boofcv.core.image.border.ImageBorder_S64 wrap(boofcv.struct.image.GrayS64 $param_GrayS64_1, long $param_long_2) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.wrap( $param_GrayS64_1,  $param_long_2);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public boofcv.core.image.border.ImageBorder_S64 boofcv.core.image.border.ImageBorderValue.wrap(boofcv.struct.image.GrayS64,long)";
                $__params.add($param_GrayS64_1);
                $__params.add($param_long_2);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((boofcv.core.image.border.ImageBorder_S64) $__result);
    }

    // Implementation of wrap(GrayI, int)
    public boofcv.core.image.border.ImageBorder_S32 wrap(boofcv.struct.image.GrayI $param_GrayI_1, int $param_int_2) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.wrap( $param_GrayI_1,  $param_int_2);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public boofcv.core.image.border.ImageBorder_S32 boofcv.core.image.border.ImageBorderValue.wrap(boofcv.struct.image.GrayI,int)";
                $__params.add($param_GrayI_1);
                $__params.add($param_int_2);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((boofcv.core.image.border.ImageBorder_S32) $__result);
    }

    // Implementation of wrap(GrayF64, double)
    public boofcv.core.image.border.ImageBorder_F64 wrap(boofcv.struct.image.GrayF64 $param_GrayF64_1, double $param_double_2) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.wrap( $param_GrayF64_1,  $param_double_2);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public boofcv.core.image.border.ImageBorder_F64 boofcv.core.image.border.ImageBorderValue.wrap(boofcv.struct.image.GrayF64,double)";
                $__params.add($param_GrayF64_1);
                $__params.add($param_double_2);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((boofcv.core.image.border.ImageBorder_F64) $__result);
    }

    // Implementation of wrap(GrayF32, float)
    public boofcv.core.image.border.ImageBorder_F32 wrap(boofcv.struct.image.GrayF32 $param_GrayF32_1, float $param_float_2) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.wrap( $param_GrayF32_1,  $param_float_2);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public boofcv.core.image.border.ImageBorder_F32 boofcv.core.image.border.ImageBorderValue.wrap(boofcv.struct.image.GrayF32,float)";
                $__params.add($param_GrayF32_1);
                $__params.add($param_float_2);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((boofcv.core.image.border.ImageBorder_F32) $__result);
    }

    // Implementation of wrap(ImageInterleaved, double)
    public boofcv.core.image.border.ImageBorder wrap(boofcv.struct.image.ImageInterleaved $param_ImageInterleaved_1, double $param_double_2) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.wrap( $param_ImageInterleaved_1,  $param_double_2);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public boofcv.core.image.border.ImageBorder boofcv.core.image.border.ImageBorderValue.wrap(boofcv.struct.image.ImageInterleaved,double)";
                $__params.add($param_ImageInterleaved_1);
                $__params.add($param_double_2);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((boofcv.core.image.border.ImageBorder) $__result);
    }

    // Implementation of wrap(ImageGray, double)
    public boofcv.core.image.border.ImageBorder wrap(boofcv.struct.image.ImageGray $param_ImageGray_1, double $param_double_2) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.wrap( $param_ImageGray_1,  $param_double_2);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public boofcv.core.image.border.ImageBorder boofcv.core.image.border.ImageBorderValue.wrap(boofcv.struct.image.ImageGray,double)";
                $__params.add($param_ImageGray_1);
                $__params.add($param_double_2);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((boofcv.core.image.border.ImageBorder) $__result);
    }
}
