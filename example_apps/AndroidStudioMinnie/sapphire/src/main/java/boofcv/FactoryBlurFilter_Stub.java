/*
 * Stub for class boofcv.factory.filter.blur.FactoryBlurFilter
 * Generated by Sapphire Compiler (sc).
 */
package boofcv.factory.filter.blur.stubs;


public final class FactoryBlurFilter_Stub extends boofcv.factory.filter.blur.FactoryBlurFilter implements sapphire.common.AppObjectStub {

    sapphire.policy.SapphirePolicy.SapphireClientPolicy $__client = null;
    boolean $__directInvocation = false;

    public FactoryBlurFilter_Stub () {
        super();
    }


    public void $__initialize(sapphire.policy.SapphirePolicy.SapphireClientPolicy client) {
        $__client = client;
    }

    public void $__initialize(boolean directInvocation) {
        $__directInvocation = directInvocation;
    }

    public Object $__clone() throws CloneNotSupportedException {
        return super.clone();
    }



    // Implementation of median(Class, int, GeneralizedImageOps)
    public boofcv.abst.filter.blur.BlurStorageFilter median(java.lang.Class $param_Class_1, int $param_int_2, boofcv.core.image.GeneralizedImageOps $param_GeneralizedImageOps_3) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.median( $param_Class_1,  $param_int_2,  $param_GeneralizedImageOps_3);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public <T> boofcv.abst.filter.blur.BlurStorageFilter<T> boofcv.factory.filter.blur.FactoryBlurFilter.median(java.lang.Class<T>,int,boofcv.core.image.GeneralizedImageOps)";
                $__params.add($param_Class_1);
                $__params.add($param_int_2);
                $__params.add($param_GeneralizedImageOps_3);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((boofcv.abst.filter.blur.BlurStorageFilter) $__result);
    }

    // Implementation of mean(Class, int, GeneralizedImageOps)
    public boofcv.abst.filter.blur.BlurStorageFilter mean(java.lang.Class $param_Class_1, int $param_int_2, boofcv.core.image.GeneralizedImageOps $param_GeneralizedImageOps_3) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.mean( $param_Class_1,  $param_int_2,  $param_GeneralizedImageOps_3);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public <T> boofcv.abst.filter.blur.BlurStorageFilter<T> boofcv.factory.filter.blur.FactoryBlurFilter.mean(java.lang.Class<T>,int,boofcv.core.image.GeneralizedImageOps)";
                $__params.add($param_Class_1);
                $__params.add($param_int_2);
                $__params.add($param_GeneralizedImageOps_3);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((boofcv.abst.filter.blur.BlurStorageFilter) $__result);
    }

    // Implementation of gaussian(Class, double, int, GeneralizedImageOps)
    public boofcv.abst.filter.blur.BlurStorageFilter gaussian(java.lang.Class $param_Class_1, double $param_double_2, int $param_int_3, boofcv.core.image.GeneralizedImageOps $param_GeneralizedImageOps_4) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.gaussian( $param_Class_1,  $param_double_2,  $param_int_3,  $param_GeneralizedImageOps_4);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public <T> boofcv.abst.filter.blur.BlurStorageFilter<T> boofcv.factory.filter.blur.FactoryBlurFilter.gaussian(java.lang.Class<T>,double,int,boofcv.core.image.GeneralizedImageOps)";
                $__params.add($param_Class_1);
                $__params.add($param_double_2);
                $__params.add($param_int_3);
                $__params.add($param_GeneralizedImageOps_4);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((boofcv.abst.filter.blur.BlurStorageFilter) $__result);
    }
}
