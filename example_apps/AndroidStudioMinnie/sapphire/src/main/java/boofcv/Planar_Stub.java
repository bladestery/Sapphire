/*
 * Stub for class boofcv.struct.image.Planar
 * Generated by Sapphire Compiler (sc).
 */
package boofcv.struct.image.stubs;


public final class Planar_Stub extends boofcv.struct.image.Planar implements sapphire.common.AppObjectStub {

    sapphire.policy.SapphirePolicy.SapphireClientPolicy $__client = null;
    boolean $__directInvocation = false;

    public Planar_Stub (java.lang.Class $param_Class_1, int $param_int_2, int $param_int_3, int $param_int_4) {
        super($param_Class_1, $param_int_2, $param_int_3, $param_int_4);
    }

    public Planar_Stub (java.lang.Class $param_Class_1, int $param_int_2) {
        super($param_Class_1, $param_int_2);
    }


    public void $__initialize(sapphire.policy.SapphirePolicy.SapphireClientPolicy client) {
        $__client = client;
    }

    public void $__initialize(boolean directInvocation) {
        $__directInvocation = directInvocation;
    }

    public Object $__clone() throws CloneNotSupportedException {
        return super.clone();
    }



    // Implementation of subimage(int, int, int, int, Planar)
    public boofcv.struct.image.Planar subimage(int $param_int_1, int $param_int_2, int $param_int_3, int $param_int_4, boofcv.struct.image.Planar $param_Planar_5) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.subimage( $param_int_1,  $param_int_2,  $param_int_3,  $param_int_4,  $param_Planar_5);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public boofcv.struct.image.Planar<T> boofcv.struct.image.Planar.subimage(int,int,int,int,boofcv.struct.image.Planar<T>)";
                $__params.add($param_int_1);
                $__params.add($param_int_2);
                $__params.add($param_int_3);
                $__params.add($param_int_4);
                $__params.add($param_Planar_5);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((boofcv.struct.image.Planar) $__result);
    }

    // Implementation of setTo(Planar)
    public void setTo(boofcv.struct.image.Planar $param_Planar_1) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.setTo( $param_Planar_1);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.struct.image.Planar.setTo(boofcv.struct.image.Planar<T>)";
                $__params.add($param_Planar_1);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of setBands(ImageGray[])
    public void setBands(boofcv.struct.image.ImageGray[] $param_arrayOf_ImageGray_1) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.setBands( $param_arrayOf_ImageGray_1);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.struct.image.Planar.setBands(T[])";
                $__params.add($param_arrayOf_ImageGray_1);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of setBandType(Class)
    public void setBandType(java.lang.Class $param_Class_1) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.setBandType( $param_Class_1);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.struct.image.Planar.setBandType(java.lang.Class<T>)";
                $__params.add($param_Class_1);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of setBand(int, ImageGray)
    public void setBand(int $param_int_1, boofcv.struct.image.ImageGray $param_ImageGray_2) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.setBand( $param_int_1,  $param_ImageGray_2);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.struct.image.Planar.setBand(int,T)";
                $__params.add($param_int_1);
                $__params.add($param_ImageGray_2);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of reshape(int, int)
    public void reshape(int $param_int_1, int $param_int_2) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.reshape( $param_int_1,  $param_int_2);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.struct.image.Planar.reshape(int,int)";
                $__params.add($param_int_1);
                $__params.add($param_int_2);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of reorderBands(int[])
    public void reorderBands(int[] $param_arrayOf_int_1) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.reorderBands( $param_arrayOf_int_1);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void boofcv.struct.image.Planar.reorderBands(int...)";
                $__params.add($param_arrayOf_int_1);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of partialSpectrum(int[])
    public boofcv.struct.image.Planar partialSpectrum(int[] $param_arrayOf_int_1) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.partialSpectrum( $param_arrayOf_int_1);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public boofcv.struct.image.Planar<T> boofcv.struct.image.Planar.partialSpectrum(int...)";
                $__params.add($param_arrayOf_int_1);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((boofcv.struct.image.Planar) $__result);
    }

    // Implementation of getNumBands()
    public int getNumBands() {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.getNumBands();
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public int boofcv.struct.image.Planar.getNumBands()";
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((java.lang.Integer) $__result).intValue();
    }

    // Implementation of getBands()
    public boofcv.struct.image.ImageGray[] getBands() {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.getBands();
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public T[] boofcv.struct.image.Planar.getBands()";
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((boofcv.struct.image.ImageGray[]) $__result);
    }

    // Implementation of getBandType()
    public java.lang.Class getBandType() {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.getBandType();
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public java.lang.Class<T> boofcv.struct.image.Planar.getBandType()";
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((java.lang.Class) $__result);
    }

    // Implementation of getBand(int)
    public boofcv.struct.image.ImageGray getBand(int $param_int_1) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.getBand( $param_int_1);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public T boofcv.struct.image.Planar.getBand(int)";
                $__params.add($param_int_1);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((boofcv.struct.image.ImageGray) $__result);
    }

    // Implementation of createNew(int, int)
    public boofcv.struct.image.Planar createNew(int $param_int_1, int $param_int_2) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.createNew( $param_int_1,  $param_int_2);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public boofcv.struct.image.Planar<T> boofcv.struct.image.Planar.createNew(int,int)";
                $__params.add($param_int_1);
                $__params.add($param_int_2);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((boofcv.struct.image.Planar) $__result);
    }

}
