/*
 * Stub for class boofcv.core.image.border.FactoryImageBorder
 * Generated by Sapphire Compiler (sc).
 */
package boofcv.core.image.border.stubs;


public final class FactoryImageBorder_Stub extends boofcv.core.image.border.FactoryImageBorder implements sapphire.common.AppObjectStub {

    sapphire.policy.SapphirePolicy.SapphireClientPolicy $__client = null;
    boolean $__directInvocation = false;

    public FactoryImageBorder_Stub () {
        super();
    }


    public void $__initialize(sapphire.policy.SapphirePolicy.SapphireClientPolicy client) {
        $__client = client;
    }

    public void $__initialize(boolean directInvocation) {
        $__directInvocation = directInvocation;
    }

    public Object $__clone() throws CloneNotSupportedException {
        return super.clone();
    }



    // Implementation of singleValue(Class, double)
    public boofcv.core.image.border.ImageBorder singleValue(java.lang.Class $param_Class_1, double $param_double_2) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.singleValue( $param_Class_1,  $param_double_2);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public <T> boofcv.core.image.border.ImageBorder<T> boofcv.core.image.border.FactoryImageBorder.singleValue(java.lang.Class<T>,double)";
                $__params.add($param_Class_1);
                $__params.add($param_double_2);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((boofcv.core.image.border.ImageBorder) $__result);
    }

    // Implementation of singleValue(ImageGray, double)
    public boofcv.core.image.border.ImageBorder singleValue(boofcv.struct.image.ImageGray $param_ImageGray_1, double $param_double_2) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.singleValue( $param_ImageGray_1,  $param_double_2);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public <T> boofcv.core.image.border.ImageBorder<T> boofcv.core.image.border.FactoryImageBorder.singleValue(T,double)";
                $__params.add($param_ImageGray_1);
                $__params.add($param_double_2);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((boofcv.core.image.border.ImageBorder) $__result);
    }

    // Implementation of single(Class, BorderType)
    public boofcv.core.image.border.ImageBorder single(java.lang.Class $param_Class_1, boofcv.core.image.border.BorderType $param_BorderType_2) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.single( $param_Class_1,  $param_BorderType_2);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public <T> boofcv.core.image.border.ImageBorder<T> boofcv.core.image.border.FactoryImageBorder.single(java.lang.Class<T>,boofcv.core.image.border.BorderType)";
                $__params.add($param_Class_1);
                $__params.add($param_BorderType_2);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((boofcv.core.image.border.ImageBorder) $__result);
    }

    // Implementation of single(ImageGray, BorderType)
    public boofcv.core.image.border.ImageBorder single(boofcv.struct.image.ImageGray $param_ImageGray_1, boofcv.core.image.border.BorderType $param_BorderType_2) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.single( $param_ImageGray_1,  $param_BorderType_2);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public <T> boofcv.core.image.border.ImageBorder<T> boofcv.core.image.border.FactoryImageBorder.single(T,boofcv.core.image.border.BorderType)";
                $__params.add($param_ImageGray_1);
                $__params.add($param_BorderType_2);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((boofcv.core.image.border.ImageBorder) $__result);
    }

    // Implementation of lookupBorderClassType(Class)
    public java.lang.Class lookupBorderClassType(java.lang.Class $param_Class_1) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.lookupBorderClassType( $param_Class_1);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public java.lang.Class<boofcv.core.image.border.ImageBorder> boofcv.core.image.border.FactoryImageBorder.lookupBorderClassType(java.lang.Class<boofcv.struct.image.ImageGray>)";
                $__params.add($param_Class_1);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((java.lang.Class) $__result);
    }

    // Implementation of interleavedValue(Class, double)
    public boofcv.core.image.border.ImageBorder interleavedValue(java.lang.Class $param_Class_1, double $param_double_2) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.interleavedValue( $param_Class_1,  $param_double_2);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public <T> boofcv.core.image.border.ImageBorder<T> boofcv.core.image.border.FactoryImageBorder.interleavedValue(java.lang.Class<T>,double)";
                $__params.add($param_Class_1);
                $__params.add($param_double_2);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((boofcv.core.image.border.ImageBorder) $__result);
    }

    // Implementation of interleavedValue(ImageInterleaved, double)
    public boofcv.core.image.border.ImageBorder interleavedValue(boofcv.struct.image.ImageInterleaved $param_ImageInterleaved_1, double $param_double_2) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.interleavedValue( $param_ImageInterleaved_1,  $param_double_2);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public <T> boofcv.core.image.border.ImageBorder<T> boofcv.core.image.border.FactoryImageBorder.interleavedValue(T,double)";
                $__params.add($param_ImageInterleaved_1);
                $__params.add($param_double_2);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((boofcv.core.image.border.ImageBorder) $__result);
    }

    // Implementation of interleaved(Class, BorderType)
    public boofcv.core.image.border.ImageBorder interleaved(java.lang.Class $param_Class_1, boofcv.core.image.border.BorderType $param_BorderType_2) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.interleaved( $param_Class_1,  $param_BorderType_2);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public <T> boofcv.core.image.border.ImageBorder<T> boofcv.core.image.border.FactoryImageBorder.interleaved(java.lang.Class<T>,boofcv.core.image.border.BorderType)";
                $__params.add($param_Class_1);
                $__params.add($param_BorderType_2);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((boofcv.core.image.border.ImageBorder) $__result);
    }

    // Implementation of interleaved(ImageInterleaved, BorderType)
    public boofcv.core.image.border.ImageBorder interleaved(boofcv.struct.image.ImageInterleaved $param_ImageInterleaved_1, boofcv.core.image.border.BorderType $param_BorderType_2) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.interleaved( $param_ImageInterleaved_1,  $param_BorderType_2);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public <T> boofcv.core.image.border.ImageBorder<T> boofcv.core.image.border.FactoryImageBorder.interleaved(T,boofcv.core.image.border.BorderType)";
                $__params.add($param_ImageInterleaved_1);
                $__params.add($param_BorderType_2);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((boofcv.core.image.border.ImageBorder) $__result);
    }

    // Implementation of genericValue(double, ImageType)
    public boofcv.core.image.border.ImageBorder genericValue(double $param_double_1, boofcv.struct.image.ImageType $param_ImageType_2) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.genericValue( $param_double_1,  $param_ImageType_2);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public <T> boofcv.core.image.border.ImageBorder<T> boofcv.core.image.border.FactoryImageBorder.genericValue(double,boofcv.struct.image.ImageType<T>)";
                $__params.add($param_double_1);
                $__params.add($param_ImageType_2);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((boofcv.core.image.border.ImageBorder) $__result);
    }

    // Implementation of generic(BorderType, ImageType)
    public boofcv.core.image.border.ImageBorder generic(boofcv.core.image.border.BorderType $param_BorderType_1, boofcv.struct.image.ImageType $param_ImageType_2) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.generic( $param_BorderType_1,  $param_ImageType_2);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public <T> boofcv.core.image.border.ImageBorder<T> boofcv.core.image.border.FactoryImageBorder.generic(boofcv.core.image.border.BorderType,boofcv.struct.image.ImageType<T>)";
                $__params.add($param_BorderType_1);
                $__params.add($param_ImageType_2);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((boofcv.core.image.border.ImageBorder) $__result);
    }
}
