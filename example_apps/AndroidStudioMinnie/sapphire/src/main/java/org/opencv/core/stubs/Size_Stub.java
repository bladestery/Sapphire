/*
 * Stub for class org.opencv.core.Size
 * Generated by Sapphire Compiler (sc).
 */
package org.opencv.core.stubs;


public final class Size_Stub extends org.opencv.core.Size implements sapphire.common.AppObjectStub {

    sapphire.policy.SapphirePolicy.SapphireClientPolicy $__client = null;
    boolean $__directInvocation = false;

    public Size_Stub (double $param_double_1, double $param_double_2) {
        super($param_double_1, $param_double_2);
    }

    public Size_Stub (double[] $param_arrayOf_double_1) {
        super($param_arrayOf_double_1);
    }

    public Size_Stub () {
        super();
    }

    public Size_Stub (org.opencv.core.Point $param_Point_1) {
        super($param_Point_1);
    }


    public void $__initialize(sapphire.policy.SapphirePolicy.SapphireClientPolicy client) {
        $__client = client;
    }

    public void $__initialize(boolean directInvocation) {
        $__directInvocation = directInvocation;
    }

    public Object $__clone() throws CloneNotSupportedException {
        return super.clone();
    }



    // Implementation of toString()
    public java.lang.String toString() {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.toString();
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public java.lang.String org.opencv.core.Size.toString()";
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((java.lang.String) $__result);
    }

    // Implementation of set(double[])
    public void set(double[] $param_arrayOf_double_1) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.set( $param_arrayOf_double_1);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void org.opencv.core.Size.set(double[])";
                $__params.add($param_arrayOf_double_1);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of hashCode()
    public int hashCode() {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.hashCode();
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public int org.opencv.core.Size.hashCode()";
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((java.lang.Integer) $__result).intValue();
    }

    // Implementation of equals(Object)
    public boolean equals(java.lang.Object $param_Object_1) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.equals( $param_Object_1);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public boolean org.opencv.core.Size.equals(java.lang.Object)";
                $__params.add($param_Object_1);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((java.lang.Boolean) $__result).booleanValue();
    }

    // Implementation of clone()
    public org.opencv.core.Size clone() {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.clone();
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public org.opencv.core.Size org.opencv.core.Size.clone()";
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((org.opencv.core.Size) $__result);
    }

    // Implementation of area()
    public double area() {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.area();
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public double org.opencv.core.Size.area()";
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((java.lang.Double) $__result).doubleValue();
    }
}
