/*
 * Stub for class org.opencv.samples.facedetect.CascadeManager
 * Generated by Sapphire Compiler (sc).
 */
package org.opencv.samples.facedetect.stubs;


public final class CascadeManager_Stub extends org.opencv.samples.facedetect.CascadeManager implements sapphire.common.AppObjectStub {

    sapphire.policy.SapphirePolicy.SapphireClientPolicy $__client = null;
    boolean $__directInvocation = false;

    public CascadeManager_Stub () {
        super();
    }


    public void $__initialize(sapphire.policy.SapphirePolicy.SapphireClientPolicy client) {
        $__client = client;
    }

    public void $__initialize(boolean directInvocation) {
        $__directInvocation = directInvocation;
    }

    public Object $__clone() throws CloneNotSupportedException {
        return super.clone();
    }



    // Implementation of localize()
    public void localize() {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.localize();
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void org.opencv.samples.facedetect.CascadeManager.localize()";
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of initDBT(String, Integer)
    public void initDBT(java.lang.String $param_String_1, java.lang.Integer $param_Integer_2) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.initDBT( $param_String_1,  $param_Integer_2);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void org.opencv.samples.facedetect.CascadeManager.initDBT(java.lang.String,java.lang.Integer)";
                $__params.add($param_String_1);
                $__params.add($param_Integer_2);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of initCC(String)
    public void initCC(java.lang.String $param_String_1) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.initCC( $param_String_1);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void org.opencv.samples.facedetect.CascadeManager.initCC(java.lang.String)";
                $__params.add($param_String_1);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of getTracker()
    public org.opencv.samples.facedetect.DetectionBasedTracker getTracker() {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.getTracker();
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public org.opencv.samples.facedetect.DetectionBasedTracker org.opencv.samples.facedetect.CascadeManager.getTracker()";
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((org.opencv.samples.facedetect.DetectionBasedTracker) $__result);
    }

    // Implementation of getClassifier()
    public org.opencv.objdetect.CascadeClassifier getClassifier() {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.getClassifier();
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public org.opencv.objdetect.CascadeClassifier org.opencv.samples.facedetect.CascadeManager.getClassifier()";
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((org.opencv.objdetect.CascadeClassifier) $__result);
    }

    // Implementation of empty()
    public boolean empty() {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                $__result = super.empty();
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public boolean org.opencv.samples.facedetect.CascadeManager.empty()";
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ((java.lang.Boolean) $__result).booleanValue();
    }

    // Implementation of detectMultiScale(Mat, MatOfRect, double, int, int, Size, Size)
    public void detectMultiScale(org.opencv.core.Mat $param_Mat_1, org.opencv.core.MatOfRect $param_MatOfRect_2, double $param_double_3, int $param_int_4, int $param_int_5, org.opencv.core.Size $param_Size_6, org.opencv.core.Size $param_Size_7) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.detectMultiScale( $param_Mat_1,  $param_MatOfRect_2,  $param_double_3,  $param_int_4,  $param_int_5,  $param_Size_6,  $param_Size_7);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void org.opencv.samples.facedetect.CascadeManager.detectMultiScale(org.opencv.core.Mat,org.opencv.core.MatOfRect,double,int,int,org.opencv.core.Size,org.opencv.core.Size)";
                $__params.add($param_Mat_1);
                $__params.add($param_MatOfRect_2);
                $__params.add($param_double_3);
                $__params.add($param_int_4);
                $__params.add($param_int_5);
                $__params.add($param_Size_6);
                $__params.add($param_Size_7);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of assignDBT(DetectionBasedTracker)
    public void assignDBT(org.opencv.samples.facedetect.DetectionBasedTracker $param_DetectionBasedTracker_1) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.assignDBT( $param_DetectionBasedTracker_1);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void org.opencv.samples.facedetect.CascadeManager.assignDBT(org.opencv.samples.facedetect.DetectionBasedTracker)";
                $__params.add($param_DetectionBasedTracker_1);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Implementation of assignCC(CascadeClassifier)
    public void assignCC(org.opencv.objdetect.CascadeClassifier $param_CascadeClassifier_1) {
        java.lang.Object $__result = null;
        try {
            if ($__directInvocation)
                super.assignCC( $param_CascadeClassifier_1);
            else {
                java.util.ArrayList<Object> $__params = new java.util.ArrayList<Object>();
                String $__method = "public void org.opencv.samples.facedetect.CascadeManager.assignCC(org.opencv.objdetect.CascadeClassifier)";
                $__params.add($param_CascadeClassifier_1);
                $__result = $__client.onRPC($__method, $__params);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
